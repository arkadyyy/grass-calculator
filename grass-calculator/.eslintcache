[{"C:\\fullstack\\grass-calculator\\grass-calculator\\src\\index.js":"1","C:\\fullstack\\grass-calculator\\grass-calculator\\src\\reportWebVitals.js":"2","C:\\fullstack\\grass-calculator\\grass-calculator\\src\\App.js":"3","C:\\fullstack\\grass-calculator\\grass-calculator\\src\\pages\\Home.js":"4","C:\\fullstack\\grass-calculator\\grass-calculator\\src\\pages\\Summary.js":"5","C:\\fullstack\\grass-calculator\\grass-calculator\\src\\calculator.js":"6","C:\\fullstack\\grass-calculator\\grass-calculator\\src\\components\\Konva.js":"7"},{"size":517,"mtime":1608723026989,"results":"8","hashOfConfig":"9"},{"size":375,"mtime":1608723026991,"results":"10","hashOfConfig":"9"},{"size":371,"mtime":1608843890038,"results":"11","hashOfConfig":"9"},{"size":9296,"mtime":1609059806227,"results":"12","hashOfConfig":"9"},{"size":302,"mtime":1608843809404,"results":"13","hashOfConfig":"9"},{"size":1373,"mtime":1608850030037,"results":"14","hashOfConfig":"9"},{"size":1335,"mtime":1608855904036,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"ieg6kk",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\fullstack\\grass-calculator\\grass-calculator\\src\\index.js",[],["33","34"],"C:\\fullstack\\grass-calculator\\grass-calculator\\src\\reportWebVitals.js",[],"C:\\fullstack\\grass-calculator\\grass-calculator\\src\\App.js",[],"C:\\fullstack\\grass-calculator\\grass-calculator\\src\\pages\\Home.js",["35"],"import \"../App.css\";\r\nimport Konva from \"../components/Konva\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Button, InputGroup, FormControl, Modal, Form } from \"react-bootstrap\";\r\nimport { useEffect, useState } from \"react\";\r\nimport calculateBestOption from \"../calculator\";\r\n\r\nfunction Home({ history }) {\r\n  const [squares, setsquares] = useState([]);\r\n  const [resultForClient, setresultForClient] = useState([]);\r\n  const [x_directionResultForClient, setX_DirectionResultForClient] = useState([]);\r\n  const [y_directionResultForClient, setY_DirectionResultForClient] = useState([]);\r\n\r\n  const [width, setwidth] = useState(0);\r\n  const [length, setlength] = useState(0);\r\n  const [color, setColor] = useState(getRandomColour());\r\n\r\n  //modal state\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  useEffect(() => {\r\n    bestResult();\r\n  }, [squares]);\r\n\r\n  function bestResult() {\r\n    squares.forEach((square) => {\r\n      let result1 = calculateBestOption(square[0] / 100, square[1] / 100);\r\n      let result2 = calculateBestOption(square[1] / 100, square[0] / 100);\r\n      //פחת מינימלי\r\n      if (result1.pchat === result2.pchat) {\r\n        setresultForClient([...resultForClient, result1]);\r\n      } else if (result1.pchat < result2.pchat) {\r\n        setresultForClient([...resultForClient, result1]);\r\n      } else {\r\n        setresultForClient([...resultForClient, result2]);\r\n      }\r\n      //כיוון פריסה\r\n      setX_DirectionResultForClient([...x_directionResultForClient, result1]);\r\n      setY_DirectionResultForClient([...y_directionResultForClient, result2]);\r\n\r\n      // console.log(\"result1:\", result1);\r\n      // console.log(\"result2:\", result2);\r\n      // console.log(\"resultForClient:\", resultForClient);\r\n      // console.log(\"x result:\", x_directionResultForClient);\r\n      // console.log(\"y result:\", y_directionResultForClient);\r\n    });\r\n  }\r\n\r\n\r\n  function getRandomColour(){\r\n    var red = Math.floor(Math.random()* 255);\r\n    var green = Math.floor(Math.random() * 255);\r\n    var blue = Math.floor(Math.random() * 255);\r\n  \r\n    return \"rgb(\"+red+\",\"+green+\",\" +blue+\" )\";  \r\n  }\r\n\r\n  return (\r\n    <div className='App'>\r\n      <Konva squares={squares} setsquares={setsquares} />\r\n\r\n      <InputGroup\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"flex-end\",\r\n        }}\r\n        className='mb-3 p-5'\r\n      >\r\n        <h1>חישוב דשא</h1>\r\n        <Form.Label>\r\n          <strong style={{ textAlign: \"right\" }}>רוחב</strong>\r\n        </Form.Label>\r\n        <FormControl\r\n          placeholder='הכנס רוחב'\r\n          style={{ width: \"35%\", direction: \"rtl\" }}\r\n          aria-label='Default'\r\n          aria-describedby='inputGroup-sizing-default'\r\n          id='width'\r\n          onChange={(e) => {\r\n            setwidth(e.target.value);\r\n          }}\r\n        />\r\n        <Form.Label>\r\n          <strong>אורך</strong>\r\n        </Form.Label>\r\n        <FormControl\r\n          placeholder='הכנס אורך'\r\n          style={{ width: \"35%\", direction: \"rtl\" }}\r\n          aria-label='Default'\r\n          aria-describedby='inputGroup-sizing-default'\r\n          id='length'\r\n          onChange={(e) => {\r\n            setlength(e.target.value);\r\n          }}\r\n        />\r\n        <div className='buttons'>\r\n          <Button\r\n            onClick={() => {\r\n              setColor(getRandomColour());\r\n              // setsquares([...squares, [+width, +length]]);\r\n              setsquares([...squares, [+width, +length,color]]);\r\n\r\n              console.log(width);\r\n              console.log(length);\r\n              setwidth(0);\r\n              setlength(0);\r\n            }}\r\n            className='m-3'\r\n            variant='success'\r\n          >\r\n            הוסף מלבן\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              // console.log(squares);\r\n\r\n              handleShow();\r\n            }}\r\n            className='m-3'\r\n            variant='success'\r\n          >\r\n            חשב\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              setsquares([]);\r\n              setresultForClient([]);\r\n              setwidth(0);\r\n              setlength(0);\r\n            }}\r\n            className='m-3'\r\n            variant='success'\r\n          >\r\n            נקה\r\n          </Button>\r\n        </div>\r\n      </InputGroup>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>תוצאת חישוב</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>מצאנו לך את ההזמנה המומלצת</p>\r\n          <p>פחת מינימלי</p>\r\n          {resultForClient.map((result, index) => (\r\n            <>\r\n              <hr></hr>\r\n              <p>\r\n                <strong> {`תוצאה למלבן ${index + 1}`}</strong>\r\n              </p>\r\n\r\n              {result.opt4.amount >= 1 ? (\r\n                <>\r\n                  <p>{`משטח 4מ ${result.opt4.amount}`}</p>\r\n                  <p>{<p>{`באורך ${result.opt4.length}`}</p>}</p>\r\n                </>\r\n              ) : null}\r\n\r\n              {result.opt3.amount >= 1 ? (\r\n                <>\r\n                  <p>{`משטח 3מ ${result.opt3.amount}`}</p>\r\n                  <p>{<p>{`באורך ${result.opt3.length}`}</p>}</p>\r\n                </>\r\n              ) : null}\r\n\r\n              {result.opt2.amount >= 1 ? (\r\n                <>\r\n                  <p>{`משטח 2מ ${result.opt2.amount}`}</p>\r\n                  <p>{<p>{`באורך ${result.opt2.length}`}</p>}</p>\r\n                </>\r\n              ) : null}\r\n\r\n              <p>{`פחת ${result.pchat}`}</p>\r\n            </>\r\n          ))}\r\n          <hr></hr>\r\n          <p>חישוב לפי כיוון פריסה אחיד אפשרות 1 </p>\r\n          {x_directionResultForClient.map((result, index) => (\r\n            <>\r\n              <p>\r\n                <strong> {`תוצאה למלבן ${index + 1}`}</strong>\r\n              </p>\r\n\r\n              {result.opt4.amount >= 1 ? (\r\n                <>\r\n                  <p>{`משטח 4מ ${result.opt4.amount}`}</p>\r\n                  <p>{<p>{`באורך ${result.opt4.length}`}</p>}</p>\r\n                </>\r\n              ) : null}\r\n\r\n              {result.opt3.amount >= 1 ? (\r\n                <>\r\n                  <p>{`משטח 3מ ${result.opt3.amount}`}</p>\r\n                  <p>{<p>{`באורך ${result.opt3.length}`}</p>}</p>\r\n                </>\r\n              ) : null}\r\n\r\n              {result.opt2.amount >= 1 ? (\r\n                <>\r\n                  <p>{`משטח 2מ ${result.opt2.amount}`}</p>\r\n                  <p>{<p>{`באורך ${result.opt2.length}`}</p>}</p>\r\n                </>\r\n              ) : null}\r\n\r\n              <p>{`פחת ${result.pchat}`}</p>\r\n            </>\r\n          ))}\r\n          <hr></hr>\r\n          <p>חישוב לפי כיוון פריסה אחיד אפשרות 2 </p>\r\n          {y_directionResultForClient.map((result, index) => (\r\n            <>\r\n              <p>\r\n                <strong> {`תוצאה למלבן ${index + 1}`}</strong>\r\n              </p>\r\n\r\n              {result.opt4.amount >= 1 ? (\r\n                <>\r\n                  <p>{`משטח 4מ ${result.opt4.amount}`}</p>\r\n                  <p>{<p>{`באורך ${result.opt4.length}`}</p>}</p>\r\n                </>\r\n              ) : null}\r\n\r\n              {result.opt3.amount >= 1 ? (\r\n                <>\r\n                  <p>{`משטח 3מ ${result.opt3.amount}`}</p>\r\n                  <p>{<p>{`באורך ${result.opt3.length}`}</p>}</p>\r\n                </>\r\n              ) : null}\r\n\r\n              {result.opt2.amount >= 1 ? (\r\n                <>\r\n                  <p>{`משטח 2מ ${result.opt2.amount}`}</p>\r\n                  <p>{<p>{`באורך ${result.opt2.length}`}</p>}</p>\r\n                </>\r\n              ) : null}\r\n\r\n              <p>{`פחת ${result.pchat}`}</p>\r\n            </>\r\n          ))}\r\n\r\n          {/* {sumResultForClient.opt2.width >= 1 ? (\r\n            <>\r\n              <p> משטח ברוחב 2 מטר</p>\r\n              <p> {sumResultForClient.opt2.length} : באורך </p>\r\n            </>\r\n          ) : null}\r\n          {sumResultForClient.opt3.width >= 1 ? (\r\n            <>\r\n              <p> משטח ברוחב 3 מטר</p>\r\n              <p> {sumResultForClient.opt3.length} : באורך </p>\r\n            </>\r\n          ) : null}\r\n          {sumResultForClient.opt4.width >= 1 ? (\r\n            <>\r\n              <p> משטח ברוחב 4 מטר </p>\r\n              <p> {sumResultForClient.opt4.length} : באורך </p>\r\n            </>\r\n          ) : null} */}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant='secondary' onClick={handleClose}>\r\n            חזור ללוח השרטוטים\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              history.push(\"/summary\");\r\n              handleClose();\r\n            }}\r\n            variant='primary'\r\n          >\r\n            הזמן\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\fullstack\\grass-calculator\\grass-calculator\\src\\pages\\Summary.js",[],"C:\\fullstack\\grass-calculator\\grass-calculator\\src\\calculator.js",[],"C:\\fullstack\\grass-calculator\\grass-calculator\\src\\components\\Konva.js",[],["36","37"],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":27,"column":6,"nodeType":"44","endLine":27,"endColumn":15,"suggestions":"45"},{"ruleId":"38","replacedBy":"46"},{"ruleId":"40","replacedBy":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'bestResult'. Either include it or remove the dependency array.","ArrayExpression",["50"],["48"],["49"],"no-global-assign","no-unsafe-negation",{"desc":"51","fix":"52"},"Update the dependencies array to be: [bestResult, squares]",{"range":"53","text":"54"},[949,958],"[bestResult, squares]"]
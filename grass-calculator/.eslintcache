[{"C:\\fullstack\\desha-sintetyi\\grass-calculator\\src\\index.js":"1","C:\\fullstack\\desha-sintetyi\\grass-calculator\\src\\App.js":"2","C:\\fullstack\\desha-sintetyi\\grass-calculator\\src\\reportWebVitals.js":"3","C:\\fullstack\\desha-sintetyi\\grass-calculator\\src\\pages\\Home.js":"4","C:\\fullstack\\desha-sintetyi\\grass-calculator\\src\\PchatWithDirection.js":"5","C:\\fullstack\\desha-sintetyi\\grass-calculator\\src\\minChiburNoDirection.js":"6","C:\\fullstack\\desha-sintetyi\\grass-calculator\\src\\minChiburWithDirection.js":"7","C:\\fullstack\\desha-sintetyi\\grass-calculator\\src\\components\\Konva.js":"8","C:\\fullstack\\desha-sintetyi\\grass-calculator\\src\\chiburCalc.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":382,"mtime":1609757129286,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":29508,"mtime":1609944064063,"results":"14","hashOfConfig":"11"},{"size":774,"mtime":1609245497404,"results":"15","hashOfConfig":"11"},{"size":699,"mtime":1609246440099,"results":"16","hashOfConfig":"11"},{"size":718,"mtime":1609757129288,"results":"17","hashOfConfig":"11"},{"size":6033,"mtime":1609942948125,"results":"18","hashOfConfig":"11"},{"size":3290,"mtime":1609876458398,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"jbplph",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\fullstack\\desha-sintetyi\\grass-calculator\\src\\index.js",[],["41","42"],"C:\\fullstack\\desha-sintetyi\\grass-calculator\\src\\App.js",[],"C:\\fullstack\\desha-sintetyi\\grass-calculator\\src\\reportWebVitals.js",[],"C:\\fullstack\\desha-sintetyi\\grass-calculator\\src\\pages\\Home.js",["43","44","45","46","47"],"C:\\fullstack\\desha-sintetyi\\grass-calculator\\src\\PchatWithDirection.js",["48","49","50","51"],"function PchatWithDirection(arrX, arrY) {\r\n  let resultX = arrX.reduce((acc, curVal) => {\r\n    acc += curVal.pchat;\r\n  }, 0);\r\n  let resultY = arrY.reduce((acc, curVal) => {\r\n    acc += curVal.pchat;\r\n  }, 0);\r\n\r\n  if (resultX === resultY) {\r\n    let resultXConnections = arrX.reduce((acc, curVal) => {\r\n      acc += curVal.opt2 + curVal.opt3 + curVal.opt4;\r\n      \r\n    }, 0);\r\n\r\n    let resultYConnections = arrY.reduce((acc, curVal) => {\r\n      acc += curVal.opt2 + curVal.opt3 + curVal.opt4;\r\n    }, 0);\r\n\r\n    if (resultXConnections >= resultYConnections) {\r\n      return arrY;\r\n    } else {\r\n      return arrX;\r\n    }\r\n  } else {\r\n    if (resultX > resultY) {\r\n      return arrY;\r\n    } else {\r\n      return arrX;\r\n    }\r\n  }\r\n}\r\n\r\nexport default PchatWithDirection;\r\n","C:\\fullstack\\desha-sintetyi\\grass-calculator\\src\\minChiburNoDirection.js",[],"C:\\fullstack\\desha-sintetyi\\grass-calculator\\src\\minChiburWithDirection.js",[],"C:\\fullstack\\desha-sintetyi\\grass-calculator\\src\\components\\Konva.js",["52","53"],"import React, { useEffect, useState } from \"react\";\r\nimport { Stage, Layer, Rect, Text, Group, Arrow } from \"react-konva\";\r\n\r\nconst Konva = ({\r\n  squares,\r\n  type,\r\n  tabKey,\r\n  summary,\r\n  xDirectionSquare,\r\n  yDirectionSquare,\r\n  resultForClientPchat,\r\n}) => {\r\n  // {\r\n  //   opt4: { amount: 0, length: 0 },\r\n  //   opt3: { amount: 0, length: 0 },\r\n  //   opt2: { amount: 0, length: 0 },\r\n  //   pchat: 0,\r\n  // }\r\n  const [arrayUsed, setarrayUsed] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // if (tabKey === \"מינימום חיבורים + כיוון סיב אחיד בין הגלילים\") {\r\n    //   setarrayUsed(summary.minChiburWithDirection);\r\n    // }\r\n    if (tabKey === \"מינימום פחת\") {\r\n      setarrayUsed(resultForClientPchat);\r\n    }\r\n    // if (tabKey === \"מינימום פחת + כיוון סיב אחיד בין הגלילים\") {\r\n    //   setarrayUsed(summary.minPchatWithDirectionSummary);\r\n    // }\r\n    // if (tabKey === \"מינימום חיבורים\") {\r\n    //   setarrayUsed(summary.minChiburNoDirection);\r\n    // }\r\n    console.log(\"xDirectionSquare : \", xDirectionSquare);\r\n    console.log(\"yDirectionSquare : \", yDirectionSquare);\r\n    console.log(\"arrayUsed : \", arrayUsed);\r\n  }, [tabKey]);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Stage\r\n          style={{ border: \"3px solid green\", margin: \"3rem\" }}\r\n          width={window.innerWidth / 2}\r\n          height={window.innerHeight / 2}\r\n        >\r\n          <Layer>\r\n            {squares.map((square, index) => {\r\n              let width = [];\r\n              let length = [];\r\n\r\n              if (arrayUsed.length !== 0) {\r\n                console.log(\"i am here 777\");\r\n                if (\r\n                  arrayUsed[index].opt2.length ||\r\n                  arrayUsed[index].opt3.length ||\r\n                  arrayUsed[index].opt4.length === square[1]\r\n                ) {\r\n                  width[index] =\r\n                    arrayUsed[index].opt2.amount * 2 +\r\n                    arrayUsed[index].opt3.amount * 3 +\r\n                    arrayUsed[index].opt4.amount * 4;\r\n                  length[index] = square[1];\r\n                }\r\n                if (\r\n                  arrayUsed[index].opt2.length ||\r\n                  arrayUsed[index].opt3.length ||\r\n                  arrayUsed[index].opt4.length === square[0]\r\n                ) {\r\n                  width[index] = square[0];\r\n                  length[index] =\r\n                    arrayUsed[index].opt2.amount * 2 +\r\n                    arrayUsed[index].opt3.amount * 3 +\r\n                    arrayUsed[index].opt4.amount * 4;\r\n                }\r\n\r\n                console.log(\"width : \", width);\r\n                console.log(\"length : \", length);\r\n              }\r\n\r\n              return (\r\n                <>\r\n                  <Group draggable>\r\n                    <Arrow\r\n                      x={100}\r\n                      y={-45}\r\n                      points={[0, 110, 0, 150]}\r\n                      // pointerLength={20}\r\n                      // pointerWidth={20}\r\n                      fill='black'\r\n                      stroke='black'\r\n                      strokeWidth={4}\r\n                    />\r\n                    <Arrow\r\n                      x={-285}\r\n                      y={40}\r\n                      points={[460, 0, 500, 0]}\r\n                      // pointerLength={20}\r\n                      // pointerWidth={20}\r\n                      fill='black'\r\n                      stroke='black'\r\n                      strokeWidth={4}\r\n                    />\r\n                    <Text\r\n                      x={110}\r\n                      y={30}\r\n                      text={` ${square[0]} ר`}\r\n                      fontSize={15}\r\n                    />\r\n                    <Text\r\n                      x={75}\r\n                      y={100}\r\n                      text={` ${square[1]} א`}\r\n                      fontSize={15}\r\n                      rotationDeg={270}\r\n                    />\r\n\r\n                    <Rect\r\n                      x={100}\r\n                      y={50}\r\n                      width={square[0] * 30}\r\n                      height={square[1] * 30}\r\n                      fill={square[2]}\r\n                      opacity={0.6}\r\n                      // stroke='black'\r\n                      // strokeWidth='4'\r\n                    />\r\n                    {type === \"bottom\" && (\r\n                      <Rect\r\n                        draggable\r\n                        x={90}\r\n                        y={45}\r\n                        width={width[index] * 30}\r\n                        height={length[index] * 35}\r\n                        fill='transparent'\r\n                        stroke={square[2]}\r\n                        draggable={false}\r\n                        strokeWidth='2'\r\n                        dash={[10, 10]}\r\n                      ></Rect>\r\n                    )}\r\n                    {type === \"bottom\" && (\r\n                      <Text\r\n                        x={10}\r\n                        y={55}\r\n                        text={`אורך מקווקו ${length[index]}`}\r\n                        fontSize={15}\r\n                        fill={\"black\"}\r\n                        rotationDeg={90}\r\n                      />\r\n                    )}\r\n                    {type === \"bottom\" && (\r\n                      <Text\r\n                        x={80}\r\n                        y={0}\r\n                        text={`רוחב מקווקו ${width[index]}`}\r\n                        fontSize={15}\r\n                        fill={\"black\"}\r\n                      />\r\n                    )}\r\n                    <Text\r\n                      x={120}\r\n                      y={80}\r\n                      text={`${index + 1}`}\r\n                      fontSize={15}\r\n                      fill={\"black\"}\r\n                    />\r\n                  </Group>\r\n                </>\r\n              );\r\n            })}\r\n          </Layer>\r\n        </Stage>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Konva;\r\n","C:\\fullstack\\desha-sintetyi\\grass-calculator\\src\\chiburCalc.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":8,"column":3,"nodeType":"60","messageId":"61","endLine":8,"endColumn":8},{"ruleId":"58","severity":1,"message":"62","line":16,"column":3,"nodeType":"60","messageId":"61","endLine":16,"endColumn":14},{"ruleId":"58","severity":1,"message":"63","line":107,"column":10,"nodeType":"60","messageId":"61","endLine":107,"endColumn":20},{"ruleId":"64","severity":1,"message":"65","line":122,"column":6,"nodeType":"66","endLine":122,"endColumn":15,"suggestions":"67"},{"ruleId":"64","severity":1,"message":"68","line":128,"column":6,"nodeType":"66","endLine":128,"endColumn":34,"suggestions":"69"},{"ruleId":"70","severity":1,"message":"71","line":2,"column":43,"nodeType":"72","messageId":"73","endLine":2,"endColumn":45},{"ruleId":"70","severity":1,"message":"71","line":5,"column":43,"nodeType":"72","messageId":"73","endLine":5,"endColumn":45},{"ruleId":"70","severity":1,"message":"71","line":10,"column":56,"nodeType":"72","messageId":"73","endLine":10,"endColumn":58},{"ruleId":"70","severity":1,"message":"71","line":15,"column":56,"nodeType":"72","messageId":"73","endLine":15,"endColumn":58},{"ruleId":"64","severity":1,"message":"74","line":37,"column":6,"nodeType":"66","endLine":37,"endColumn":14,"suggestions":"75"},{"ruleId":"76","severity":1,"message":"77","line":137,"column":25,"nodeType":"78","endLine":137,"endColumn":42},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'Modal' is defined but never used.","Identifier","unusedVar","'CardColumns' is defined but never used.","'titleColor' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'bestResult' and 'summary'. Either include them or remove the dependency array.","ArrayExpression",["81"],"React Hook useEffect has missing dependencies: 'bestMinChiburNoDirection', 'bestMinChiburWithDirection', and 'bestResultPchatWithDirection'. Either include them or remove the dependency array.",["82"],"array-callback-return","Array.prototype.reduce() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'arrayUsed', 'resultForClientPchat', 'xDirectionSquare', and 'yDirectionSquare'. Either include them or remove the dependency array. If 'setarrayUsed' needs the current value of 'resultForClientPchat', you can also switch to useReducer instead of useState and read 'resultForClientPchat' in the reducer.",["83"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},"Update the dependencies array to be: [bestResult, squares, summary]",{"range":"90","text":"91"},"Update the dependencies array to be: [bestMinChiburNoDirection, bestMinChiburWithDirection, bestResultPchatWithDirection, x_directionResultForClient]",{"range":"92","text":"93"},"Update the dependencies array to be: [arrayUsed, resultForClientPchat, tabKey, xDirectionSquare, yDirectionSquare]",{"range":"94","text":"95"},[3441,3450],"[bestResult, squares, summary]",[3587,3615],"[bestMinChiburNoDirection, bestMinChiburWithDirection, bestResultPchatWithDirection, x_directionResultForClient]",[1135,1143],"[arrayUsed, resultForClientPchat, tabKey, xDirectionSquare, yDirectionSquare]"]
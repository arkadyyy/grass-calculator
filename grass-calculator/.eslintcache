[{"C:\\fullstack\\grass-calculator\\grass-calculator\\src\\index.js":"1","C:\\fullstack\\grass-calculator\\grass-calculator\\src\\reportWebVitals.js":"2","C:\\fullstack\\grass-calculator\\grass-calculator\\src\\App.js":"3","C:\\fullstack\\grass-calculator\\grass-calculator\\src\\pages\\Summary.js":"4","C:\\fullstack\\grass-calculator\\grass-calculator\\src\\pages\\Home.js":"5","C:\\fullstack\\grass-calculator\\grass-calculator\\src\\calculator.js":"6","C:\\fullstack\\grass-calculator\\grass-calculator\\src\\PchatWithDirection.js":"7","C:\\fullstack\\grass-calculator\\grass-calculator\\src\\chiburCalc.js":"8","C:\\fullstack\\grass-calculator\\grass-calculator\\src\\minChiburNoDirection.js":"9","C:\\fullstack\\grass-calculator\\grass-calculator\\src\\components\\Konva.js":"10"},{"size":517,"mtime":1608723026989,"results":"11","hashOfConfig":"12"},{"size":375,"mtime":1608723026991,"results":"13","hashOfConfig":"12"},{"size":371,"mtime":1608843890038,"results":"14","hashOfConfig":"12"},{"size":302,"mtime":1608843809404,"results":"15","hashOfConfig":"12"},{"size":11470,"mtime":1609099237268,"results":"16","hashOfConfig":"12"},{"size":1373,"mtime":1608850030037,"results":"17","hashOfConfig":"12"},{"size":751,"mtime":1609063597403,"results":"18","hashOfConfig":"12"},{"size":2953,"mtime":1609099237256,"results":"19","hashOfConfig":"12"},{"size":668,"mtime":1609108794839,"results":"20","hashOfConfig":"12"},{"size":1712,"mtime":1609060768290,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"ieg6kk",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\fullstack\\grass-calculator\\grass-calculator\\src\\index.js",[],["45","46"],"C:\\fullstack\\grass-calculator\\grass-calculator\\src\\reportWebVitals.js",[],"C:\\fullstack\\grass-calculator\\grass-calculator\\src\\App.js",[],"C:\\fullstack\\grass-calculator\\grass-calculator\\src\\pages\\Summary.js",[],"C:\\fullstack\\grass-calculator\\grass-calculator\\src\\pages\\Home.js",["47","48","49","50","51","52"],"import \"../App.css\";\r\nimport Konva from \"../components/Konva\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Button, InputGroup, FormControl, Modal, Form } from \"react-bootstrap\";\r\nimport { useEffect, useState } from \"react\";\r\nimport calculateBestOption from \"../calculator\";\r\nimport ChiburCalc from \"../chiburCalc\";\r\nimport PchatWithDirection from \"../PchatWithDirection\";\r\nimport MinChiburNoDirection from \"../minChiburNoDirection\";\r\n\r\nfunction Home({ history }) {\r\n  const [squares, setsquares] = useState([]);\r\n  const [resultForClientPchat, setresultForClientPchat] = useState([]);\r\n  const [resultPchatWithDirection, setresultPchatWithDirection] = useState([]);\r\n  const [resultMinChiburNoDirection, setresultMinChiburNoDirection] = useState(\r\n    []\r\n  );\r\n  const [x_directionResultForClient, setX_DirectionResultForClient] = useState(\r\n    []\r\n  );\r\n  const [y_directionResultForClient, setY_DirectionResultForClient] = useState(\r\n    []\r\n  );\r\n  //input values\r\n  const [width, setwidth] = useState(0);\r\n  const [length, setlength] = useState(0);\r\n  const [searchBy, setsearchBy] = useState({\r\n    Pchat: false,\r\n    Direction: false,\r\n    MinCuts: false,\r\n  });\r\n\r\n  //squares color\r\n  const [color, setColor] = useState(getRandomColour());\r\n\r\n  //modal state\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  useEffect(() => {\r\n    bestResult();\r\n  }, [squares]);\r\n\r\n  useEffect(() => {\r\n    bestResultPchatWithDirection();\r\n  }, [x_directionResultForClient]);\r\n\r\n  useEffect(() => {\r\n    bestMinChiburNoDirection();\r\n  }, [x_directionResultForClient]);\r\n\r\n  function bestMinChiburNoDirection() {\r\n    let result4 = MinChiburNoDirection(\r\n      x_directionResultForClient,\r\n      y_directionResultForClient\r\n    );\r\n    console.log(\"result 4 : \", result4);\r\n    setresultMinChiburNoDirection(result4);\r\n  }\r\n\r\n  function bestResultPchatWithDirection() {\r\n    let result3 = PchatWithDirection(\r\n      x_directionResultForClient,\r\n      y_directionResultForClient\r\n    );\r\n\r\n    // console.log(\"result3:\", result3);\r\n    setresultPchatWithDirection(result3);\r\n  }\r\n\r\n  function bestResult() {\r\n    squares.forEach((square) => {\r\n      //פחת מינימלי\r\n      let result1 = ChiburCalc(square[0] / 100, square[1] / 100);\r\n      let result2 = ChiburCalc(square[1] / 100, square[0] / 100);\r\n      if (result1.pchat === result2.pchat) {\r\n        setresultForClientPchat([...resultForClientPchat, result1]);\r\n      } else if (result1.pchat < result2.pchat) {\r\n        setresultForClientPchat([...resultForClientPchat, result1]);\r\n      } else {\r\n        setresultForClientPchat([...resultForClientPchat, result2]);\r\n      }\r\n\r\n      //כיוון פריסה\r\n      setX_DirectionResultForClient([...x_directionResultForClient, result1]);\r\n      setY_DirectionResultForClient([...y_directionResultForClient, result2]);\r\n\r\n      //חיבור מינימלי\r\n\r\n      console.log(\"result1:\", result1);\r\n      console.log(\"result2:\", result2);\r\n      console.log(\"resultForClient:\", resultForClientPchat);\r\n      console.log(\"x axis results:\", x_directionResultForClient);\r\n      console.log(\"y axis results:\", y_directionResultForClient);\r\n    });\r\n  }\r\n\r\n  function getRandomColour() {\r\n    var red = Math.floor(Math.random() * 255);\r\n    var green = Math.floor(Math.random() * 255);\r\n    var blue = Math.floor(Math.random() * 255);\r\n\r\n    return \"rgb(\" + red + \",\" + green + \",\" + blue + \" )\";\r\n  }\r\n  return (\r\n    <div className='App'>\r\n      <Konva squares={squares} setsquares={setsquares} />\r\n\r\n      <InputGroup\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"flex-end\",\r\n        }}\r\n        className='mb-3 p-5'\r\n      >\r\n        <h1>חישוב דשא</h1>\r\n        <Form.Label>\r\n          <strong style={{ textAlign: \"right\" }}>רוחב</strong>\r\n        </Form.Label>\r\n        <FormControl\r\n          placeholder='הכנס רוחב'\r\n          style={{ width: \"35%\", direction: \"rtl\" }}\r\n          aria-label='Default'\r\n          aria-describedby='inputGroup-sizing-default'\r\n          id='width'\r\n          onChange={(e) => {\r\n            setwidth(e.target.value);\r\n          }}\r\n        />\r\n        <Form.Label>\r\n          <strong>אורך</strong>\r\n        </Form.Label>\r\n        <FormControl\r\n          placeholder='הכנס אורך'\r\n          style={{ width: \"35%\", direction: \"rtl\" }}\r\n          aria-label='Default'\r\n          aria-describedby='inputGroup-sizing-default'\r\n          id='length'\r\n          onChange={(e) => {\r\n            setlength(e.target.value);\r\n          }}\r\n        />\r\n        <Form style={{ display: \"flex\" }}>\r\n          {[\"פחת\", \"חיתוכים\", \"כיוון\"].map((type) => (\r\n            <div\r\n              style={{\r\n                direction: \"rtl\",\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                margin: \" 1rem 0.3rem\",\r\n              }}\r\n              key={`checkbox`}\r\n              className='mb-3'\r\n            >\r\n              <Form.Label>\r\n                <strong>{type}</strong>\r\n              </Form.Label>\r\n              <Form.Check type='checkbox' id={`default-${type}`} />\r\n            </div>\r\n          ))}\r\n        </Form>\r\n        <div className='buttons'>\r\n          <Button\r\n            onClick={() => {\r\n              setColor(getRandomColour());\r\n              setsquares([...squares, [+width, +length, color]]);\r\n              console.log(width);\r\n              console.log(length);\r\n              setwidth(0);\r\n              setlength(0);\r\n            }}\r\n            className='m-3'\r\n            variant='success'\r\n          >\r\n            הוסף מלבן\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              // console.log(squares);\r\n              console.log(\r\n                \"resultPchatWithDirection : \",\r\n                resultPchatWithDirection\r\n              );\r\n              console.log(\r\n                \"resultMinChiburNoDirection : \",\r\n                resultMinChiburNoDirection\r\n              );\r\n              handleShow();\r\n            }}\r\n            className='m-3'\r\n            variant='success'\r\n          >\r\n            חשב\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              setsquares([]);\r\n              setresultForClientPchat([]);\r\n              setwidth(0);\r\n              setlength(0);\r\n            }}\r\n            className='m-3'\r\n            variant='success'\r\n          >\r\n            נקה\r\n          </Button>\r\n        </div>\r\n      </InputGroup>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            {\" \"}\r\n            תוצאת חישוב\r\n            <p>מצאנו לך את ההזמנה המומלצת</p>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>פחת מינימלי</p>\r\n          {resultForClientPchat.map((result, index) => (\r\n            <>\r\n              <hr></hr>\r\n              <p>\r\n                <strong> {`תוצאה למלבן ${index + 1}`}</strong>\r\n              </p>\r\n\r\n              {result.opt4.amount >= 1 ? (\r\n                <>\r\n                  <p>{`משטח 4מ ${result.opt4.amount}`}</p>\r\n                  <p>{<p>{`באורך ${result.opt4.length}`}</p>}</p>\r\n                </>\r\n              ) : null}\r\n\r\n              {result.opt3.amount >= 1 ? (\r\n                <>\r\n                  <p>{`משטח 3מ ${result.opt3.amount}`}</p>\r\n                  <p>{<p>{`באורך ${result.opt3.length}`}</p>}</p>\r\n                </>\r\n              ) : null}\r\n\r\n              {result.opt2.amount >= 1 ? (\r\n                <>\r\n                  <p>{`משטח 2מ ${result.opt2.amount}`}</p>\r\n                  <p>{<p>{`באורך ${result.opt2.length}`}</p>}</p>\r\n                </>\r\n              ) : null}\r\n\r\n              <p>{`פחת ${result.pchat}`}</p>\r\n            </>\r\n          ))}\r\n          <hr></hr>\r\n          <p>חישוב לפי כיוון פריסה אחיד אפשרות 1 </p>\r\n          {x_directionResultForClient.map((result, index) => (\r\n            <>\r\n              <p>\r\n                <strong> {`תוצאה למלבן ${index + 1}`}</strong>\r\n              </p>\r\n\r\n              {result.opt4.amount >= 1 ? (\r\n                <>\r\n                  <p>{`משטח 4מ ${result.opt4.amount}`}</p>\r\n                  <p>{<p>{`באורך ${result.opt4.length}`}</p>}</p>\r\n                </>\r\n              ) : null}\r\n\r\n              {result.opt3.amount >= 1 ? (\r\n                <>\r\n                  <p>{`משטח 3מ ${result.opt3.amount}`}</p>\r\n                  <p>{<p>{`באורך ${result.opt3.length}`}</p>}</p>\r\n                </>\r\n              ) : null}\r\n\r\n              {result.opt2.amount >= 1 ? (\r\n                <>\r\n                  <p>{`משטח 2מ ${result.opt2.amount}`}</p>\r\n                  <p>{<p>{`באורך ${result.opt2.length}`}</p>}</p>\r\n                </>\r\n              ) : null}\r\n\r\n              <p>{`פחת ${result.pchat}`}</p>\r\n            </>\r\n          ))}\r\n          <hr></hr>\r\n          <p>חישוב לפי כיוון פריסה אחיד אפשרות 2 </p>\r\n          {y_directionResultForClient.map((result, index) => (\r\n            <>\r\n              <p>\r\n                <strong> {`תוצאה למלבן ${index + 1}`}</strong>\r\n              </p>\r\n\r\n              {result.opt4.amount >= 1 ? (\r\n                <>\r\n                  <p>{`משטח 4מ ${result.opt4.amount}`}</p>\r\n                  <p>{<p>{`באורך ${result.opt4.length}`}</p>}</p>\r\n                </>\r\n              ) : null}\r\n\r\n              {result.opt3.amount >= 1 ? (\r\n                <>\r\n                  <p>{`משטח 3מ ${result.opt3.amount}`}</p>\r\n                  <p>{<p>{`באורך ${result.opt3.length}`}</p>}</p>\r\n                </>\r\n              ) : null}\r\n\r\n              {result.opt2.amount >= 1 ? (\r\n                <>\r\n                  <p>{`משטח 2מ ${result.opt2.amount}`}</p>\r\n                  <p>{<p>{`באורך ${result.opt2.length}`}</p>}</p>\r\n                </>\r\n              ) : null}\r\n\r\n              <p>{`פחת ${result.pchat}`}</p>\r\n            </>\r\n          ))}\r\n\r\n          {/* {sumResultForClient.opt2.width >= 1 ? (\r\n            <>\r\n              <p> משטח ברוחב 2 מטר</p>\r\n              <p> {sumResultForClient.opt2.length} : באורך </p>\r\n            </>\r\n          ) : null}\r\n          {sumResultForClient.opt3.width >= 1 ? (\r\n            <>\r\n              <p> משטח ברוחב 3 מטר</p>\r\n              <p> {sumResultForClient.opt3.length} : באורך </p>\r\n            </>\r\n          ) : null}\r\n          {sumResultForClient.opt4.width >= 1 ? (\r\n            <>\r\n              <p> משטח ברוחב 4 מטר </p>\r\n              <p> {sumResultForClient.opt4.length} : באורך </p>\r\n            </>\r\n          ) : null} */}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant='secondary' onClick={handleClose}>\r\n            חזור ללוח השרטוטים\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              history.push(\"/summary\");\r\n              handleClose();\r\n            }}\r\n            variant='primary'\r\n          >\r\n            הזמן\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\fullstack\\grass-calculator\\grass-calculator\\src\\calculator.js",[],"C:\\fullstack\\grass-calculator\\grass-calculator\\src\\PchatWithDirection.js",["53","54","55","56"],"function PchatWithDirection(arrX, arrY) {\r\n  let resultX = arrX.reduce((acc, curVal) => {\r\n    acc += curVal.pchat;\r\n  }, 0);\r\n  let resultY = arrY.reduce((acc, curVal) => {\r\n    acc += curVal.pchat;\r\n  }, 0);\r\n\r\n  if (resultX === resultY) {\r\n    let resultXConnections = arrX.reduce((acc, curVal) => {\r\n      acc += curVal.opt2 + curVal.opt3 + curVal.opt4;\r\n      \r\n    }, 0);\r\n\r\n   let resultYConnections = arrY.reduce((acc, curVal) => {\r\n    acc += curVal.opt2 + curVal.opt3 + curVal.opt4;\r\n    }, 0);\r\n\r\n    if (resultXConnections >= resultYConnections) {\r\n      return arrY;\r\n    } else {\r\n      return arrX;\r\n    }\r\n  } else if (resultX > resultY) {\r\n    return arrY;\r\n  } else {\r\n    return arrX;\r\n  }\r\n}\r\n\r\nexport default PchatWithDirection;\r\n","C:\\fullstack\\grass-calculator\\grass-calculator\\src\\chiburCalc.js",[],"C:\\fullstack\\grass-calculator\\grass-calculator\\src\\minChiburNoDirection.js",[],"C:\\fullstack\\grass-calculator\\grass-calculator\\src\\components\\Konva.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":6,"column":8,"nodeType":"63","messageId":"64","endLine":6,"endColumn":27},{"ruleId":"61","severity":1,"message":"65","line":27,"column":10,"nodeType":"63","messageId":"64","endLine":27,"endColumn":18},{"ruleId":"61","severity":1,"message":"66","line":27,"column":20,"nodeType":"63","messageId":"64","endLine":27,"endColumn":31},{"ruleId":"67","severity":1,"message":"68","line":45,"column":6,"nodeType":"69","endLine":45,"endColumn":15,"suggestions":"70"},{"ruleId":"67","severity":1,"message":"71","line":49,"column":6,"nodeType":"69","endLine":49,"endColumn":34,"suggestions":"72"},{"ruleId":"67","severity":1,"message":"73","line":53,"column":6,"nodeType":"69","endLine":53,"endColumn":34,"suggestions":"74"},{"ruleId":"75","severity":1,"message":"76","line":2,"column":43,"nodeType":"77","messageId":"78","endLine":2,"endColumn":45},{"ruleId":"75","severity":1,"message":"76","line":5,"column":43,"nodeType":"77","messageId":"78","endLine":5,"endColumn":45},{"ruleId":"75","severity":1,"message":"76","line":10,"column":56,"nodeType":"77","messageId":"78","endLine":10,"endColumn":58},{"ruleId":"75","severity":1,"message":"76","line":15,"column":55,"nodeType":"77","messageId":"78","endLine":15,"endColumn":57},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'calculateBestOption' is defined but never used.","Identifier","unusedVar","'searchBy' is assigned a value but never used.","'setsearchBy' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'bestResult'. Either include it or remove the dependency array.","ArrayExpression",["81"],"React Hook useEffect has a missing dependency: 'bestResultPchatWithDirection'. Either include it or remove the dependency array.",["82"],"React Hook useEffect has a missing dependency: 'bestMinChiburNoDirection'. Either include it or remove the dependency array.",["83"],"array-callback-return","Array.prototype.reduce() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},"Update the dependencies array to be: [bestResult, squares]",{"range":"90","text":"91"},"Update the dependencies array to be: [bestResultPchatWithDirection, x_directionResultForClient]",{"range":"92","text":"93"},"Update the dependencies array to be: [bestMinChiburNoDirection, x_directionResultForClient]",{"range":"94","text":"95"},[1467,1476],"[bestResult, squares]",[1545,1573],"[bestResultPchatWithDirection, x_directionResultForClient]",[1638,1666],"[bestMinChiburNoDirection, x_directionResultForClient]"]
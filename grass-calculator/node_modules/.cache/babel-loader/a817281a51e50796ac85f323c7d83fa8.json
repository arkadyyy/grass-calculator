{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\fullstack\\\\grass-calculator\\\\grass-calculator\\\\src\\\\components\\\\Konva.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Stage, Layer, Rect, Text, Group, Arrow, Line } from \"react-konva\";\n\nconst Konva = ({\n  squares,\n  setsquares,\n  type,\n  tabKey,\n  summary,\n  xDirectionSquare,\n  yDirectionSquare,\n  resultForClientPchat,\n  resultPchatWithDirection,\n  resultMinChiburWithDirection,\n  resultMinChiburNoDirection\n}) => {\n  _s();\n\n  const [arrayUsed, setarrayUsed] = useState([]);\n  const [konvasquares, setkonvasquares] = useState(squares);\n  const [isDragging, setisDragging] = useState(false);\n  useEffect(() => {\n    if (tabKey === \"מינימום חיבורים + כיוון סיב אחיד בין הגלילים\") {\n      setarrayUsed(resultMinChiburWithDirection);\n    }\n\n    if (tabKey === \"מינימום פחת\") {\n      setarrayUsed(resultForClientPchat);\n    }\n\n    if (tabKey === \"מינימום פחת + כיוון סיב אחיד בין הגלילים\") {\n      setarrayUsed(resultPchatWithDirection);\n    }\n\n    if (tabKey === \"מינימום חיבורים\") {\n      setarrayUsed(resultMinChiburNoDirection);\n    }\n\n    console.log(\"xDirectionSquare : \", xDirectionSquare);\n    console.log(\"yDirectionSquare : \", yDirectionSquare);\n    console.log(\"arrayUsed : \", arrayUsed);\n  }, [tabKey]);\n\n  function testFunc(e) {\n    console.log(e.target);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 30\n      },\n      children: /*#__PURE__*/_jsxDEV(Stage, {\n        style: {\n          border: \"1px solid #333\",\n          marginLeft: \"5rem\",\n          marginRight: \"5rem\",\n          borderRadius: \"5px\"\n        },\n        width: window.innerWidth,\n        height: window.innerHeight,\n        children: /*#__PURE__*/_jsxDEV(Layer, {\n          children: [type === \"top\" && squares.map((square, index) => {\n            let width = [];\n            let length = [];\n            let arrowDirection = [];\n\n            if (arrayUsed.length !== 0) {\n              if (arrayUsed[index].opt2.length === square[1] || arrayUsed[index].opt3.length === square[1] || arrayUsed[index].opt4.length === square[1]) {\n                width[index] = arrayUsed[index].opt2.amount * 2 + arrayUsed[index].opt3.amount * 3 + arrayUsed[index].opt4.amount * 4;\n                length[index] = square[1];\n                arrowDirection[index] = \"vertical\";\n              } else if (arrayUsed[index].opt2.length === square[0] || arrayUsed[index].opt3.length === square[0] || arrayUsed[index].opt4.length === square[0]) {\n                width[index] = square[0];\n                length[index] = arrayUsed[index].opt2.amount * 2 + arrayUsed[index].opt3.amount * 3 + arrayUsed[index].opt4.amount * 4;\n                arrowDirection[index] = \"horizantal\";\n              }\n            }\n\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(Group, {\n                onDragEnd: e => {\n                  console.log(e.target.absolutePosition());\n                  console.log(e.target);\n                  console.log(\"squares : \", squares);\n                  let squaresOriginal = [...squares];\n                  squaresOriginal[index][3] = e.target.absolutePosition().x;\n                  squaresOriginal[index][4] = e.target.absolutePosition().y;\n                  setkonvasquares(squaresOriginal);\n                },\n                draggable: true,\n                children: [/*#__PURE__*/_jsxDEV(Text, {\n                  offsetX: -70,\n                  offsetY: -100,\n                  text: ` ${square[0]} רוחב`,\n                  fontSize: 15\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  rotation: 270,\n                  offsetX: 170,\n                  offsetY: -50,\n                  text: ` ${square[1]} אורך`,\n                  fontSize: 15\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Rect, {\n                  onClick: () => {\n                    console.log(isDragging);\n                  },\n                  onDragMove: e => {\n                    setisDragging(true);\n                  },\n                  onDragStart: event => {\n                    setisDragging(true);\n                  },\n                  x: 50,\n                  y: 100,\n                  width: square[0] * 30,\n                  height: square[1] * 30,\n                  fill: square[2],\n                  opacity: 0.6\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 21\n              }, this)\n            }, void 0, false);\n          }), type === \"bottom\" && konvasquares.map((square, index) => {\n            let width = [];\n            let length = [];\n            let arrowDirection = []; //4 - 140\n            //3 - 105\n            //2 - 70\n\n            let lineRenderArr = [];\n            let numberRenderArr = [];\n            arrayUsed.forEach(square => {\n              let opt4Amount = +square.opt4.amount;\n              let opt3Amount = +square.opt3.amount;\n              let opt2Amount = +square.opt2.amount;\n              let squareLines = [];\n              let renderedNumbers = [];\n\n              while (opt4Amount > 0) {\n                if (squareLines.length > 0) {\n                  squareLines.push(+squareLines[squareLines.length - 1] + 110);\n                } else {\n                  squareLines.push(110);\n                }\n\n                renderedNumbers.push(4);\n                opt4Amount--;\n              }\n\n              while (opt3Amount > 0) {\n                if (squareLines.length > 0) {\n                  squareLines.push(+squareLines[squareLines.length - 1] + 95);\n                } else {\n                  squareLines.push(95);\n                }\n\n                renderedNumbers.push(3);\n                opt3Amount--;\n              }\n\n              while (opt2Amount > 0) {\n                if (squareLines.length > 0) {\n                  squareLines.push(+squareLines[squareLines.length - 1] + 30);\n                } else {\n                  squareLines.push(30);\n                }\n\n                renderedNumbers.push(2);\n                opt2Amount--;\n              }\n\n              console.log(\"lineRenderArr : \", lineRenderArr);\n              lineRenderArr.push(squareLines);\n              numberRenderArr.push(renderedNumbers);\n            });\n            lineRenderArr.forEach(arr => {\n              arr.pop();\n            });\n\n            if (arrayUsed.length !== 0) {\n              if (arrayUsed[index].opt2.length === square[1] || arrayUsed[index].opt3.length === square[1] || arrayUsed[index].opt4.length === square[1]) {\n                width[index] = arrayUsed[index].opt2.amount * 2 + arrayUsed[index].opt3.amount * 3 + arrayUsed[index].opt4.amount * 4;\n                length[index] = square[1];\n                arrowDirection[index] = \"vertical\";\n              } else if (arrayUsed[index].opt2.length === square[0] || arrayUsed[index].opt3.length === square[0] || arrayUsed[index].opt4.length === square[0]) {\n                width[index] = square[0];\n                length[index] = arrayUsed[index].opt2.amount * 2 + arrayUsed[index].opt3.amount * 3 + arrayUsed[index].opt4.amount * 4;\n                arrowDirection[index] = \"horizantal\";\n              }\n            }\n\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(Group, {\n                draggable: true,\n                children: [arrowDirection[index] === \"vertical\" && /*#__PURE__*/_jsxDEV(Arrow, {\n                  x: square[3],\n                  y: square[4],\n                  offsetX: -30,\n                  offsetY: 30,\n                  points: [0, 45, 0, 70],\n                  width: 30,\n                  pointerLength: 5,\n                  pointerWidth: 5,\n                  stroke: \"darkgreen\",\n                  fill: \"darkgreen\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 25\n                }, this), arrowDirection[index] === \"horizantal\" && /*#__PURE__*/_jsxDEV(Arrow, {\n                  x: square[3],\n                  y: square[4],\n                  offsetY: -30,\n                  points: [30, 0, 50, 0],\n                  pointerLength: 5,\n                  pointerWidth: 5,\n                  stroke: \"darkgreen\",\n                  fill: \"darkgreen\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 25\n                }, this), arrowDirection[index] === \"horizantal\" && /*#__PURE__*/_jsxDEV(Text, {\n                  x: square[3],\n                  y: square[4],\n                  offsetX: -25,\n                  offsetY: 0,\n                  text: `אורך ${square[0]} `,\n                  fontSize: 15\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 25\n                }, this), arrowDirection[index] === \"vertical\" && /*#__PURE__*/_jsxDEV(Text, {\n                  x: square[3],\n                  y: square[4],\n                  rotation: 270,\n                  offsetX: 80,\n                  offsetY: 0,\n                  text: ` אורך ${square[1]} `,\n                  fontSize: 15\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 25\n                }, this), arrowDirection[index] === \"vertical\" && lineRenderArr.length !== 0 && lineRenderArr[index].map(pos => /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Line, {\n                    x: square[3],\n                    y: square[4],\n                    draggable: true,\n                    points: [pos, 0, pos, 32],\n                    stroke: \"darkgreen\",\n                    strokeWidth: \"6\",\n                    dash: [10, 10]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 29\n                  }, this), lineRenderArr[index].indexOf(pos) + 1 === lineRenderArr[index].length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(Text, {\n                      fontStyle: \"bold\",\n                      textDecoration: \"underline\",\n                      x: square[3],\n                      y: square[4],\n                      offsetX: arrayUsed[index].opt4.amount > 0 ? -pos - 15 : arrayUsed[index].opt3.amount > 0 ? -pos - 15 : arrayUsed[index].opt2.amount > 0 ? -pos - 15 : null,\n                      text: \"גליל\" + numberRenderArr[index][lineRenderArr[index].indexOf(pos) + 1],\n                      fontSize: 15,\n                      fill: \"black\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 304,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(Text, {\n                      fontStyle: \"bold\",\n                      textDecoration: \"underline\",\n                      x: square[3],\n                      y: square[4],\n                      offsetX: arrayUsed[index].opt4.amount > 0 ? -pos + 50 : arrayUsed[index].opt3.amount > 0 ? -pos + 50 : arrayUsed[index].opt2.amount > 0 ? -pos + 50 : null,\n                      text: \"גליל\" + numberRenderArr[index][lineRenderArr[index].indexOf(pos)],\n                      fontSize: 15\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 328,\n                      columnNumber: 33\n                    }, this), lineRenderArr[index].forEach(arr => console.log(\"arr : \", arr))]\n                  }, void 0, true) : /*#__PURE__*/_jsxDEV(Text, {\n                    fontStyle: \"bold\",\n                    textDecoration: \"underline\",\n                    x: square[3],\n                    y: square[4],\n                    offsetX: arrayUsed[index].opt4.amount > 0 ? -pos + 50 : arrayUsed[index].opt3.amount > 0 ? -pos + 50 : arrayUsed[index].opt2.amount > 0 ? -pos + 50 : null,\n                    text: \"גליל\" + numberRenderArr[index][lineRenderArr[index].indexOf(pos)],\n                    fontSize: 15\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 356,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true)), arrowDirection[index] === \"vertical\" && lineRenderArr[index].length === 0 && /*#__PURE__*/_jsxDEV(Text, {\n                  fontStyle: \"bold\",\n                  textDecoration: \"underline\",\n                  x: square[3],\n                  y: square[4],\n                  offsetX: -40,\n                  text: arrayUsed[index].opt4.amount > 0 ? \"גליל 4  \" : arrayUsed[index].opt3.amount > 0 ? \"גליל 3\" : arrayUsed[index].opt2.amount > 0 ? \"גליל 2\" : null,\n                  fontSize: 15\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 27\n                }, this), arrowDirection[index] === \"horizantal\" && lineRenderArr.length !== 0 && lineRenderArr[index].map(pos => /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(Group, {\n                    children: [/*#__PURE__*/_jsxDEV(Line, {\n                      x: square[3],\n                      y: square[4],\n                      draggable: true,\n                      points: [0, pos, 32, pos],\n                      stroke: \"darkgreen\",\n                      strokeWidth: \"6\",\n                      dash: [10, 10]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 409,\n                      columnNumber: 31\n                    }, this), lineRenderArr[index].indexOf(pos) + 1 === lineRenderArr[index].length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(Text, {\n                        fontStyle: \"bold\",\n                        textDecoration: \"underline\",\n                        rotation: 270,\n                        x: square[3],\n                        y: square[4],\n                        offsetX: arrayUsed[index].opt4.amount > 0 ? pos - 60 : arrayUsed[index].opt3.amount > 0 ? pos - 60 : arrayUsed[index].opt2.amount > 0 ? pos - 60 : null,\n                        text: \"גליל\" + numberRenderArr[index][lineRenderArr[index].indexOf(pos)],\n                        fontSize: 15\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 421,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(Text, {\n                        fontStyle: \"bold\",\n                        textDecoration: \"underline\",\n                        rotation: 270,\n                        x: square[3],\n                        y: square[4],\n                        offsetX: arrayUsed[index].opt4.amount > 0 ? pos + 50 : arrayUsed[index].opt3.amount > 0 ? pos + 50 : arrayUsed[index].opt2.amount > 0 ? pos + 50 : null,\n                        text: \"גליל\" + numberRenderArr[index][lineRenderArr[index].indexOf(pos) + 1],\n                        fontSize: 15\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 445,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true) : /*#__PURE__*/_jsxDEV(Text, {\n                      fontStyle: \"bold\",\n                      textDecoration: \"underline\",\n                      rotation: 270,\n                      x: square[3],\n                      y: square[4],\n                      offsetX: arrayUsed[index].opt4.amount > 0 ? pos - 70 : arrayUsed[index].opt3.amount > 0 ? pos - 70 : arrayUsed[index].opt2.amount > 0 ? pos - 70 : null,\n                      text: \"גליל\" + numberRenderArr[index][lineRenderArr[index].indexOf(pos)],\n                      fontSize: 15\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 470,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 408,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false)), arrowDirection[index] === \"horizantal\" && lineRenderArr[index].length === 0 && /*#__PURE__*/_jsxDEV(Text, {\n                  fontStyle: \"bold\",\n                  textDecoration: \"underline\",\n                  x: square[3],\n                  y: square[4] // offsetY={-40}\n                  ,\n                  offsetX: 60,\n                  rotationDeg: 270,\n                  text: arrayUsed[index].opt4.amount > 0 ? \"גליל 4  \" : arrayUsed[index].opt3.amount > 0 ? \"גליל 3\" : arrayUsed[index].opt2.amount > 0 ? \"גליל 2\" : null,\n                  fontSize: 15\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 499,\n                  columnNumber: 27\n                }, this), arrowDirection[index] === \"horizantal\" && /*#__PURE__*/_jsxDEV(Rect, {\n                  x: square[3] + 60,\n                  y: square[4] - 75,\n                  draggable: true,\n                  stroke: square[2],\n                  strokeWidth: \"4\",\n                  rotationDeg: 132\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 520,\n                  columnNumber: 25\n                }, this), type === \"bottom\" && /*#__PURE__*/_jsxDEV(Rect, {\n                  draggable: true,\n                  x: square[3],\n                  y: square[4],\n                  width: width[index] * 30,\n                  height: length[index] * 30,\n                  fill: \"transparent\",\n                  stroke: \"darkgreen\",\n                  draggable: false,\n                  strokeWidth: \"4\",\n                  dash: [10, 10]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 546,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Rect, {\n                  onClick: e => {\n                    console.log(e.target.absolutePosition());\n                    console.log(e.target);\n                    console.log(\"lineRenderArr : \", lineRenderArr);\n                    console.log(\"squares : \", squares);\n                    let squaresOriginal = [...squares];\n                    squaresOriginal[index][3] = e.target.absolutePosition().x;\n                    squaresOriginal[index][4] = e.target.absolutePosition().y;\n                    setkonvasquares(squaresOriginal);\n                  },\n                  x: square[3],\n                  y: square[4],\n                  width: square[0] * 30,\n                  height: square[1] * 30,\n                  fill: square[2],\n                  opacity: 0.6\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 562,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 21\n              }, this)\n            }, void 0, false);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Konva, \"UxQoM+njOYPnWM20JR8eSij3ALc=\");\n\n_c = Konva;\nexport default Konva;\n\nvar _c;\n\n$RefreshReg$(_c, \"Konva\");","map":{"version":3,"sources":["C:/fullstack/grass-calculator/grass-calculator/src/components/Konva.js"],"names":["React","useEffect","useState","Stage","Layer","Rect","Text","Group","Arrow","Line","Konva","squares","setsquares","type","tabKey","summary","xDirectionSquare","yDirectionSquare","resultForClientPchat","resultPchatWithDirection","resultMinChiburWithDirection","resultMinChiburNoDirection","arrayUsed","setarrayUsed","konvasquares","setkonvasquares","isDragging","setisDragging","console","log","testFunc","e","target","marginTop","border","marginLeft","marginRight","borderRadius","window","innerWidth","innerHeight","map","square","index","width","length","arrowDirection","opt2","opt3","opt4","amount","absolutePosition","squaresOriginal","x","y","event","lineRenderArr","numberRenderArr","forEach","opt4Amount","opt3Amount","opt2Amount","squareLines","renderedNumbers","push","arr","pop","pos","indexOf"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Stage, Layer, Rect, Text, Group, Arrow, Line } from \"react-konva\";\r\n\r\nconst Konva = ({\r\n  squares,\r\n  setsquares,\r\n  type,\r\n  tabKey,\r\n  summary,\r\n  xDirectionSquare,\r\n  yDirectionSquare,\r\n  resultForClientPchat,\r\n  resultPchatWithDirection,\r\n  resultMinChiburWithDirection,\r\n  resultMinChiburNoDirection,\r\n}) => {\r\n  const [arrayUsed, setarrayUsed] = useState([]);\r\n  const [konvasquares, setkonvasquares] = useState(squares);\r\n  const [isDragging, setisDragging] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (tabKey === \"מינימום חיבורים + כיוון סיב אחיד בין הגלילים\") {\r\n      setarrayUsed(resultMinChiburWithDirection);\r\n    }\r\n    if (tabKey === \"מינימום פחת\") {\r\n      setarrayUsed(resultForClientPchat);\r\n    }\r\n    if (tabKey === \"מינימום פחת + כיוון סיב אחיד בין הגלילים\") {\r\n      setarrayUsed(resultPchatWithDirection);\r\n    }\r\n    if (tabKey === \"מינימום חיבורים\") {\r\n      setarrayUsed(resultMinChiburNoDirection);\r\n    }\r\n    console.log(\"xDirectionSquare : \", xDirectionSquare);\r\n    console.log(\"yDirectionSquare : \", yDirectionSquare);\r\n    console.log(\"arrayUsed : \", arrayUsed);\r\n  }, [tabKey]);\r\n\r\n  function testFunc(e) {\r\n    console.log(e.target);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div style={{ marginTop: 30 }}>\r\n        <Stage\r\n          style={{\r\n            border: \"1px solid #333\",\r\n            marginLeft: \"5rem\",\r\n            marginRight: \"5rem\",\r\n            borderRadius: \"5px\",\r\n          }}\r\n          width={window.innerWidth}\r\n          height={window.innerHeight}\r\n        >\r\n          <Layer>\r\n            {type === \"top\" &&\r\n              squares.map((square, index) => {\r\n                let width = [];\r\n                let length = [];\r\n                let arrowDirection = [];\r\n\r\n                if (arrayUsed.length !== 0) {\r\n                  if (\r\n                    arrayUsed[index].opt2.length === square[1] ||\r\n                    arrayUsed[index].opt3.length === square[1] ||\r\n                    arrayUsed[index].opt4.length === square[1]\r\n                  ) {\r\n                    width[index] =\r\n                      arrayUsed[index].opt2.amount * 2 +\r\n                      arrayUsed[index].opt3.amount * 3 +\r\n                      arrayUsed[index].opt4.amount * 4;\r\n                    length[index] = square[1];\r\n                    arrowDirection[index] = \"vertical\";\r\n                  } else if (\r\n                    arrayUsed[index].opt2.length === square[0] ||\r\n                    arrayUsed[index].opt3.length === square[0] ||\r\n                    arrayUsed[index].opt4.length === square[0]\r\n                  ) {\r\n                    width[index] = square[0];\r\n                    length[index] =\r\n                      arrayUsed[index].opt2.amount * 2 +\r\n                      arrayUsed[index].opt3.amount * 3 +\r\n                      arrayUsed[index].opt4.amount * 4;\r\n                    arrowDirection[index] = \"horizantal\";\r\n                  }\r\n                }\r\n\r\n                return (\r\n                  <>\r\n                    <Group\r\n                      onDragEnd={(e) => {\r\n                        console.log(e.target.absolutePosition());\r\n                        console.log(e.target);\r\n                        console.log(\"squares : \", squares);\r\n                        let squaresOriginal = [...squares];\r\n                        squaresOriginal[\r\n                          index\r\n                        ][3] = e.target.absolutePosition().x;\r\n                        squaresOriginal[\r\n                          index\r\n                        ][4] = e.target.absolutePosition().y;\r\n                        setkonvasquares(squaresOriginal);\r\n                      }}\r\n                      draggable\r\n                    >\r\n                      <Text\r\n                        offsetX={-70}\r\n                        offsetY={-100}\r\n                        text={` ${square[0]} רוחב`}\r\n                        fontSize={15}\r\n                      />\r\n                      <Text\r\n                        rotation={270}\r\n                        offsetX={170}\r\n                        offsetY={-50}\r\n                        text={` ${square[1]} אורך`}\r\n                        fontSize={15}\r\n                      />\r\n\r\n                      <Rect\r\n                        onClick={() => {\r\n                          console.log(isDragging);\r\n                        }}\r\n                        onDragMove={(e) => {\r\n                          setisDragging(true);\r\n                        }}\r\n                        onDragStart={(event) => {\r\n                          setisDragging(true);\r\n                        }}\r\n                        x={50}\r\n                        y={100}\r\n                        width={square[0] * 30}\r\n                        height={square[1] * 30}\r\n                        fill={square[2]}\r\n                        opacity={0.6}\r\n                      />\r\n                    </Group>\r\n                  </>\r\n                );\r\n              })}\r\n\r\n            {/* {end of top konva} */}\r\n\r\n            {type === \"bottom\" &&\r\n              konvasquares.map((square, index) => {\r\n                let width = [];\r\n                let length = [];\r\n                let arrowDirection = [];\r\n\r\n                //4 - 140\r\n                //3 - 105\r\n                //2 - 70\r\n                let lineRenderArr = [];\r\n                let numberRenderArr = [];\r\n\r\n                arrayUsed.forEach((square) => {\r\n                  let opt4Amount = +square.opt4.amount;\r\n                  let opt3Amount = +square.opt3.amount;\r\n                  let opt2Amount = +square.opt2.amount;\r\n                  let squareLines = [];\r\n                  let renderedNumbers = [];\r\n\r\n                  while (opt4Amount > 0) {\r\n                    if (squareLines.length > 0) {\r\n                      squareLines.push(\r\n                        +squareLines[squareLines.length - 1] + 110\r\n                      );\r\n                    } else {\r\n                      squareLines.push(110);\r\n                    }\r\n                    renderedNumbers.push(4);\r\n                    opt4Amount--;\r\n                  }\r\n                  while (opt3Amount > 0) {\r\n                    if (squareLines.length > 0) {\r\n                      squareLines.push(\r\n                        +squareLines[squareLines.length - 1] + 95\r\n                      );\r\n                    } else {\r\n                      squareLines.push(95);\r\n                    }\r\n                    renderedNumbers.push(3);\r\n                    opt3Amount--;\r\n                  }\r\n                  while (opt2Amount > 0) {\r\n                    if (squareLines.length > 0) {\r\n                      squareLines.push(\r\n                        +squareLines[squareLines.length - 1] + 30\r\n                      );\r\n                    } else {\r\n                      squareLines.push(30);\r\n                    }\r\n                    renderedNumbers.push(2);\r\n                    opt2Amount--;\r\n                  }\r\n                  console.log(\"lineRenderArr : \", lineRenderArr);\r\n                  lineRenderArr.push(squareLines);\r\n                  numberRenderArr.push(renderedNumbers);\r\n                });\r\n\r\n                lineRenderArr.forEach((arr) => {\r\n                  arr.pop();\r\n                });\r\n\r\n                if (arrayUsed.length !== 0) {\r\n                  if (\r\n                    arrayUsed[index].opt2.length === square[1] ||\r\n                    arrayUsed[index].opt3.length === square[1] ||\r\n                    arrayUsed[index].opt4.length === square[1]\r\n                  ) {\r\n                    width[index] =\r\n                      arrayUsed[index].opt2.amount * 2 +\r\n                      arrayUsed[index].opt3.amount * 3 +\r\n                      arrayUsed[index].opt4.amount * 4;\r\n                    length[index] = square[1];\r\n                    arrowDirection[index] = \"vertical\";\r\n                  } else if (\r\n                    arrayUsed[index].opt2.length === square[0] ||\r\n                    arrayUsed[index].opt3.length === square[0] ||\r\n                    arrayUsed[index].opt4.length === square[0]\r\n                  ) {\r\n                    width[index] = square[0];\r\n                    length[index] =\r\n                      arrayUsed[index].opt2.amount * 2 +\r\n                      arrayUsed[index].opt3.amount * 3 +\r\n                      arrayUsed[index].opt4.amount * 4;\r\n                    arrowDirection[index] = \"horizantal\";\r\n                  }\r\n                }\r\n\r\n                return (\r\n                  <>\r\n                    <Group draggable>\r\n                      {/* {arrow direction } */}\r\n                      {arrowDirection[index] === \"vertical\" && (\r\n                        <Arrow\r\n                          x={square[3]}\r\n                          y={square[4]}\r\n                          offsetX={-30}\r\n                          offsetY={30}\r\n                          points={[0, 45, 0, 70]}\r\n                          width={30}\r\n                          pointerLength={5}\r\n                          pointerWidth={5}\r\n                          stroke='darkgreen'\r\n                          fill='darkgreen'\r\n                        />\r\n                      )}\r\n                      {arrowDirection[index] === \"horizantal\" && (\r\n                        <Arrow\r\n                          x={square[3]}\r\n                          y={square[4]}\r\n                          offsetY={-30}\r\n                          points={[30, 0, 50, 0]}\r\n                          pointerLength={5}\r\n                          pointerWidth={5}\r\n                          stroke='darkgreen'\r\n                          fill='darkgreen'\r\n                        />\r\n                      )}\r\n\r\n                      {arrowDirection[index] === \"horizantal\" && (\r\n                        <Text\r\n                          x={square[3]}\r\n                          y={square[4]}\r\n                          offsetX={-25}\r\n                          offsetY={0}\r\n                          text={`אורך ${square[0]} `}\r\n                          fontSize={15}\r\n                        />\r\n                      )}\r\n                      {arrowDirection[index] === \"vertical\" && (\r\n                        <Text\r\n                          x={square[3]}\r\n                          y={square[4]}\r\n                          rotation={270}\r\n                          offsetX={80}\r\n                          offsetY={0}\r\n                          text={` אורך ${square[1]} `}\r\n                          fontSize={15}\r\n                        />\r\n                      )}\r\n\r\n                      {/* {if arrow direction is vertical} */}\r\n\r\n                      {arrowDirection[index] === \"vertical\" &&\r\n                        lineRenderArr.length !== 0 &&\r\n                        lineRenderArr[index].map((pos) => (\r\n                          <>\r\n                            <Line\r\n                              x={square[3]}\r\n                              y={square[4]}\r\n                              draggable={true}\r\n                              points={[pos, 0, pos, 32]}\r\n                              stroke='darkgreen'\r\n                              strokeWidth='6'\r\n                              dash={[10, 10]}\r\n                            ></Line>\r\n\r\n                            {lineRenderArr[index].indexOf(pos) + 1 ===\r\n                            lineRenderArr[index].length ? (\r\n                              <>\r\n                                <Text\r\n                                  fontStyle='bold'\r\n                                  textDecoration='underline'\r\n                                  x={square[3]}\r\n                                  y={square[4]}\r\n                                  offsetX={\r\n                                    arrayUsed[index].opt4.amount > 0\r\n                                      ? -pos - 15\r\n                                      : arrayUsed[index].opt3.amount > 0\r\n                                      ? -pos - 15\r\n                                      : arrayUsed[index].opt2.amount > 0\r\n                                      ? -pos - 15\r\n                                      : null\r\n                                  }\r\n                                  text={\r\n                                    \"גליל\" +\r\n                                    numberRenderArr[index][\r\n                                      lineRenderArr[index].indexOf(pos) + 1\r\n                                    ]\r\n                                  }\r\n                                  fontSize={15}\r\n                                  fill={\"black\"}\r\n                                />\r\n\r\n                                <Text\r\n                                  fontStyle='bold'\r\n                                  textDecoration='underline'\r\n                                  x={square[3]}\r\n                                  y={square[4]}\r\n                                  offsetX={\r\n                                    arrayUsed[index].opt4.amount > 0\r\n                                      ? -pos + 50\r\n                                      : arrayUsed[index].opt3.amount > 0\r\n                                      ? -pos + 50\r\n                                      : arrayUsed[index].opt2.amount > 0\r\n                                      ? -pos + 50\r\n                                      : null\r\n                                  }\r\n                                  text={\r\n                                    \"גליל\" +\r\n                                    numberRenderArr[index][\r\n                                      lineRenderArr[index].indexOf(pos)\r\n                                    ]\r\n                                  }\r\n                                  fontSize={15}\r\n                                />\r\n\r\n                                {lineRenderArr[index].forEach((arr) =>\r\n                                  console.log(\"arr : \", arr)\r\n                                )}\r\n                              </>\r\n                            ) : (\r\n                              <Text\r\n                                fontStyle='bold'\r\n                                textDecoration='underline'\r\n                                x={square[3]}\r\n                                y={square[4]}\r\n                                offsetX={\r\n                                  arrayUsed[index].opt4.amount > 0\r\n                                    ? -pos + 50\r\n                                    : arrayUsed[index].opt3.amount > 0\r\n                                    ? -pos + 50\r\n                                    : arrayUsed[index].opt2.amount > 0\r\n                                    ? -pos + 50\r\n                                    : null\r\n                                }\r\n                                text={\r\n                                  \"גליל\" +\r\n                                  numberRenderArr[index][\r\n                                    lineRenderArr[index].indexOf(pos)\r\n                                  ]\r\n                                }\r\n                                fontSize={15}\r\n                              />\r\n                            )}\r\n                          </>\r\n                        ))}\r\n                      {arrowDirection[index] === \"vertical\" &&\r\n                        lineRenderArr[index].length === 0 && (\r\n                          <Text\r\n                            fontStyle='bold'\r\n                            textDecoration='underline'\r\n                            x={square[3]}\r\n                            y={square[4]}\r\n                            offsetX={-40}\r\n                            text={\r\n                              arrayUsed[index].opt4.amount > 0\r\n                                ? \"גליל 4  \"\r\n                                : arrayUsed[index].opt3.amount > 0\r\n                                ? \"גליל 3\"\r\n                                : arrayUsed[index].opt2.amount > 0\r\n                                ? \"גליל 2\"\r\n                                : null\r\n                            }\r\n                            fontSize={15}\r\n                          />\r\n                        )}\r\n\r\n                      {/* {if arrow direction is horizantal} */}\r\n\r\n                      {arrowDirection[index] === \"horizantal\" &&\r\n                        lineRenderArr.length !== 0 &&\r\n                        lineRenderArr[index].map((pos) => (\r\n                          <>\r\n                            <Group>\r\n                              <Line\r\n                                x={square[3]}\r\n                                y={square[4]}\r\n                                draggable={true}\r\n                                points={[0, pos, 32, pos]}\r\n                                stroke='darkgreen'\r\n                                strokeWidth='6'\r\n                                dash={[10, 10]}\r\n                              ></Line>\r\n                              {lineRenderArr[index].indexOf(pos) + 1 ===\r\n                              lineRenderArr[index].length ? (\r\n                                <>\r\n                                  <Text\r\n                                    fontStyle='bold'\r\n                                    textDecoration='underline'\r\n                                    rotation={270}\r\n                                    x={square[3]}\r\n                                    y={square[4]}\r\n                                    offsetX={\r\n                                      arrayUsed[index].opt4.amount > 0\r\n                                        ? pos - 60\r\n                                        : arrayUsed[index].opt3.amount > 0\r\n                                        ? pos - 60\r\n                                        : arrayUsed[index].opt2.amount > 0\r\n                                        ? pos - 60\r\n                                        : null\r\n                                    }\r\n                                    text={\r\n                                      \"גליל\" +\r\n                                      numberRenderArr[index][\r\n                                        lineRenderArr[index].indexOf(pos)\r\n                                      ]\r\n                                    }\r\n                                    fontSize={15}\r\n                                  />\r\n\r\n                                  <Text\r\n                                    fontStyle='bold'\r\n                                    textDecoration='underline'\r\n                                    rotation={270}\r\n                                    x={square[3]}\r\n                                    y={square[4]}\r\n                                    offsetX={\r\n                                      arrayUsed[index].opt4.amount > 0\r\n                                        ? pos + 50\r\n                                        : arrayUsed[index].opt3.amount > 0\r\n                                        ? pos + 50\r\n                                        : arrayUsed[index].opt2.amount > 0\r\n                                        ? pos + 50\r\n                                        : null\r\n                                    }\r\n                                    text={\r\n                                      \"גליל\" +\r\n                                      numberRenderArr[index][\r\n                                        lineRenderArr[index].indexOf(pos) + 1\r\n                                      ]\r\n                                    }\r\n                                    fontSize={15}\r\n                                  />\r\n                                </>\r\n                              ) : (\r\n                                <Text\r\n                                  fontStyle='bold'\r\n                                  textDecoration='underline'\r\n                                  rotation={270}\r\n                                  x={square[3]}\r\n                                  y={square[4]}\r\n                                  offsetX={\r\n                                    arrayUsed[index].opt4.amount > 0\r\n                                      ? pos - 70\r\n                                      : arrayUsed[index].opt3.amount > 0\r\n                                      ? pos - 70\r\n                                      : arrayUsed[index].opt2.amount > 0\r\n                                      ? pos - 70\r\n                                      : null\r\n                                  }\r\n                                  text={\r\n                                    \"גליל\" +\r\n                                    numberRenderArr[index][\r\n                                      lineRenderArr[index].indexOf(pos)\r\n                                    ]\r\n                                  }\r\n                                  fontSize={15}\r\n                                />\r\n                              )}\r\n                            </Group>\r\n                          </>\r\n                        ))}\r\n                      {arrowDirection[index] === \"horizantal\" &&\r\n                        lineRenderArr[index].length === 0 && (\r\n                          <Text\r\n                            fontStyle='bold'\r\n                            textDecoration='underline'\r\n                            x={square[3]}\r\n                            y={square[4]}\r\n                            // offsetY={-40}\r\n                            offsetX={60}\r\n                            rotationDeg={270}\r\n                            text={\r\n                              arrayUsed[index].opt4.amount > 0\r\n                                ? \"גליל 4  \"\r\n                                : arrayUsed[index].opt3.amount > 0\r\n                                ? \"גליל 3\"\r\n                                : arrayUsed[index].opt2.amount > 0\r\n                                ? \"גליל 2\"\r\n                                : null\r\n                            }\r\n                            fontSize={15}\r\n                          />\r\n                        )}\r\n                      {arrowDirection[index] === \"horizantal\" && (\r\n                        <Rect\r\n                          x={square[3] + 60}\r\n                          y={square[4] - 75}\r\n                          draggable={true}\r\n                          stroke={square[2]}\r\n                          strokeWidth='4'\r\n                          rotationDeg={132}\r\n                        ></Rect>\r\n                      )}\r\n\r\n                      {/* <Text\r\n                        x={square[3]}\r\n                        y={square[4] + 100}\r\n                        text={` ${square[0]} ר`}\r\n                        fontSize={15}\r\n                      />\r\n                      <Text\r\n                        x={square[3]}\r\n                        y={square[4] + 100}\r\n                        text={` ${square[1]} א`}\r\n                        fontSize={15}\r\n                        rotationDeg={270}\r\n                      /> */}\r\n                      {/* {if we are in konva bottom use also square for glilim} */}\r\n\r\n                      {type === \"bottom\" && (\r\n                        <Rect\r\n                          draggable\r\n                          x={square[3]}\r\n                          y={square[4]}\r\n                          width={width[index] * 30}\r\n                          height={length[index] * 30}\r\n                          fill='transparent'\r\n                          stroke='darkgreen'\r\n                          draggable={false}\r\n                          strokeWidth='4'\r\n                          dash={[10, 10]}\r\n                        ></Rect>\r\n                      )}\r\n\r\n                      {/* {the original square from top} */}\r\n\r\n                      <Rect\r\n                        onClick={(e) => {\r\n                          console.log(e.target.absolutePosition());\r\n                          console.log(e.target);\r\n                          console.log(\"lineRenderArr : \", lineRenderArr);\r\n                          console.log(\"squares : \", squares);\r\n                          let squaresOriginal = [...squares];\r\n                          squaresOriginal[\r\n                            index\r\n                          ][3] = e.target.absolutePosition().x;\r\n                          squaresOriginal[\r\n                            index\r\n                          ][4] = e.target.absolutePosition().y;\r\n                          setkonvasquares(squaresOriginal);\r\n                        }}\r\n                        x={square[3]}\r\n                        y={square[4]}\r\n                        width={square[0] * 30}\r\n                        height={square[1] * 30}\r\n                        fill={square[2]}\r\n                        opacity={0.6}\r\n                      />\r\n                    </Group>\r\n                  </>\r\n                );\r\n              })}\r\n          </Layer>\r\n        </Stage>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Konva;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\fullstack\\\\grass-calculator\\\\grass-calculator\\\\src\\\\pages\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport \"../App.css\";\nimport Konva from \"../components/Konva\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Button, InputGroup, FormControl, Modal, Form, Card, Container, Row, Col, Tabs, Tab, CardColumns } from \"react-bootstrap\";\nimport { useEffect, useState } from \"react\"; // import calculateBestOption from \"../calculator\";\n\nimport ChiburCalc from \"../chiburCalc\";\nimport PchatWithDirection from \"../PchatWithDirection\";\nimport MinChiburNoDirection from \"../minChiburNoDirection\";\nimport MinChiburWithDirection from \"../minChiburWithDirection\";\nimport ControlledTabs from \"../components/ControlledTabs\"; ////////////////////////////////////////////////////////////////////////\n\nfunction Home({\n  history\n}) {\n  _s();\n\n  //all squares entered\n  const [squares, setsquares] = useState([]); //best result for client considering pchat only (\"pchat\" = loss)\n\n  const [resultForClientPchat, setresultForClientPchat] = useState([]); //best result for client considering pchat and direction (\"direction\"= means - the direction the grass would streatch out )\n\n  const [resultPchatWithDirection, setresultPchatWithDirection] = useState([]); //resultMinChiburNoDirection- \"Chibur\"= connection.\"no direction\"- not consider the grass direction)\n\n  const [resultMinChiburNoDirection, setResultMinChiburNoDirection] = useState([]); //resultMinChiburWithDirection- \"Chibur\"= connection.\"no direction\"- not consider the grass direction)\n\n  const [resultMinChiburWithDirection, setResultMinChiburWithDirection] = useState([]); //best result for client considering connections only (\"connections\" means- the numbar of piece we use, sometimes the customer prefare to have los but not to have more pieces)\n  // considering the grass direction - giving solutions for each direction\n  //all x axis\n\n  const [x_directionResultForClient, setX_DirectionResultForClient] = useState([]); //all y axis results\n\n  const [y_directionResultForClient, setY_DirectionResultForClient] = useState([]); //summary state\n\n  const [summary, setSummary] = useState({\n    minPchatSummary: {\n      opt2: 0,\n      opt2length: 0,\n      opt3: 0,\n      opt3length: 0,\n      opt4: 0,\n      opt4length: 0,\n      pchat: 0\n    },\n    minPchatWithDirectionSummary: {\n      opt2: 0,\n      opt2length: 0,\n      opt3: 0,\n      opt3length: 0,\n      opt4: 0,\n      opt4length: 0,\n      pchat: 0\n    },\n    minChiburNoDirection: {\n      opt2: 0,\n      opt2length: 0,\n      opt3: 0,\n      opt3length: 0,\n      opt4: 0,\n      opt4length: 0,\n      pchat: 0\n    },\n    minChiburWithDirection: {\n      opt2: 0,\n      opt2length: 0,\n      opt3: 0,\n      opt3length: 0,\n      opt4: 0,\n      opt4length: 0,\n      pchat: 0\n    }\n  }); //input values\n\n  const [width, setwidth] = useState(0);\n  const [length, setlength] = useState(0); //squares color\n\n  const [color, setColor] = useState(getRandomColour());\n  const [titleColor, setTitleColor] = useState(getRandomColour()); // function getRandomColour() {\n  //   var red = Math.floor(Math.random() * 255);\n  //   var green = Math.floor(Math.random() * 255);\n  //   var blue = Math.floor(Math.random() * 255);\n  //   return \"rgb(\" + red + \",\" + green + \",\" + blue + \" )\";\n  // }\n\n  function getRandomColour() {\n    var letters = 'BCDEF'.split('');\n    var color = '#';\n\n    for (var i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * letters.length)];\n    }\n\n    return color;\n  }\n\n  const [openSummary, setopenSummary] = useState(false);\n  useEffect(() => {\n    bestResult();\n    console.log(\"summary : \", summary);\n  }, [squares]);\n  useEffect(() => {\n    bestResultPchatWithDirection();\n    bestMinChiburNoDirection();\n    bestMinChiburWithDirection();\n  }, [x_directionResultForClient]);\n\n  function bestMinChiburWithDirection() {\n    let result5 = MinChiburWithDirection(x_directionResultForClient, y_directionResultForClient);\n    console.log(\"result5:\", result5);\n    setResultMinChiburWithDirection(result5);\n  }\n\n  function bestMinChiburNoDirection() {\n    let result4 = MinChiburNoDirection(x_directionResultForClient, y_directionResultForClient);\n    setResultMinChiburNoDirection(result4);\n  } // function bestResultPchatWithDirection() {\n  //   let result3 = PchatWithDirection(\n  //     x_directionResultForClient,\n  //     y_directionResultForClient\n  //   );\n  //   setresultPchatWithDirection(result3);\n  // }\n\n\n  function bestResultPchatWithDirection() {\n    if (squares.length === 1) {\n      setresultPchatWithDirection(resultForClientPchat);\n    } else {\n      let result3 = PchatWithDirection(x_directionResultForClient, y_directionResultForClient);\n      setresultPchatWithDirection(result3);\n    }\n  }\n\n  function summaryAllOptions() {\n    // \"P\"=Pchat. not considering the direction\n    let opt2AmountP = 0;\n    let opt2lengthP = 0;\n    let opt3AmountP = 0;\n    let opt3lengthP = 0;\n    let opt4AmountP = 0;\n    let opt4lengthP = 0;\n    let pchatP = 0;\n    resultForClientPchat.forEach(square => {\n      opt2AmountP += square.opt2.amount;\n      opt2lengthP += square.opt2.length;\n      opt3AmountP += square.opt3.amount;\n      opt3lengthP += square.opt3.length;\n      opt4AmountP += square.opt4.amount;\n      opt4lengthP += square.opt4.length;\n      pchatP += square.pchat;\n    }); // \"PD\"=Pchat+ considering the Direction\n\n    let opt2AmountPD = 0;\n    let opt2lengthPD = 0;\n    let opt3AmountPD = 0;\n    let opt3lengthPD = 0;\n    let opt4AmountPD = 0;\n    let opt4lengthPD = 0;\n    let pchatPD = 0;\n    resultPchatWithDirection.forEach(square => {\n      opt2AmountPD += square.opt2.amount;\n      opt2lengthPD += square.opt2.length;\n      opt3AmountPD += square.opt3.amount;\n      opt3lengthPD += square.opt3.length;\n      opt4AmountPD += square.opt4.amount;\n      opt4lengthPD += square.opt4.length;\n      pchatPD += square.pchat;\n    }); // result  of Min \"Chiburim\" (connections) Not consider Direction\n\n    let opt2AmountC = 0;\n    let opt2lengthC = 0;\n    let opt3AmountC = 0;\n    let opt3lengthC = 0;\n    let opt4AmountC = 0;\n    let opt4lengthC = 0;\n    let pchatC = 0;\n    resultMinChiburNoDirection.forEach(square => {\n      opt2AmountC += square.opt2.amount;\n      opt2lengthC += square.opt2.length;\n      opt3AmountC += square.opt3.amount;\n      opt3lengthC += square.opt3.length;\n      opt4AmountC += square.opt4.amount;\n      opt4lengthC += square.opt4.length;\n      pchatC += square.pchat;\n    }); // result  of Min \"Chiburim\" (connections) + consider Direction\n\n    let opt2AmountCD = 0;\n    let opt2lengthCD = 0;\n    let opt3AmountCD = 0;\n    let opt3lengthCD = 0;\n    let opt4AmountCD = 0;\n    let opt4lengthCD = 0;\n    let pchatCD = 0;\n    resultMinChiburWithDirection.forEach(square => {\n      opt2AmountCD += square.opt2.amount;\n      opt2lengthCD += square.opt2.length;\n      opt3AmountCD += square.opt3.amount;\n      opt3lengthCD += square.opt3.length;\n      opt4AmountCD += square.opt4.amount;\n      opt4lengthCD += square.opt4.length;\n      pchatCD += square.pchat;\n    });\n    setSummary({ ...summary,\n      minPchatSummary: {\n        title: `מינימום פחת`,\n        description: `ניצול מירבי של גלילי הדשא שהזומנו`,\n        opt2: opt2AmountP,\n        opt2length: opt2lengthP,\n        opt3: opt3AmountP,\n        opt3length: opt3lengthP,\n        opt4: opt4AmountP,\n        opt4length: opt4lengthP,\n        pchat: pchatP.toFixed(2)\n      },\n      minPchatWithDirectionSummary: {\n        title: `מינימום פחת + כיוון סיב אחיד בין הגלילים`,\n        description: \"  ניצול מירבי של גלילי הדשא שהוזמנו בתנאי של שמירה על כיוון פריסה אחיד של כל הגלילים\",\n        opt2: opt2AmountPD,\n        opt2length: opt2lengthPD,\n        opt3: opt3AmountPD,\n        opt3length: opt3lengthPD,\n        opt4: opt4AmountPD,\n        opt4length: opt4lengthPD,\n        pchat: pchatPD\n      },\n      minChiburNoDirection: {\n        title: \"מינימום חיבורים\",\n        description: \"כיסוי השטח עם מספר מינימלי של גלילי דשא סינטטי \",\n        opt2: opt2AmountC,\n        opt2length: opt2lengthC,\n        opt3: opt3AmountC,\n        opt3length: opt3lengthC,\n        opt4: opt4AmountC,\n        opt4length: opt4lengthC,\n        pchat: pchatC\n      },\n      minChiburWithDirection: {\n        title: `מינימום חיבורים + כיוון סיב אחיד בין הגלילים`,\n        description: `מינימום חיבורים + כיוון סיב אחיד בין הגלילים`,\n        opt2: opt2AmountCD,\n        opt2length: opt2lengthCD,\n        opt3: opt3AmountCD,\n        opt3length: opt3lengthCD,\n        opt4: opt4AmountCD,\n        opt4length: opt4lengthCD,\n        pchat: pchatCD\n      }\n    });\n  }\n\n  function bestResult() {\n    squares.forEach(square => {\n      //  פחת מינימלי בלי כיוון פריסה\n      // min pchat no direction consider\n      let result1 = ChiburCalc(square[0], square[1], square[2]);\n      let result2 = ChiburCalc(square[1], square[0], square[2]);\n\n      if (result1.pchat === result2.pchat) {\n        setresultForClientPchat([...resultForClientPchat, result1]);\n      } else if (result1.pchat < result2.pchat) {\n        setresultForClientPchat([...resultForClientPchat, result1]);\n      } else {\n        let inputLength = result2.initialWidth;\n        let inputWidth = result2.initialLength;\n        result2.initialWidth = inputWidth;\n        result2.initialLength = inputLength;\n        setresultForClientPchat([...resultForClientPchat, result2]);\n      } // כיוון פריסה\n\n\n      setX_DirectionResultForClient([...x_directionResultForClient, result1]);\n      let inputLength = result2.initialWidth;\n      let inputWidth = result2.initialLength;\n      result2.initialWidth = inputWidth;\n      result2.initialLength = inputLength;\n      setY_DirectionResultForClient([...y_directionResultForClient, result2]);\n    });\n    summaryAllOptions();\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(InputGroup, {\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"flex-end\"\n          },\n          className: \" mt-5  \",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              textAlign: \"right\"\n            },\n            children: \" \\u05DE\\u05D7\\u05E9\\u05D1\\u05D5\\u05DF \\u05D3\\u05E9\\u05D0 \\u05E1\\u05D9\\u05E0\\u05D8\\u05D8\\u05D9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"buttons\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                size: \"sm\",\n                onClick: () => {\n                  setColor(getRandomColour());\n                  setTitleColor(getRandomColour());\n                  setsquares([...squares, [+width, +length, color, 100, 50]]);\n                  setwidth(\"\");\n                  setlength(\"\");\n                  summaryAllOptions();\n                },\n                className: \"m-3\",\n                variant: \"success\",\n                children: \"\\u05D4\\u05D5\\u05E1\\u05E3 \\u05DE\\u05DC\\u05D1\\u05DF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                size: \"sm\",\n                className: \"m-3\",\n                variant: \"success\",\n                onClick: () => {\n                  setopenSummary(true);\n                  summaryAllOptions();\n                },\n                children: \"\\u05D7\\u05E9\\u05D1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                size: \"sm\",\n                onClick: () => {\n                  setsquares([]);\n                  setresultForClientPchat([]);\n                  setSummary([]);\n                  setwidth(0);\n                  setlength(0);\n                  setResultMinChiburNoDirection([]);\n                  setResultMinChiburWithDirection([]);\n                  setX_DirectionResultForClient([]);\n                  setY_DirectionResultForClient([]);\n                  setresultPchatWithDirection([]);\n                  setopenSummary(false);\n                },\n                className: \"m-3\",\n                variant: \"success\",\n                children: \"\\u05E0\\u05E7\\u05D4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  style: {\n                    textAlign: \"right\"\n                  },\n                  children: \" \\u05E8\\u05D5\\u05D7\\u05D1 \\u05D1\\u05DE\\u05D8\\u05E8\\u05D9\\u05DD\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                value: width,\n                style: {\n                  height: \"2rem\",\n                  direction: \"rtl\",\n                  maxHeight: \"2rem\"\n                },\n                \"aria-label\": \"Default\",\n                \"aria-describedby\": \"inputGroup-sizing-default\",\n                id: \"width\",\n                onChange: e => {\n                  setwidth(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"\\u05D0\\u05D5\\u05E8\\u05DA \\u05DE\\u05D8\\u05E8\\u05D9\\u05DD\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                value: length,\n                style: {\n                  direction: \"rtl\",\n                  maxHeight: \"2rem\"\n                },\n                \"aria-label\": \"Default\",\n                \"aria-describedby\": \"inputGroup-sizing-default\",\n                id: \"length\",\n                onChange: e => {\n                  setlength(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Konva, {\n      type: \"top\",\n      squares: squares,\n      setsquares: setsquares\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 7\n    }, this), openSummary && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          textAlign: \"right\",\n          marginRight: \"3rem\",\n          marginBottom: \"3rem\"\n        },\n        children: [\"\\u05D0\\u05DC\\u05D5 \\u05D4\\u05EA\\u05D5\\u05E6\\u05D0\\u05D5\\u05EA \\u05D4\\u05D0\\u05E4\\u05E9\\u05E8\\u05D9\\u05D5\\u05EA \\u05E2\\u05D1\\u05D5\\u05E8\\u05DB\\u05DD\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ControlledTabs, {\n        summary: summary,\n        x_directionResultForClient: x_directionResultForClient,\n        y_directionResultForClient: y_directionResultForClient,\n        resultForClientPchat: resultForClientPchat,\n        squares: squares,\n        setsquares: setsquares,\n        resultPchatWithDirection: resultPchatWithDirection,\n        resultMinChiburWithDirection: resultMinChiburWithDirection,\n        resultMinChiburNoDirection: resultMinChiburNoDirection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Home, \"pCoq4wdn0SHgmlOZ4ajEuEAZdmw=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/fullstack/grass-calculator/grass-calculator/src/pages/Home.js"],"names":["Konva","Button","InputGroup","FormControl","Modal","Form","Card","Container","Row","Col","Tabs","Tab","CardColumns","useEffect","useState","ChiburCalc","PchatWithDirection","MinChiburNoDirection","MinChiburWithDirection","ControlledTabs","Home","history","squares","setsquares","resultForClientPchat","setresultForClientPchat","resultPchatWithDirection","setresultPchatWithDirection","resultMinChiburNoDirection","setResultMinChiburNoDirection","resultMinChiburWithDirection","setResultMinChiburWithDirection","x_directionResultForClient","setX_DirectionResultForClient","y_directionResultForClient","setY_DirectionResultForClient","summary","setSummary","minPchatSummary","opt2","opt2length","opt3","opt3length","opt4","opt4length","pchat","minPchatWithDirectionSummary","minChiburNoDirection","minChiburWithDirection","width","setwidth","length","setlength","color","setColor","getRandomColour","titleColor","setTitleColor","letters","split","i","Math","floor","random","openSummary","setopenSummary","bestResult","console","log","bestResultPchatWithDirection","bestMinChiburNoDirection","bestMinChiburWithDirection","result5","result4","result3","summaryAllOptions","opt2AmountP","opt2lengthP","opt3AmountP","opt3lengthP","opt4AmountP","opt4lengthP","pchatP","forEach","square","amount","opt2AmountPD","opt2lengthPD","opt3AmountPD","opt3lengthPD","opt4AmountPD","opt4lengthPD","pchatPD","opt2AmountC","opt2lengthC","opt3AmountC","opt3lengthC","opt4AmountC","opt4lengthC","pchatC","opt2AmountCD","opt2lengthCD","opt3AmountCD","opt3lengthCD","opt4AmountCD","opt4lengthCD","pchatCD","title","description","toFixed","result1","result2","inputLength","initialWidth","inputWidth","initialLength","display","flexDirection","alignItems","textAlign","height","direction","maxHeight","e","target","value","marginRight","marginBottom"],"mappings":"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","sourcesContent":["import \"../App.css\";\r\nimport Konva from \"../components/Konva\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Button,\r\n  InputGroup,\r\n  FormControl,\r\n  Modal,\r\n  Form,\r\n  Card,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Tabs,\r\n  Tab,\r\n  CardColumns,\r\n} from \"react-bootstrap\";\r\nimport { useEffect, useState } from \"react\";\r\n// import calculateBestOption from \"../calculator\";\r\nimport ChiburCalc from \"../chiburCalc\";\r\nimport PchatWithDirection from \"../PchatWithDirection\";\r\nimport MinChiburNoDirection from \"../minChiburNoDirection\";\r\nimport MinChiburWithDirection from \"../minChiburWithDirection\";\r\nimport ControlledTabs from \"../components/ControlledTabs\";\r\n\r\n////////////////////////////////////////////////////////////////////////\r\n\r\nfunction Home({ history }) {\r\n  //all squares entered\r\n  const [squares, setsquares] = useState([]);\r\n\r\n  //best result for client considering pchat only (\"pchat\" = loss)\r\n  const [resultForClientPchat, setresultForClientPchat] = useState([]);\r\n\r\n  //best result for client considering pchat and direction (\"direction\"= means - the direction the grass would streatch out )\r\n  const [resultPchatWithDirection, setresultPchatWithDirection] = useState([]);\r\n\r\n  //resultMinChiburNoDirection- \"Chibur\"= connection.\"no direction\"- not consider the grass direction)\r\n  const [resultMinChiburNoDirection, setResultMinChiburNoDirection] = useState(\r\n    []\r\n  );\r\n  //resultMinChiburWithDirection- \"Chibur\"= connection.\"no direction\"- not consider the grass direction)\r\n  const [\r\n    resultMinChiburWithDirection,\r\n    setResultMinChiburWithDirection,\r\n  ] = useState([]);\r\n\r\n  //best result for client considering connections only (\"connections\" means- the numbar of piece we use, sometimes the customer prefare to have los but not to have more pieces)\r\n  // considering the grass direction - giving solutions for each direction\r\n  //all x axis\r\n  const [x_directionResultForClient, setX_DirectionResultForClient] = useState(\r\n    []\r\n  );\r\n\r\n  //all y axis results\r\n  const [y_directionResultForClient, setY_DirectionResultForClient] = useState(\r\n    []\r\n  );\r\n\r\n  //summary state\r\n\r\n  const [summary, setSummary] = useState({\r\n    minPchatSummary: {\r\n      opt2: 0,\r\n      opt2length: 0,\r\n      opt3: 0,\r\n      opt3length: 0,\r\n      opt4: 0,\r\n      opt4length: 0,\r\n      pchat: 0,\r\n    },\r\n    minPchatWithDirectionSummary: {\r\n      opt2: 0,\r\n      opt2length: 0,\r\n      opt3: 0,\r\n      opt3length: 0,\r\n      opt4: 0,\r\n      opt4length: 0,\r\n      pchat: 0,\r\n    },\r\n    minChiburNoDirection: {\r\n      opt2: 0,\r\n      opt2length: 0,\r\n      opt3: 0,\r\n      opt3length: 0,\r\n      opt4: 0,\r\n      opt4length: 0,\r\n      pchat: 0,\r\n    },\r\n\r\n    minChiburWithDirection: {\r\n      opt2: 0,\r\n      opt2length: 0,\r\n      opt3: 0,\r\n      opt3length: 0,\r\n      opt4: 0,\r\n      opt4length: 0,\r\n      pchat: 0,\r\n    },\r\n  });\r\n\r\n  //input values\r\n  const [width, setwidth] = useState(0);\r\n  const [length, setlength] = useState(0);\r\n\r\n  //squares color\r\n  const [color, setColor] = useState(getRandomColour());\r\n  const [titleColor, setTitleColor] = useState(getRandomColour());\r\n\r\n  // function getRandomColour() {\r\n  //   var red = Math.floor(Math.random() * 255);\r\n  //   var green = Math.floor(Math.random() * 255);\r\n  //   var blue = Math.floor(Math.random() * 255);\r\n\r\n  //   return \"rgb(\" + red + \",\" + green + \",\" + blue + \" )\";\r\n  // }\r\n\r\n  function getRandomColour() {\r\n    var letters = 'BCDEF'.split('');\r\n    var color = '#';\r\n    for (var i = 0; i < 6; i++) {\r\n      color += letters[Math.floor(Math.random() * letters.length)];\r\n    }\r\n    return color;\r\n  }\r\n  \r\n  const [openSummary, setopenSummary] = useState(false);\r\n\r\n  useEffect(() => {\r\n    bestResult();\r\n    console.log(\"summary : \", summary);\r\n  }, [squares]);\r\n\r\n  useEffect(() => {\r\n    bestResultPchatWithDirection();\r\n    bestMinChiburNoDirection();\r\n    bestMinChiburWithDirection();\r\n  }, [x_directionResultForClient]);\r\n\r\n  function bestMinChiburWithDirection() {\r\n    let result5 = MinChiburWithDirection(\r\n      x_directionResultForClient,\r\n      y_directionResultForClient\r\n    );\r\n    console.log(\"result5:\", result5);\r\n    setResultMinChiburWithDirection(result5);\r\n  }\r\n\r\n  function bestMinChiburNoDirection() {\r\n    let result4 = MinChiburNoDirection(\r\n      x_directionResultForClient,\r\n      y_directionResultForClient\r\n    );\r\n\r\n    setResultMinChiburNoDirection(result4);\r\n  }\r\n\r\n  // function bestResultPchatWithDirection() {\r\n  //   let result3 = PchatWithDirection(\r\n  //     x_directionResultForClient,\r\n  //     y_directionResultForClient\r\n  //   );\r\n\r\n  //   setresultPchatWithDirection(result3);\r\n  // }\r\n\r\n  function bestResultPchatWithDirection() {\r\n    if (squares.length === 1) {\r\n      setresultPchatWithDirection(resultForClientPchat);\r\n    } else {\r\n      let result3 = PchatWithDirection(\r\n        x_directionResultForClient,\r\n        y_directionResultForClient\r\n      );\r\n\r\n      setresultPchatWithDirection(result3);\r\n    }\r\n  }\r\n\r\n  function summaryAllOptions() {\r\n    // \"P\"=Pchat. not considering the direction\r\n    let opt2AmountP = 0;\r\n    let opt2lengthP = 0;\r\n    let opt3AmountP = 0;\r\n    let opt3lengthP = 0;\r\n    let opt4AmountP = 0;\r\n    let opt4lengthP = 0;\r\n    let pchatP = 0;\r\n    resultForClientPchat.forEach((square) => {\r\n      opt2AmountP += square.opt2.amount;\r\n      opt2lengthP += square.opt2.length;\r\n      opt3AmountP += square.opt3.amount;\r\n      opt3lengthP += square.opt3.length;\r\n      opt4AmountP += square.opt4.amount;\r\n      opt4lengthP += square.opt4.length;\r\n      pchatP += square.pchat;\r\n    });\r\n    // \"PD\"=Pchat+ considering the Direction\r\n    let opt2AmountPD = 0;\r\n    let opt2lengthPD = 0;\r\n    let opt3AmountPD = 0;\r\n    let opt3lengthPD = 0;\r\n    let opt4AmountPD = 0;\r\n    let opt4lengthPD = 0;\r\n    let pchatPD = 0;\r\n\r\n    resultPchatWithDirection.forEach((square) => {\r\n      opt2AmountPD += square.opt2.amount;\r\n      opt2lengthPD += square.opt2.length;\r\n      opt3AmountPD += square.opt3.amount;\r\n      opt3lengthPD += square.opt3.length;\r\n      opt4AmountPD += square.opt4.amount;\r\n      opt4lengthPD += square.opt4.length;\r\n      pchatPD += square.pchat;\r\n    });\r\n    // result  of Min \"Chiburim\" (connections) Not consider Direction\r\n    let opt2AmountC = 0;\r\n    let opt2lengthC = 0;\r\n    let opt3AmountC = 0;\r\n    let opt3lengthC = 0;\r\n    let opt4AmountC = 0;\r\n    let opt4lengthC = 0;\r\n    let pchatC = 0;\r\n\r\n    resultMinChiburNoDirection.forEach((square) => {\r\n      opt2AmountC += square.opt2.amount;\r\n      opt2lengthC += square.opt2.length;\r\n      opt3AmountC += square.opt3.amount;\r\n      opt3lengthC += square.opt3.length;\r\n      opt4AmountC += square.opt4.amount;\r\n      opt4lengthC += square.opt4.length;\r\n      pchatC += square.pchat;\r\n    });\r\n\r\n    // result  of Min \"Chiburim\" (connections) + consider Direction\r\n    let opt2AmountCD = 0;\r\n    let opt2lengthCD = 0;\r\n    let opt3AmountCD = 0;\r\n    let opt3lengthCD = 0;\r\n    let opt4AmountCD = 0;\r\n    let opt4lengthCD = 0;\r\n    let pchatCD = 0;\r\n\r\n    resultMinChiburWithDirection.forEach((square) => {\r\n      opt2AmountCD += square.opt2.amount;\r\n      opt2lengthCD += square.opt2.length;\r\n      opt3AmountCD += square.opt3.amount;\r\n      opt3lengthCD += square.opt3.length;\r\n      opt4AmountCD += square.opt4.amount;\r\n      opt4lengthCD += square.opt4.length;\r\n      pchatCD += square.pchat;\r\n    });\r\n\r\n    setSummary({\r\n      ...summary,\r\n      minPchatSummary: {\r\n        title: `מינימום פחת`,\r\n        description: `ניצול מירבי של גלילי הדשא שהזומנו`,\r\n        opt2: opt2AmountP,\r\n        opt2length: opt2lengthP,\r\n        opt3: opt3AmountP,\r\n        opt3length: opt3lengthP,\r\n        opt4: opt4AmountP,\r\n        opt4length: opt4lengthP,\r\n        pchat: pchatP.toFixed(2),\r\n      },\r\n      minPchatWithDirectionSummary: {\r\n        title: `מינימום פחת + כיוון סיב אחיד בין הגלילים`,\r\n        description:\r\n          \"  ניצול מירבי של גלילי הדשא שהוזמנו בתנאי של שמירה על כיוון פריסה אחיד של כל הגלילים\",\r\n        opt2: opt2AmountPD,\r\n        opt2length: opt2lengthPD,\r\n        opt3: opt3AmountPD,\r\n        opt3length: opt3lengthPD,\r\n        opt4: opt4AmountPD,\r\n        opt4length: opt4lengthPD,\r\n        pchat: pchatPD,\r\n      },\r\n      minChiburNoDirection: {\r\n        title: \"מינימום חיבורים\",\r\n        description: \"כיסוי השטח עם מספר מינימלי של גלילי דשא סינטטי \",\r\n        opt2: opt2AmountC,\r\n        opt2length: opt2lengthC,\r\n        opt3: opt3AmountC,\r\n        opt3length: opt3lengthC,\r\n        opt4: opt4AmountC,\r\n        opt4length: opt4lengthC,\r\n        pchat: pchatC,\r\n      },\r\n      minChiburWithDirection: {\r\n        title: `מינימום חיבורים + כיוון סיב אחיד בין הגלילים`,\r\n        description: `מינימום חיבורים + כיוון סיב אחיד בין הגלילים`,\r\n        opt2: opt2AmountCD,\r\n        opt2length: opt2lengthCD,\r\n        opt3: opt3AmountCD,\r\n        opt3length: opt3lengthCD,\r\n        opt4: opt4AmountCD,\r\n        opt4length: opt4lengthCD,\r\n        pchat: pchatCD,\r\n      },\r\n    });\r\n  }\r\n\r\n  function bestResult() {\r\n    squares.forEach((square) => {\r\n      //  פחת מינימלי בלי כיוון פריסה\r\n      // min pchat no direction consider\r\n\r\n      let result1 = ChiburCalc(square[0], square[1], square[2]);\r\n      let result2 = ChiburCalc(square[1], square[0], square[2]);\r\n      if (result1.pchat === result2.pchat) {\r\n        setresultForClientPchat([...resultForClientPchat, result1]);\r\n      } else if (result1.pchat < result2.pchat) {\r\n        setresultForClientPchat([...resultForClientPchat, result1]);\r\n      } else {\r\n        let inputLength = result2.initialWidth;\r\n        let inputWidth = result2.initialLength;\r\n        result2.initialWidth = inputWidth;\r\n        result2.initialLength = inputLength;\r\n        setresultForClientPchat([...resultForClientPchat, result2]);\r\n      }\r\n\r\n      // כיוון פריסה\r\n      setX_DirectionResultForClient([...x_directionResultForClient, result1]);\r\n      let inputLength = result2.initialWidth;\r\n      let inputWidth = result2.initialLength;\r\n      result2.initialWidth = inputWidth;\r\n      result2.initialLength = inputLength;\r\n      setY_DirectionResultForClient([...y_directionResultForClient, result2]);\r\n    });\r\n\r\n    summaryAllOptions();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* <h4 style={{ textAlign: \"right\" }}>  הוראות שימוש</h4>\r\n\r\n      <ol style={{margin: \"2rem\", direction:\"rtl\", float:\"right\" }}> */}\r\n      {/* {titleList.map(line => {\r\n          return (\r\n            <li key={line.key} style={{ display: \"flex\" }}>{line.key+1}.{line.description} </li>\r\n          );\r\n        })} */}\r\n      {/* <div style={{textAlign:\"start\"}}>\r\n         <h5 >בתחתית המסך יופיעו התוצאות האפשריות להזמנה.</h5>\r\n        <h4> בתחילה תופיע רשימה של {<strong>סיכום</strong>}.</h4>\r\n        <h4>לאחר מכן יופיע {<strong>פירוט</strong>}. </h4>\r\n        </div>\r\n      </ol> */}\r\n\r\n      <div className='App'>\r\n        <Container>\r\n          <InputGroup\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"flex-end\",\r\n            }}\r\n            className=' mt-5  '\r\n          >\r\n            <h1 style={{ textAlign: \"right\" }}> מחשבון דשא סינטטי</h1>\r\n\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n              }}\r\n            >\r\n              <div className='buttons'>\r\n                <Button\r\n                  size='sm'\r\n                  onClick={() => {\r\n                    setColor(getRandomColour());\r\n                    setTitleColor(getRandomColour());\r\n                    setsquares([...squares, [+width, +length, color, 100, 50]]);\r\n                    setwidth(\"\");\r\n                    setlength(\"\");\r\n                    summaryAllOptions();\r\n                  }}\r\n                  className='m-3'\r\n                  variant='success'\r\n                >\r\n                  הוסף מלבן\r\n                </Button>\r\n                <Button\r\n                  size='sm'\r\n                  className='m-3'\r\n                  variant='success'\r\n                  onClick={() => {\r\n                    setopenSummary(true);\r\n\r\n                    summaryAllOptions();\r\n                  }}\r\n                >\r\n                  חשב\r\n                </Button>\r\n                <Button\r\n                  size='sm'\r\n                  onClick={() => {\r\n                    setsquares([]);\r\n                    setresultForClientPchat([]);\r\n                    setSummary([]);\r\n                    setwidth(0);\r\n                    setlength(0);\r\n                    setResultMinChiburNoDirection([]);\r\n                    setResultMinChiburWithDirection([]);\r\n                    setX_DirectionResultForClient([]);\r\n                    setY_DirectionResultForClient([]);\r\n                    setresultPchatWithDirection([]);\r\n                    setopenSummary(false);\r\n                  }}\r\n                  className='m-3'\r\n                  variant='success'\r\n                >\r\n                  נקה\r\n                </Button>\r\n              </div>\r\n              <div>\r\n                <Form.Label>\r\n                  <strong style={{ textAlign: \"right\" }}> רוחב במטרים</strong>\r\n                </Form.Label>\r\n                <FormControl\r\n                  value={width}\r\n                  style={{\r\n                    height: \"2rem\",\r\n                    direction: \"rtl\",\r\n                    maxHeight: \"2rem\",\r\n                  }}\r\n                  aria-label='Default'\r\n                  aria-describedby='inputGroup-sizing-default'\r\n                  id='width'\r\n                  onChange={(e) => {\r\n                    setwidth(e.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Form.Label>\r\n                  <strong>אורך מטרים</strong>\r\n                </Form.Label>\r\n                <FormControl\r\n                  value={length}\r\n                  style={{ direction: \"rtl\", maxHeight: \"2rem\" }}\r\n                  aria-label='Default'\r\n                  aria-describedby='inputGroup-sizing-default'\r\n                  id='length'\r\n                  onChange={(e) => {\r\n                    setlength(e.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </InputGroup>\r\n        </Container>\r\n      </div>\r\n      <Konva type='top' squares={squares} setsquares={setsquares} />\r\n\r\n      <hr></hr>\r\n\r\n      {openSummary && (\r\n        <div className='summary'>\r\n          <h3\r\n            style={{\r\n              textAlign: \"right\",\r\n              marginRight: \"3rem\",\r\n              marginBottom: \"3rem\",\r\n            }}\r\n          >\r\n            אלו התוצאות האפשריות עבורכם{\" \"}\r\n          </h3>\r\n          <ControlledTabs\r\n            summary={summary}\r\n            x_directionResultForClient={x_directionResultForClient}\r\n            y_directionResultForClient={y_directionResultForClient}\r\n            resultForClientPchat={resultForClientPchat}\r\n            squares={squares}\r\n            setsquares={setsquares}\r\n            resultPchatWithDirection={resultPchatWithDirection}\r\n            resultMinChiburWithDirection={resultMinChiburWithDirection}\r\n            resultMinChiburNoDirection={resultMinChiburNoDirection}\r\n          />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}
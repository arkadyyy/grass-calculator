{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\fullstack\\\\grass-calculator\\\\grass-calculator\\\\src\\\\pages\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport \"../App.css\";\nimport Konva from \"../components/Konva\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Button, InputGroup, FormControl, Modal, Form, Card, Container, Row, Col, Spinner } from \"react-bootstrap\";\nimport { useEffect, useState } from \"react\";\nimport calculateBestOption from \"../calculator\";\nimport ChiburCalc from \"../chiburCalc\";\nimport PchatWithDirection from \"../PchatWithDirection\";\nimport MinChiburNoDirection from \"../minChiburNoDirection\"; ////////////////////////////////////////////////////////////////////////\n\nfunction Home({\n  history\n}) {\n  _s();\n\n  //all squares entered\n  const [squares, setsquares] = useState([]); //best result for client considering pchat only\n\n  const [resultForClientPchat, setresultForClientPchat] = useState([]); //best result for client considering pchat and direction\n\n  const [resultPchatWithDirection, setresultPchatWithDirection] = useState([]); //best result for client considering connections only\n\n  const [resultMinChiburNoDirection, setresultMinChiburNoDirection] = useState([]); //all x axis results\n\n  const [x_directionResultForClient, setX_DirectionResultForClient] = useState([]); //all y axis results\n\n  const [y_directionResultForClient, setY_DirectionResultForClient] = useState([]); //summary state\n\n  const [summary, setSummary] = useState({\n    minPchatSummary: {\n      opt2: 0,\n      opt3: 0,\n      opt4: 0,\n      pchat: 0\n    },\n    minChiburNoDirection: {\n      opt2: 0,\n      opt3: 0,\n      opt4: 0,\n      pchat: 0\n    },\n    minChiburWithDirection: {\n      opt2: 0,\n      opt3: 0,\n      opt4: 0,\n      pchat: 0\n    }\n  }); //input values\n\n  const [width, setwidth] = useState(0);\n  const [length, setlength] = useState(0); //squares color\n\n  const [color, setColor] = useState(getRandomColour());\n\n  function getRandomColour() {\n    var red = Math.floor(Math.random() * 255);\n    var green = Math.floor(Math.random() * 255);\n    var blue = Math.floor(Math.random() * 255);\n    return \"rgb(\" + red + \",\" + green + \",\" + blue + \" )\";\n  }\n\n  const [openSummary, setopenSummary] = useState(false);\n  useEffect(() => {\n    console.log(\"summary changed !\");\n  }, [summary]);\n  useEffect(() => {\n    bestResult();\n    console.log(\"summary : \", summary);\n  }, [squares]);\n  useEffect(() => {\n    bestResultPchatWithDirection();\n    bestMinChiburNoDirection();\n  }, [x_directionResultForClient]);\n\n  function bestMinChiburNoDirection() {\n    let result4 = MinChiburNoDirection(x_directionResultForClient, y_directionResultForClient);\n    setresultMinChiburNoDirection(result4);\n  }\n\n  function bestResultPchatWithDirection() {\n    let result3 = PchatWithDirection(x_directionResultForClient, y_directionResultForClient);\n    setresultPchatWithDirection(result3);\n  }\n\n  function summaryAllOptions() {\n    let opt2AmountP = 0;\n    let opt3AmountP = 0;\n    let opt4AmountP = 0;\n    let pchatP = 0;\n    resultForClientPchat.forEach(square => {\n      opt2AmountP += square.opt2.amount;\n      opt3AmountP += square.opt3.amount;\n      opt4AmountP += square.opt4.amount;\n      pchatP += square.pchat;\n    });\n    let opt2AmountPD = 0;\n    let opt3AmountPD = 0;\n    let opt4AmountPD = 0;\n    let pchatPD = 0;\n    resultPchatWithDirection.forEach(square => {\n      opt2AmountPD += square.opt2.amount;\n      opt3AmountPD += square.opt3.amount;\n      opt4AmountPD += square.opt4.amount;\n      pchatPD += square.pchat;\n    });\n    let opt2AmountC = 0;\n    let opt3AmountC = 0;\n    let opt4AmountC = 0;\n    let pchatC = 0;\n    resultMinChiburNoDirection.forEach(square => {\n      opt2AmountC += square.opt2.amount;\n      opt3AmountC += square.opt3.amount;\n      opt4AmountC += square.opt4.amount;\n      pchatC += square.pchat;\n    });\n    setSummary({ ...summary,\n      minPchatSummary: {\n        opt2: opt2AmountP,\n        opt3: opt3AmountP,\n        opt4: opt4AmountP,\n        pchat: pchatP\n      },\n      minChiburNoDirection: {\n        opt2: opt2AmountC,\n        opt3: opt3AmountC,\n        opt4: opt4AmountC,\n        pchat: pchatC\n      },\n      minChiburWithDirection: {\n        opt2: opt2AmountPD,\n        opt3: opt3AmountPD,\n        opt4: opt4AmountPD,\n        pchat: pchatPD\n      }\n    });\n    console.log(\"resultForClientPchat : \", resultForClientPchat);\n    console.log(\"resultPchatWithDirection : \", resultPchatWithDirection);\n    console.log(\"resultMinChiburNoDirection : \", resultMinChiburNoDirection);\n  }\n\n  function bestResult() {\n    squares.forEach(square => {\n      //פחת מינימלי\n      let result1 = ChiburCalc(square[0] / 100, square[1] / 100);\n      let result2 = ChiburCalc(square[1] / 100, square[0] / 100);\n\n      if (result1.pchat === result2.pchat) {\n        setresultForClientPchat([...resultForClientPchat, result1]);\n      } else if (result1.pchat < result2.pchat) {\n        setresultForClientPchat([...resultForClientPchat, result1]);\n      } else {\n        setresultForClientPchat([...resultForClientPchat, result2]);\n      } //כיוון פריסה\n\n\n      setX_DirectionResultForClient([...x_directionResultForClient, result1]);\n      setY_DirectionResultForClient([...y_directionResultForClient, result2]);\n    });\n    summaryAllOptions();\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Konva, {\n        squares: squares,\n        setsquares: setsquares\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"flex-end\"\n        },\n        className: \"mb-3 p-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u05D7\\u05D9\\u05E9\\u05D5\\u05D1 \\u05D3\\u05E9\\u05D0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            style: {\n              textAlign: \"right\"\n            },\n            children: \"\\u05E8\\u05D5\\u05D7\\u05D1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          placeholder: \"\\u05D4\\u05DB\\u05E0\\u05E1 \\u05E8\\u05D5\\u05D7\\u05D1\",\n          style: {\n            width: \"35%\",\n            direction: \"rtl\"\n          },\n          \"aria-label\": \"Default\",\n          \"aria-describedby\": \"inputGroup-sizing-default\",\n          id: \"width\",\n          onChange: e => {\n            setwidth(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\u05D0\\u05D5\\u05E8\\u05DA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          placeholder: \"\\u05D4\\u05DB\\u05E0\\u05E1 \\u05D0\\u05D5\\u05E8\\u05DA\",\n          style: {\n            width: \"35%\",\n            direction: \"rtl\"\n          },\n          \"aria-label\": \"Default\",\n          \"aria-describedby\": \"inputGroup-sizing-default\",\n          id: \"length\",\n          onChange: e => {\n            setlength(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          style: {\n            display: \"flex\"\n          },\n          children: [\"פחת\", \"חיתוכים\", \"כיוון\"].map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              direction: \"rtl\",\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              margin: \" 1rem 0.3rem\"\n            },\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"checkbox\",\n              id: `default-${type}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this)]\n          }, `checkbox`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setColor(getRandomColour());\n              setsquares([...squares, [+width, +length, color]]);\n              console.log(width);\n              console.log(length);\n              setwidth(0);\n              setlength(0);\n              summaryAllOptions();\n            },\n            className: \"m-3\",\n            variant: \"success\",\n            children: \"\\u05D4\\u05D5\\u05E1\\u05E3 \\u05DE\\u05DC\\u05D1\\u05DF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"m-3\",\n            variant: \"success\",\n            onClick: () => {\n              setopenSummary(true);\n              summaryAllOptions();\n            },\n            children: \"\\u05D7\\u05E9\\u05D1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setsquares([]);\n              setresultForClientPchat([]);\n              setwidth(0);\n              setlength(0);\n            },\n            className: \"m-3\",\n            variant: \"success\",\n            children: \"\\u05E0\\u05E7\\u05D4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this), openSummary && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary\",\n      children: [/*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        variant: \"success\",\n        size: \"xl\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u05D0\\u05DC\\u05D5 \\u05D4\\u05EA\\u05D5\\u05E6\\u05D0\\u05D5\\u05EA \\u05E9\\u05DE\\u05E6\\u05D0\\u05E0\\u05D5 \\u05E2\\u05D1\\u05D5\\u05E8\\u05DA \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              border: \"secondary\",\n              style: {\n                width: \"18rem\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: \"\\u05D7\\u05D9\\u05E9\\u05D5\\u05D1 \\u05E2\\\"\\u05E4 \\u05DE\\u05D9\\u05E0\\u05D9\\u05DE\\u05D5\\u05DD \\u05E4\\u05D7\\u05EA\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 19\n              }, this), resultForClientPchat.map((square, index) => {\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                    children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                      children: [\"\\u05DE\\u05E8\\u05D5\\u05D1\\u05E2 \", index + 1]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 320,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 322,\n                        columnNumber: 29\n                      }, this), \"\\u05DE\\u05E9\\u05D8\\u05D7 4\\u05DE \", square.opt4.amount, \"\\u05D1\\u05D0\\u05D5\\u05E8\\u05DA \", square.opt4.length, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 325,\n                        columnNumber: 29\n                      }, this), \"\\u05DE\\u05E9\\u05D8\\u05D7 3\\u05DE \", square.opt3.amount, \"\\u05D1\\u05D0\\u05D5\\u05E8\\u05DA \", square.opt3.length, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 328,\n                        columnNumber: 29\n                      }, this), \"\\u05DE\\u05E9\\u05D8\\u05D7 2\\u05DE \", square.opt2.amount, \"\\u05D1\\u05D0\\u05D5\\u05E8\\u05DA \", square.opt2.length, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 331,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 321,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 319,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              border: \"secondary\",\n              style: {\n                width: \"18rem\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: \"\\u05D7\\u05D9\\u05E9\\u05D5\\u05D1 \\u05E2\\\"\\u05E4 \\u05DE\\u05D9\\u05E0\\u05D9\\u05DE\\u05D5\\u05DD \\u05D7\\u05D9\\u05D1\\u05D5\\u05E8\\u05D9\\u05DD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 19\n              }, this), resultMinChiburNoDirection.map((square, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                    children: [\"\\u05DE\\u05E8\\u05D5\\u05D1\\u05E2 \", index + 1]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 345,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    children: [\"\\u05DE\\u05E9\\u05D8\\u05D7 4\\u05DE \", square.opt4.amount, \"\\u05D1\\u05D0\\u05D5\\u05E8\\u05DA \", square.opt4.length, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 349,\n                      columnNumber: 27\n                    }, this), \"\\u05DE\\u05E9\\u05D8\\u05D7 3\\u05DE \", square.opt3.amount, \"\\u05D1\\u05D0\\u05D5\\u05E8\\u05DA \", square.opt3.length, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 352,\n                      columnNumber: 27\n                    }, this), \"\\u05DE\\u05E9\\u05D8\\u05D7 2\\u05DE \", square.opt2.amount, \"\\u05D1\\u05D0\\u05D5\\u05E8\\u05DA \", square.opt2.length, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 355,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: \"my-5\",\n              border: \"secondary\",\n              style: {\n                width: \"100%\"\n              },\n              children: Object.entries(summary).map(([key, value], i) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                  children: [\"enteries \", i]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                    children: key\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 375,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    children: [\"opt2 : \", value.opt2, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 378,\n                      columnNumber: 27\n                    }, this), \"opt3 : \", value.opt3, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 380,\n                      columnNumber: 27\n                    }, this), \"opt4 : \", value.opt4, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 382,\n                      columnNumber: 27\n                    }, this), \"pchat : \", value.pchat, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 384,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 376,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n} // const [summary, setSummary] = useState({\n//   minPchatSummary: {\n//     opt2: 0,\n//     opt3: 0,\n//     opt4: 0,\n//     pchat: 0,\n//   },\n//   minChiburNoDirection: {\n//     opt2: 0,\n//     opt3: 0,\n//     opt4: 0,\n//     pchat: 0,\n//   },\n//   minChiburWithDirection: {\n//     opt2: 0,\n//     opt3: 0,\n//     opt4: 0,\n//     pchat: 0,\n//   },\n// });\n\n\n_s(Home, \"0jlZaC0yz6Pyq0NvGtpI3BN5kVw=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/fullstack/grass-calculator/grass-calculator/src/pages/Home.js"],"names":["Konva","Button","InputGroup","FormControl","Modal","Form","Card","Container","Row","Col","Spinner","useEffect","useState","calculateBestOption","ChiburCalc","PchatWithDirection","MinChiburNoDirection","Home","history","squares","setsquares","resultForClientPchat","setresultForClientPchat","resultPchatWithDirection","setresultPchatWithDirection","resultMinChiburNoDirection","setresultMinChiburNoDirection","x_directionResultForClient","setX_DirectionResultForClient","y_directionResultForClient","setY_DirectionResultForClient","summary","setSummary","minPchatSummary","opt2","opt3","opt4","pchat","minChiburNoDirection","minChiburWithDirection","width","setwidth","length","setlength","color","setColor","getRandomColour","red","Math","floor","random","green","blue","openSummary","setopenSummary","console","log","bestResult","bestResultPchatWithDirection","bestMinChiburNoDirection","result4","result3","summaryAllOptions","opt2AmountP","opt3AmountP","opt4AmountP","pchatP","forEach","square","amount","opt2AmountPD","opt3AmountPD","opt4AmountPD","pchatPD","opt2AmountC","opt3AmountC","opt4AmountC","pchatC","result1","result2","display","flexDirection","alignItems","textAlign","direction","e","target","value","map","type","justifyContent","margin","index","Object","entries","key","i"],"mappings":";;;;;;AAAA,OAAO,YAAP;AACA,OAAOA,KAAP,MAAkB,qBAAlB;AACA,OAAO,sCAAP;AACA,SACEC,MADF,EAEEC,UAFF,EAGEC,WAHF,EAIEC,KAJF,EAKEC,IALF,EAMEC,IANF,EAOEC,SAPF,EAQEC,GARF,EASEC,GATF,EAUEC,OAVF,QAWO,iBAXP;AAYA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,mBAAP,MAAgC,eAAhC;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,kBAAP,MAA+B,uBAA/B;AACA,OAAOC,oBAAP,MAAiC,yBAAjC,C,CAEA;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAA2B;AAAA;;AACzB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC,CAFyB,CAIzB;;AACA,QAAM,CAACS,oBAAD,EAAuBC,uBAAvB,IAAkDV,QAAQ,CAAC,EAAD,CAAhE,CALyB,CAOzB;;AACA,QAAM,CAACW,wBAAD,EAA2BC,2BAA3B,IAA0DZ,QAAQ,CAAC,EAAD,CAAxE,CARyB,CAUzB;;AACA,QAAM,CAACa,0BAAD,EAA6BC,6BAA7B,IAA8Dd,QAAQ,CAC1E,EAD0E,CAA5E,CAXyB,CAezB;;AACA,QAAM,CAACe,0BAAD,EAA6BC,6BAA7B,IAA8DhB,QAAQ,CAC1E,EAD0E,CAA5E,CAhByB,CAoBzB;;AACA,QAAM,CAACiB,0BAAD,EAA6BC,6BAA7B,IAA8DlB,QAAQ,CAC1E,EAD0E,CAA5E,CArByB,CAyBzB;;AAEA,QAAM,CAACmB,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC;AACrCqB,IAAAA,eAAe,EAAE;AACfC,MAAAA,IAAI,EAAE,CADS;AAEfC,MAAAA,IAAI,EAAE,CAFS;AAGfC,MAAAA,IAAI,EAAE,CAHS;AAIfC,MAAAA,KAAK,EAAE;AAJQ,KADoB;AAOrCC,IAAAA,oBAAoB,EAAE;AACpBJ,MAAAA,IAAI,EAAE,CADc;AAEpBC,MAAAA,IAAI,EAAE,CAFc;AAGpBC,MAAAA,IAAI,EAAE,CAHc;AAIpBC,MAAAA,KAAK,EAAE;AAJa,KAPe;AAarCE,IAAAA,sBAAsB,EAAE;AACtBL,MAAAA,IAAI,EAAE,CADgB;AAEtBC,MAAAA,IAAI,EAAE,CAFgB;AAGtBC,MAAAA,IAAI,EAAE,CAHgB;AAItBC,MAAAA,KAAK,EAAE;AAJe;AAba,GAAD,CAAtC,CA3ByB,CAgDzB;;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoB7B,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAAC8B,MAAD,EAASC,SAAT,IAAsB/B,QAAQ,CAAC,CAAD,CAApC,CAlDyB,CAoDzB;;AACA,QAAM,CAACgC,KAAD,EAAQC,QAAR,IAAoBjC,QAAQ,CAACkC,eAAe,EAAhB,CAAlC;;AAEA,WAASA,eAAT,GAA2B;AACzB,QAAIC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAV;AACA,QAAIC,KAAK,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAZ;AACA,QAAIE,IAAI,GAAGJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAX;AAEA,WAAO,SAASH,GAAT,GAAe,GAAf,GAAqBI,KAArB,GAA6B,GAA7B,GAAmCC,IAAnC,GAA0C,IAAjD;AACD;;AAED,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgC1C,QAAQ,CAAC,KAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd4C,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD,GAFQ,EAEN,CAACzB,OAAD,CAFM,CAAT;AAIApB,EAAAA,SAAS,CAAC,MAAM;AACd8C,IAAAA,UAAU;AACVF,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BzB,OAA1B;AACD,GAHQ,EAGN,CAACZ,OAAD,CAHM,CAAT;AAKAR,EAAAA,SAAS,CAAC,MAAM;AACd+C,IAAAA,4BAA4B;AAC5BC,IAAAA,wBAAwB;AACzB,GAHQ,EAGN,CAAChC,0BAAD,CAHM,CAAT;;AAKA,WAASgC,wBAAT,GAAoC;AAClC,QAAIC,OAAO,GAAG5C,oBAAoB,CAChCW,0BADgC,EAEhCE,0BAFgC,CAAlC;AAKAH,IAAAA,6BAA6B,CAACkC,OAAD,CAA7B;AACD;;AAED,WAASF,4BAAT,GAAwC;AACtC,QAAIG,OAAO,GAAG9C,kBAAkB,CAC9BY,0BAD8B,EAE9BE,0BAF8B,CAAhC;AAKAL,IAAAA,2BAA2B,CAACqC,OAAD,CAA3B;AACD;;AAED,WAASC,iBAAT,GAA6B;AAC3B,QAAIC,WAAW,GAAG,CAAlB;AACA,QAAIC,WAAW,GAAG,CAAlB;AACA,QAAIC,WAAW,GAAG,CAAlB;AACA,QAAIC,MAAM,GAAG,CAAb;AACA7C,IAAAA,oBAAoB,CAAC8C,OAArB,CAA8BC,MAAD,IAAY;AACvCL,MAAAA,WAAW,IAAIK,MAAM,CAAClC,IAAP,CAAYmC,MAA3B;AACAL,MAAAA,WAAW,IAAII,MAAM,CAACjC,IAAP,CAAYkC,MAA3B;AACAJ,MAAAA,WAAW,IAAIG,MAAM,CAAChC,IAAP,CAAYiC,MAA3B;AACAH,MAAAA,MAAM,IAAIE,MAAM,CAAC/B,KAAjB;AACD,KALD;AAOA,QAAIiC,YAAY,GAAG,CAAnB;AACA,QAAIC,YAAY,GAAG,CAAnB;AACA,QAAIC,YAAY,GAAG,CAAnB;AACA,QAAIC,OAAO,GAAG,CAAd;AACAlD,IAAAA,wBAAwB,CAAC4C,OAAzB,CAAkCC,MAAD,IAAY;AAC3CE,MAAAA,YAAY,IAAIF,MAAM,CAAClC,IAAP,CAAYmC,MAA5B;AACAE,MAAAA,YAAY,IAAIH,MAAM,CAACjC,IAAP,CAAYkC,MAA5B;AACAG,MAAAA,YAAY,IAAIJ,MAAM,CAAChC,IAAP,CAAYiC,MAA5B;AACAI,MAAAA,OAAO,IAAIL,MAAM,CAAC/B,KAAlB;AACD,KALD;AAOA,QAAIqC,WAAW,GAAG,CAAlB;AACA,QAAIC,WAAW,GAAG,CAAlB;AACA,QAAIC,WAAW,GAAG,CAAlB;AACA,QAAIC,MAAM,GAAG,CAAb;AACApD,IAAAA,0BAA0B,CAAC0C,OAA3B,CAAoCC,MAAD,IAAY;AAC7CM,MAAAA,WAAW,IAAIN,MAAM,CAAClC,IAAP,CAAYmC,MAA3B;AACAM,MAAAA,WAAW,IAAIP,MAAM,CAACjC,IAAP,CAAYkC,MAA3B;AACAO,MAAAA,WAAW,IAAIR,MAAM,CAAChC,IAAP,CAAYiC,MAA3B;AACAQ,MAAAA,MAAM,IAAIT,MAAM,CAAC/B,KAAjB;AACD,KALD;AAOAL,IAAAA,UAAU,CAAC,EACT,GAAGD,OADM;AAETE,MAAAA,eAAe,EAAE;AACfC,QAAAA,IAAI,EAAE6B,WADS;AAEf5B,QAAAA,IAAI,EAAE6B,WAFS;AAGf5B,QAAAA,IAAI,EAAE6B,WAHS;AAIf5B,QAAAA,KAAK,EAAE6B;AAJQ,OAFR;AAQT5B,MAAAA,oBAAoB,EAAE;AACpBJ,QAAAA,IAAI,EAAEwC,WADc;AAEpBvC,QAAAA,IAAI,EAAEwC,WAFc;AAGpBvC,QAAAA,IAAI,EAAEwC,WAHc;AAIpBvC,QAAAA,KAAK,EAAEwC;AAJa,OARb;AAcTtC,MAAAA,sBAAsB,EAAE;AACtBL,QAAAA,IAAI,EAAEoC,YADgB;AAEtBnC,QAAAA,IAAI,EAAEoC,YAFgB;AAGtBnC,QAAAA,IAAI,EAAEoC,YAHgB;AAItBnC,QAAAA,KAAK,EAAEoC;AAJe;AAdf,KAAD,CAAV;AAsBAlB,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCnC,oBAAvC;AACAkC,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CjC,wBAA3C;AACAgC,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6C/B,0BAA7C;AACD;;AAED,WAASgC,UAAT,GAAsB;AACpBtC,IAAAA,OAAO,CAACgD,OAAR,CAAiBC,MAAD,IAAY;AAC1B;AACA,UAAIU,OAAO,GAAGhE,UAAU,CAACsD,MAAM,CAAC,CAAD,CAAN,GAAY,GAAb,EAAkBA,MAAM,CAAC,CAAD,CAAN,GAAY,GAA9B,CAAxB;AACA,UAAIW,OAAO,GAAGjE,UAAU,CAACsD,MAAM,CAAC,CAAD,CAAN,GAAY,GAAb,EAAkBA,MAAM,CAAC,CAAD,CAAN,GAAY,GAA9B,CAAxB;;AACA,UAAIU,OAAO,CAACzC,KAAR,KAAkB0C,OAAO,CAAC1C,KAA9B,EAAqC;AACnCf,QAAAA,uBAAuB,CAAC,CAAC,GAAGD,oBAAJ,EAA0ByD,OAA1B,CAAD,CAAvB;AACD,OAFD,MAEO,IAAIA,OAAO,CAACzC,KAAR,GAAgB0C,OAAO,CAAC1C,KAA5B,EAAmC;AACxCf,QAAAA,uBAAuB,CAAC,CAAC,GAAGD,oBAAJ,EAA0ByD,OAA1B,CAAD,CAAvB;AACD,OAFM,MAEA;AACLxD,QAAAA,uBAAuB,CAAC,CAAC,GAAGD,oBAAJ,EAA0B0D,OAA1B,CAAD,CAAvB;AACD,OAVyB,CAY1B;;;AACAnD,MAAAA,6BAA6B,CAAC,CAAC,GAAGD,0BAAJ,EAAgCmD,OAAhC,CAAD,CAA7B;AACAhD,MAAAA,6BAA6B,CAAC,CAAC,GAAGD,0BAAJ,EAAgCkD,OAAhC,CAAD,CAA7B;AACD,KAfD;AAiBAjB,IAAAA,iBAAiB;AAClB;;AAED,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,OAAO,EAAE3C,OAAhB;AAAyB,QAAA,UAAU,EAAEC;AAArC;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,UAAD;AACE,QAAA,KAAK,EAAE;AACL4D,UAAAA,OAAO,EAAE,MADJ;AAELC,UAAAA,aAAa,EAAE,QAFV;AAGLC,UAAAA,UAAU,EAAE;AAHP,SADT;AAME,QAAA,SAAS,EAAC,UANZ;AAAA,gCAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eASE,QAAC,IAAD,CAAM,KAAN;AAAA,iCACE;AAAQ,YAAA,KAAK,EAAE;AAAEC,cAAAA,SAAS,EAAE;AAAb,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBATF,eAYE,QAAC,WAAD;AACE,UAAA,WAAW,EAAC,mDADd;AAEE,UAAA,KAAK,EAAE;AAAE3C,YAAAA,KAAK,EAAE,KAAT;AAAgB4C,YAAAA,SAAS,EAAE;AAA3B,WAFT;AAGE,wBAAW,SAHb;AAIE,8BAAiB,2BAJnB;AAKE,UAAA,EAAE,EAAC,OALL;AAME,UAAA,QAAQ,EAAGC,CAAD,IAAO;AACf5C,YAAAA,QAAQ,CAAC4C,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD;AARH;AAAA;AAAA;AAAA;AAAA,gBAZF,eAsBE,QAAC,IAAD,CAAM,KAAN;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAtBF,eAyBE,QAAC,WAAD;AACE,UAAA,WAAW,EAAC,mDADd;AAEE,UAAA,KAAK,EAAE;AAAE/C,YAAAA,KAAK,EAAE,KAAT;AAAgB4C,YAAAA,SAAS,EAAE;AAA3B,WAFT;AAGE,wBAAW,SAHb;AAIE,8BAAiB,2BAJnB;AAKE,UAAA,EAAE,EAAC,QALL;AAME,UAAA,QAAQ,EAAGC,CAAD,IAAO;AACf1C,YAAAA,SAAS,CAAC0C,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACD;AARH;AAAA;AAAA;AAAA;AAAA,gBAzBF,eAmCE,QAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEP,YAAAA,OAAO,EAAE;AAAX,WAAb;AAAA,oBACG,CAAC,KAAD,EAAQ,SAAR,EAAmB,OAAnB,EAA4BQ,GAA5B,CAAiCC,IAAD,iBAC/B;AACE,YAAA,KAAK,EAAE;AACLL,cAAAA,SAAS,EAAE,KADN;AAELJ,cAAAA,OAAO,EAAE,MAFJ;AAGLU,cAAAA,cAAc,EAAE,eAHX;AAILC,cAAAA,MAAM,EAAE;AAJH,aADT;AAQE,YAAA,SAAS,EAAC,MARZ;AAAA,oCAUE,QAAC,IAAD,CAAM,KAAN;AAAA,qCACE;AAAA,0BAASF;AAAT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAVF,eAaE,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,IAAI,EAAC,UAAjB;AAA4B,cAAA,EAAE,EAAG,WAAUA,IAAK;AAAhD;AAAA;AAAA;AAAA;AAAA,oBAbF;AAAA,aAOQ,UAPR;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBAnCF,eAsDE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,kCACE,QAAC,MAAD;AACE,YAAA,OAAO,EAAE,MAAM;AACb5C,cAAAA,QAAQ,CAACC,eAAe,EAAhB,CAAR;AACA1B,cAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAa,CAAC,CAACqB,KAAF,EAAS,CAACE,MAAV,EAAkBE,KAAlB,CAAb,CAAD,CAAV;AACAW,cAAAA,OAAO,CAACC,GAAR,CAAYhB,KAAZ;AACAe,cAAAA,OAAO,CAACC,GAAR,CAAYd,MAAZ;AACAD,cAAAA,QAAQ,CAAC,CAAD,CAAR;AACAE,cAAAA,SAAS,CAAC,CAAD,CAAT;AACAmB,cAAAA,iBAAiB;AAClB,aATH;AAUE,YAAA,SAAS,EAAC,KAVZ;AAWE,YAAA,OAAO,EAAC,SAXV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAgBE,QAAC,MAAD;AACE,YAAA,SAAS,EAAC,KADZ;AAEE,YAAA,OAAO,EAAC,SAFV;AAGE,YAAA,OAAO,EAAE,MAAM;AACbR,cAAAA,cAAc,CAAC,IAAD,CAAd;AAEAQ,cAAAA,iBAAiB;AAClB,aAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhBF,eA2BE,QAAC,MAAD;AACE,YAAA,OAAO,EAAE,MAAM;AACb1C,cAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,cAAAA,uBAAuB,CAAC,EAAD,CAAvB;AAEAmB,cAAAA,QAAQ,CAAC,CAAD,CAAR;AACAE,cAAAA,SAAS,CAAC,CAAD,CAAT;AACD,aAPH;AAQE,YAAA,SAAS,EAAC,KARZ;AASE,YAAA,OAAO,EAAC,SATV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtDF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAqGE;AAAA;AAAA;AAAA;AAAA,YArGF,EAuGGU,WAAW,iBACV;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,SAAS,EAAC,QAAnB;AAA4B,QAAA,OAAO,EAAC,SAApC;AAA8C,QAAA,IAAI,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,SAAD;AAAA,gCACE,QAAC,GAAD;AAAA,kCACE,QAAC,GAAD;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,MAAM,EAAC,WAAb;AAAyB,cAAA,KAAK,EAAE;AAAEb,gBAAAA,KAAK,EAAE;AAAT,eAAhC;AAAA,sCACE,QAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEGnB,oBAAoB,CAACmE,GAArB,CAAyB,CAACpB,MAAD,EAASwB,KAAT,KAAmB;AAC3C,oCACE;AAAA,yCACE,QAAC,IAAD,CAAM,IAAN;AAAA,4CACE,QAAC,IAAD,CAAM,KAAN;AAAA,oEAAmBA,KAAK,GAAG,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,8CACE;AAAA;AAAA;AAAA;AAAA,8BADF,uCAEWxB,MAAM,CAAChC,IAAP,CAAYiC,MAFvB,qCAGSD,MAAM,CAAChC,IAAP,CAAYM,MAHrB,eAIE;AAAA;AAAA;AAAA;AAAA,8BAJF,uCAKW0B,MAAM,CAACjC,IAAP,CAAYkC,MALvB,qCAMSD,MAAM,CAACjC,IAAP,CAAYO,MANrB,eAOE;AAAA;AAAA;AAAA;AAAA,8BAPF,uCAQW0B,MAAM,CAAClC,IAAP,CAAYmC,MARvB,qCASSD,MAAM,CAAClC,IAAP,CAAYQ,MATrB,eAUE;AAAA;AAAA;AAAA;AAAA,8BAVF;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,iCADF;AAmBD,eApBA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eA2BE,QAAC,GAAD;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,MAAM,EAAC,WAAb;AAAyB,cAAA,KAAK,EAAE;AAAEF,gBAAAA,KAAK,EAAE;AAAT,eAAhC;AAAA,sCACE,QAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEGf,0BAA0B,CAAC+D,GAA3B,CAA+B,CAACpB,MAAD,EAASwB,KAAT,kBAC9B;AAAA,uCACE,QAAC,IAAD,CAAM,IAAN;AAAA,0CACE,QAAC,IAAD,CAAM,KAAN;AAAA,kEAAmBA,KAAK,GAAG,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,oEACWxB,MAAM,CAAChC,IAAP,CAAYiC,MADvB,qCAESD,MAAM,CAAChC,IAAP,CAAYM,MAFrB,eAGE;AAAA;AAAA;AAAA;AAAA,4BAHF,uCAIW0B,MAAM,CAACjC,IAAP,CAAYkC,MAJvB,qCAKSD,MAAM,CAACjC,IAAP,CAAYO,MALrB,eAME;AAAA;AAAA;AAAA;AAAA,4BANF,uCAOW0B,MAAM,CAAClC,IAAP,CAAYmC,MAPvB,qCAQSD,MAAM,CAAClC,IAAP,CAAYQ,MARrB,eASE;AAAA;AAAA;AAAA;AAAA,4BATF;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,+BADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAoDE,QAAC,GAAD;AAAA,iCACE,QAAC,GAAD;AAAA,mCACE,QAAC,IAAD;AACE,cAAA,SAAS,EAAC,MADZ;AAEE,cAAA,MAAM,EAAC,WAFT;AAGE,cAAA,KAAK,EAAE;AAAEF,gBAAAA,KAAK,EAAE;AAAT,eAHT;AAAA,wBAKGqD,MAAM,CAACC,OAAP,CAAe/D,OAAf,EAAwByD,GAAxB,CAA4B,CAAC,CAACO,GAAD,EAAMR,KAAN,CAAD,EAAeS,CAAf,kBAC3B;AAAA,wCACE,QAAC,IAAD,CAAM,MAAN;AAAA,0CAAuBA,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAGE,QAAC,IAAD,CAAM,IAAN;AAAA,0CACE,QAAC,IAAD,CAAM,KAAN;AAAA,8BAAaD;AAAb;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,0CACUR,KAAK,CAACrD,IADhB,eAEE;AAAA;AAAA;AAAA;AAAA,4BAFF,aAGUqD,KAAK,CAACpD,IAHhB,eAIE;AAAA;AAAA;AAAA;AAAA,4BAJF,aAKUoD,KAAK,CAACnD,IALhB,eAME;AAAA;AAAA;AAAA;AAAA,4BANF,cAOWmD,KAAK,CAAClD,KAPjB,eAQE;AAAA;AAAA;AAAA;AAAA,4BARF;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF;AAAA,8BADD;AALH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBApDF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAxGJ;AAAA,kBADF;AAkMD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GA1YSpB,I;;KAAAA,I;AA4YT,eAAeA,IAAf","sourcesContent":["import \"../App.css\";\r\nimport Konva from \"../components/Konva\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Button,\r\n  InputGroup,\r\n  FormControl,\r\n  Modal,\r\n  Form,\r\n  Card,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport { useEffect, useState } from \"react\";\r\nimport calculateBestOption from \"../calculator\";\r\nimport ChiburCalc from \"../chiburCalc\";\r\nimport PchatWithDirection from \"../PchatWithDirection\";\r\nimport MinChiburNoDirection from \"../minChiburNoDirection\";\r\n\r\n////////////////////////////////////////////////////////////////////////\r\n\r\nfunction Home({ history }) {\r\n  //all squares entered\r\n  const [squares, setsquares] = useState([]);\r\n\r\n  //best result for client considering pchat only\r\n  const [resultForClientPchat, setresultForClientPchat] = useState([]);\r\n\r\n  //best result for client considering pchat and direction\r\n  const [resultPchatWithDirection, setresultPchatWithDirection] = useState([]);\r\n\r\n  //best result for client considering connections only\r\n  const [resultMinChiburNoDirection, setresultMinChiburNoDirection] = useState(\r\n    []\r\n  );\r\n\r\n  //all x axis results\r\n  const [x_directionResultForClient, setX_DirectionResultForClient] = useState(\r\n    []\r\n  );\r\n\r\n  //all y axis results\r\n  const [y_directionResultForClient, setY_DirectionResultForClient] = useState(\r\n    []\r\n  );\r\n\r\n  //summary state\r\n\r\n  const [summary, setSummary] = useState({\r\n    minPchatSummary: {\r\n      opt2: 0,\r\n      opt3: 0,\r\n      opt4: 0,\r\n      pchat: 0,\r\n    },\r\n    minChiburNoDirection: {\r\n      opt2: 0,\r\n      opt3: 0,\r\n      opt4: 0,\r\n      pchat: 0,\r\n    },\r\n    minChiburWithDirection: {\r\n      opt2: 0,\r\n      opt3: 0,\r\n      opt4: 0,\r\n      pchat: 0,\r\n    },\r\n  });\r\n\r\n  //input values\r\n  const [width, setwidth] = useState(0);\r\n  const [length, setlength] = useState(0);\r\n\r\n  //squares color\r\n  const [color, setColor] = useState(getRandomColour());\r\n\r\n  function getRandomColour() {\r\n    var red = Math.floor(Math.random() * 255);\r\n    var green = Math.floor(Math.random() * 255);\r\n    var blue = Math.floor(Math.random() * 255);\r\n\r\n    return \"rgb(\" + red + \",\" + green + \",\" + blue + \" )\";\r\n  }\r\n\r\n  const [openSummary, setopenSummary] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log(\"summary changed !\");\r\n  }, [summary]);\r\n\r\n  useEffect(() => {\r\n    bestResult();\r\n    console.log(\"summary : \", summary);\r\n  }, [squares]);\r\n\r\n  useEffect(() => {\r\n    bestResultPchatWithDirection();\r\n    bestMinChiburNoDirection();\r\n  }, [x_directionResultForClient]);\r\n\r\n  function bestMinChiburNoDirection() {\r\n    let result4 = MinChiburNoDirection(\r\n      x_directionResultForClient,\r\n      y_directionResultForClient\r\n    );\r\n\r\n    setresultMinChiburNoDirection(result4);\r\n  }\r\n\r\n  function bestResultPchatWithDirection() {\r\n    let result3 = PchatWithDirection(\r\n      x_directionResultForClient,\r\n      y_directionResultForClient\r\n    );\r\n\r\n    setresultPchatWithDirection(result3);\r\n  }\r\n\r\n  function summaryAllOptions() {\r\n    let opt2AmountP = 0;\r\n    let opt3AmountP = 0;\r\n    let opt4AmountP = 0;\r\n    let pchatP = 0;\r\n    resultForClientPchat.forEach((square) => {\r\n      opt2AmountP += square.opt2.amount;\r\n      opt3AmountP += square.opt3.amount;\r\n      opt4AmountP += square.opt4.amount;\r\n      pchatP += square.pchat;\r\n    });\r\n\r\n    let opt2AmountPD = 0;\r\n    let opt3AmountPD = 0;\r\n    let opt4AmountPD = 0;\r\n    let pchatPD = 0;\r\n    resultPchatWithDirection.forEach((square) => {\r\n      opt2AmountPD += square.opt2.amount;\r\n      opt3AmountPD += square.opt3.amount;\r\n      opt4AmountPD += square.opt4.amount;\r\n      pchatPD += square.pchat;\r\n    });\r\n\r\n    let opt2AmountC = 0;\r\n    let opt3AmountC = 0;\r\n    let opt4AmountC = 0;\r\n    let pchatC = 0;\r\n    resultMinChiburNoDirection.forEach((square) => {\r\n      opt2AmountC += square.opt2.amount;\r\n      opt3AmountC += square.opt3.amount;\r\n      opt4AmountC += square.opt4.amount;\r\n      pchatC += square.pchat;\r\n    });\r\n\r\n    setSummary({\r\n      ...summary,\r\n      minPchatSummary: {\r\n        opt2: opt2AmountP,\r\n        opt3: opt3AmountP,\r\n        opt4: opt4AmountP,\r\n        pchat: pchatP,\r\n      },\r\n      minChiburNoDirection: {\r\n        opt2: opt2AmountC,\r\n        opt3: opt3AmountC,\r\n        opt4: opt4AmountC,\r\n        pchat: pchatC,\r\n      },\r\n      minChiburWithDirection: {\r\n        opt2: opt2AmountPD,\r\n        opt3: opt3AmountPD,\r\n        opt4: opt4AmountPD,\r\n        pchat: pchatPD,\r\n      },\r\n    });\r\n\r\n    console.log(\"resultForClientPchat : \", resultForClientPchat);\r\n    console.log(\"resultPchatWithDirection : \", resultPchatWithDirection);\r\n    console.log(\"resultMinChiburNoDirection : \", resultMinChiburNoDirection);\r\n  }\r\n\r\n  function bestResult() {\r\n    squares.forEach((square) => {\r\n      //פחת מינימלי\r\n      let result1 = ChiburCalc(square[0] / 100, square[1] / 100);\r\n      let result2 = ChiburCalc(square[1] / 100, square[0] / 100);\r\n      if (result1.pchat === result2.pchat) {\r\n        setresultForClientPchat([...resultForClientPchat, result1]);\r\n      } else if (result1.pchat < result2.pchat) {\r\n        setresultForClientPchat([...resultForClientPchat, result1]);\r\n      } else {\r\n        setresultForClientPchat([...resultForClientPchat, result2]);\r\n      }\r\n\r\n      //כיוון פריסה\r\n      setX_DirectionResultForClient([...x_directionResultForClient, result1]);\r\n      setY_DirectionResultForClient([...y_directionResultForClient, result2]);\r\n    });\r\n\r\n    summaryAllOptions();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='App'>\r\n        <Konva squares={squares} setsquares={setsquares} />\r\n\r\n        <InputGroup\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"flex-end\",\r\n          }}\r\n          className='mb-3 p-5'\r\n        >\r\n          <h1>חישוב דשא</h1>\r\n          <Form.Label>\r\n            <strong style={{ textAlign: \"right\" }}>רוחב</strong>\r\n          </Form.Label>\r\n          <FormControl\r\n            placeholder='הכנס רוחב'\r\n            style={{ width: \"35%\", direction: \"rtl\" }}\r\n            aria-label='Default'\r\n            aria-describedby='inputGroup-sizing-default'\r\n            id='width'\r\n            onChange={(e) => {\r\n              setwidth(e.target.value);\r\n            }}\r\n          />\r\n          <Form.Label>\r\n            <strong>אורך</strong>\r\n          </Form.Label>\r\n          <FormControl\r\n            placeholder='הכנס אורך'\r\n            style={{ width: \"35%\", direction: \"rtl\" }}\r\n            aria-label='Default'\r\n            aria-describedby='inputGroup-sizing-default'\r\n            id='length'\r\n            onChange={(e) => {\r\n              setlength(e.target.value);\r\n            }}\r\n          />\r\n          <Form style={{ display: \"flex\" }}>\r\n            {[\"פחת\", \"חיתוכים\", \"כיוון\"].map((type) => (\r\n              <div\r\n                style={{\r\n                  direction: \"rtl\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-between\",\r\n                  margin: \" 1rem 0.3rem\",\r\n                }}\r\n                key={`checkbox`}\r\n                className='mb-3'\r\n              >\r\n                <Form.Label>\r\n                  <strong>{type}</strong>\r\n                </Form.Label>\r\n                <Form.Check type='checkbox' id={`default-${type}`} />\r\n              </div>\r\n            ))}\r\n          </Form>\r\n          <div className='buttons'>\r\n            <Button\r\n              onClick={() => {\r\n                setColor(getRandomColour());\r\n                setsquares([...squares, [+width, +length, color]]);\r\n                console.log(width);\r\n                console.log(length);\r\n                setwidth(0);\r\n                setlength(0);\r\n                summaryAllOptions();\r\n              }}\r\n              className='m-3'\r\n              variant='success'\r\n            >\r\n              הוסף מלבן\r\n            </Button>\r\n            <Button\r\n              className='m-3'\r\n              variant='success'\r\n              onClick={() => {\r\n                setopenSummary(true);\r\n\r\n                summaryAllOptions();\r\n              }}\r\n            >\r\n              חשב\r\n            </Button>\r\n            <Button\r\n              onClick={() => {\r\n                setsquares([]);\r\n                setresultForClientPchat([]);\r\n\r\n                setwidth(0);\r\n                setlength(0);\r\n              }}\r\n              className='m-3'\r\n              variant='success'\r\n            >\r\n              נקה\r\n            </Button>\r\n          </div>\r\n        </InputGroup>\r\n      </div>\r\n      <hr></hr>\r\n\r\n      {openSummary && (\r\n        <div className='summary'>\r\n          <Spinner animation='border' variant='success' size='xl' />\r\n          <h3>אלו התוצאות שמצאנו עבורך </h3>\r\n          <Container>\r\n            <Row>\r\n              <Col>\r\n                <Card border='secondary' style={{ width: \"18rem\" }}>\r\n                  <Card.Header>חישוב ע\"פ מינימום פחת</Card.Header>\r\n                  {resultForClientPchat.map((square, index) => {\r\n                    return (\r\n                      <>\r\n                        <Card.Body>\r\n                          <Card.Title>מרובע {index + 1}</Card.Title>\r\n                          <Card.Text>\r\n                            <hr></hr>\r\n                            משטח 4מ {square.opt4.amount}\r\n                            באורך {square.opt4.length}\r\n                            <br></br>\r\n                            משטח 3מ {square.opt3.amount}\r\n                            באורך {square.opt3.length}\r\n                            <br></br>\r\n                            משטח 2מ {square.opt2.amount}\r\n                            באורך {square.opt2.length}\r\n                            <br></br>\r\n                          </Card.Text>\r\n                        </Card.Body>\r\n                      </>\r\n                    );\r\n                  })}\r\n                </Card>\r\n              </Col>\r\n              <Col>\r\n                <Card border='secondary' style={{ width: \"18rem\" }}>\r\n                  <Card.Header>חישוב ע\"פ מינימום חיבורים</Card.Header>\r\n                  {resultMinChiburNoDirection.map((square, index) => (\r\n                    <>\r\n                      <Card.Body>\r\n                        <Card.Title>מרובע {index + 1}</Card.Title>\r\n                        <Card.Text>\r\n                          משטח 4מ {square.opt4.amount}\r\n                          באורך {square.opt4.length}\r\n                          <br></br>\r\n                          משטח 3מ {square.opt3.amount}\r\n                          באורך {square.opt3.length}\r\n                          <br></br>\r\n                          משטח 2מ {square.opt2.amount}\r\n                          באורך {square.opt2.length}\r\n                          <br></br>\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </>\r\n                  ))}\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Card\r\n                  className='my-5'\r\n                  border='secondary'\r\n                  style={{ width: \"100%\" }}\r\n                >\r\n                  {Object.entries(summary).map(([key, value], i) => (\r\n                    <>\r\n                      <Card.Header>enteries {i}</Card.Header>\r\n\r\n                      <Card.Body>\r\n                        <Card.Title>{key}</Card.Title>\r\n                        <Card.Text>\r\n                          opt2 : {value.opt2}\r\n                          <br></br>\r\n                          opt3 : {value.opt3}\r\n                          <br></br>\r\n                          opt4 : {value.opt4}\r\n                          <br></br>\r\n                          pchat : {value.pchat}\r\n                          <br></br>\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </>\r\n                  ))}\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\n// const [summary, setSummary] = useState({\r\n//   minPchatSummary: {\r\n//     opt2: 0,\r\n//     opt3: 0,\r\n//     opt4: 0,\r\n//     pchat: 0,\r\n//   },\r\n//   minChiburNoDirection: {\r\n//     opt2: 0,\r\n//     opt3: 0,\r\n//     opt4: 0,\r\n//     pchat: 0,\r\n//   },\r\n//   minChiburWithDirection: {\r\n//     opt2: 0,\r\n//     opt3: 0,\r\n//     opt4: 0,\r\n//     pchat: 0,\r\n//   },\r\n// });\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}
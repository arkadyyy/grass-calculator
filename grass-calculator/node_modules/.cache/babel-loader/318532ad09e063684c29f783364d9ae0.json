{"ast":null,"code":"function MinChiburWithDirection(arrX, arrY) {\n  let optX = 0;\n  let optY = 0;\n  let optXPchat = 0;\n  let optYPchat = 0;\n\n  for (let i = 0; i < arrX.length; i++) {\n    optX += +arrX[i].opt2.amount + +arrX[i].opt3.amount + +arrX[i].opt4.amount;\n    optY += +arrY[i].opt2.amount + +arrY[i].opt3.amount + +arrY[i].opt4.amount;\n    optXPchat += +arrX[i].pchat;\n    optYPchat += +arrY[i].pchat;\n  } // if (optX+optY===1) {\n  //   if (optXPchat < optYPchat) {\n  //     return arrX;\n  //   } else if (optXPchat > optYPchat) {\n  //     return arrY;\n  //   } else {\n  //     return arrX;\n  //   }  \n  // }\n  // else {\n\n\n  if (optX < optY) {\n    return arrX;\n  } else if (optX > optY) {\n    return arrY;\n  } else {\n    if (optXPchat < optYPchat) {\n      return arrX;\n    } else if (optXPchat > optYPchat) {\n      return arrY;\n    } else {\n      return arrX;\n    }\n  } // }\n\n}\n\n_c = MinChiburWithDirection;\nexport default MinChiburWithDirection;\n\nvar _c;\n\n$RefreshReg$(_c, \"MinChiburWithDirection\");","map":{"version":3,"sources":["C:/fullstack/grass-calculator/grass-calculator/src/minChiburWithDirection.js"],"names":["MinChiburWithDirection","arrX","arrY","optX","optY","optXPchat","optYPchat","i","length","opt2","amount","opt3","opt4","pchat"],"mappings":"AAAA,SAASA,sBAAT,CAAgCC,IAAhC,EAAsCC,IAAtC,EAA4C;AAE1C,MAAIC,IAAI,GAAG,CAAX;AACA,MAAIC,IAAI,GAAG,CAAX;AACA,MAAIC,SAAS,GAAG,CAAhB;AACA,MAAIC,SAAS,GAAG,CAAhB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,IAAI,CAACO,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpCJ,IAAAA,IAAI,IAAI,CAACF,IAAI,CAACM,CAAD,CAAJ,CAAQE,IAAR,CAAaC,MAAd,GAAuB,CAACT,IAAI,CAACM,CAAD,CAAJ,CAAQI,IAAR,CAAaD,MAArC,GAA8C,CAACT,IAAI,CAACM,CAAD,CAAJ,CAAQK,IAAR,CAAaF,MAApE;AACAN,IAAAA,IAAI,IAAI,CAACF,IAAI,CAACK,CAAD,CAAJ,CAAQE,IAAR,CAAaC,MAAd,GAAuB,CAACR,IAAI,CAACK,CAAD,CAAJ,CAAQI,IAAR,CAAaD,MAArC,GAA8C,CAACR,IAAI,CAACK,CAAD,CAAJ,CAAQK,IAAR,CAAaF,MAApE;AACAL,IAAAA,SAAS,IAAI,CAACJ,IAAI,CAACM,CAAD,CAAJ,CAAQM,KAAtB;AACAP,IAAAA,SAAS,IAAI,CAACJ,IAAI,CAACK,CAAD,CAAJ,CAAQM,KAAtB;AAED,GAbyC,CAc1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACE,MAAIV,IAAI,GAAGC,IAAX,EAAiB;AACf,WAAOH,IAAP;AACD,GAFD,MAEO,IAAIE,IAAI,GAAGC,IAAX,EAAiB;AACtB,WAAOF,IAAP;AACD,GAFM,MAEA;AACL,QAAIG,SAAS,GAAGC,SAAhB,EAA2B;AACzB,aAAOL,IAAP;AACD,KAFD,MAEO,IAAII,SAAS,GAAGC,SAAhB,EAA2B;AAChC,aAAOJ,IAAP;AACD,KAFM,MAEA;AACL,aAAOD,IAAP;AACD;AACF,GArCuC,CAsC1C;;AACD;;KAvCQD,sB;AAwCT,eAAeA,sBAAf","sourcesContent":["function MinChiburWithDirection(arrX, arrY) {\r\n  \r\n  let optX = 0;\r\n  let optY = 0;\r\n  let optXPchat = 0;\r\n  let optYPchat = 0;\r\n\r\n  for (let i = 0; i < arrX.length; i++) {\r\n    optX += +arrX[i].opt2.amount + +arrX[i].opt3.amount + +arrX[i].opt4.amount;\r\n    optY += +arrY[i].opt2.amount + +arrY[i].opt3.amount + +arrY[i].opt4.amount;\r\n    optXPchat += +arrX[i].pchat;\r\n    optYPchat += +arrY[i].pchat;\r\n    \r\n  }\r\n  // if (optX+optY===1) {\r\n  //   if (optXPchat < optYPchat) {\r\n  //     return arrX;\r\n  //   } else if (optXPchat > optYPchat) {\r\n  //     return arrY;\r\n  //   } else {\r\n  //     return arrX;\r\n  //   }  \r\n  // }\r\n\r\n  // else {\r\n    if (optX < optY) {\r\n      return arrX;\r\n    } else if (optX > optY) {\r\n      return arrY;\r\n    } else {\r\n      if (optXPchat < optYPchat) {\r\n        return arrX;\r\n      } else if (optXPchat > optYPchat) {\r\n        return arrY;\r\n      } else {\r\n        return arrX;\r\n      }\r\n    }\r\n  // }\r\n}\r\nexport default MinChiburWithDirection;\r\n"]},"metadata":{},"sourceType":"module"}
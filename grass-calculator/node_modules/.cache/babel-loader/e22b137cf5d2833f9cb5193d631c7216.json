{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\fullstack\\\\grass-calculator\\\\grass-calculator\\\\src\\\\components\\\\Konva.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Stage, Layer, Rect, Text, Group, Arrow, Line } from \"react-konva\";\n\nconst Konva = ({\n  squares,\n  type,\n  tabKey,\n  summary,\n  xDirectionSquare,\n  yDirectionSquare,\n  resultForClientPchat\n}) => {\n  _s();\n\n  // {\n  //   opt4: { amount: 0, length: 0 },\n  //   opt3: { amount: 0, length: 0 },\n  //   opt2: { amount: 0, length: 0 },\n  //   pchat: 0,\n  // }\n  const [arrayUsed, setarrayUsed] = useState([]);\n  useEffect(() => {\n    // if (tabKey === \"מינימום חיבורים + כיוון סיב אחיד בין הגלילים\") {\n    //   setarrayUsed(summary.minChiburWithDirection);\n    // }\n    if (tabKey === \"מינימום פחת\") {\n      setarrayUsed(resultForClientPchat);\n    } // if (tabKey === \"מינימום פחת + כיוון סיב אחיד בין הגלילים\") {\n    //   setarrayUsed(summary.minPchatWithDirectionSummary);\n    // }\n    // if (tabKey === \"מינימום חיבורים\") {\n    //   setarrayUsed(summary.minChiburNoDirection);\n    // }\n\n\n    console.log(\"xDirectionSquare : \", xDirectionSquare);\n    console.log(\"yDirectionSquare : \", yDirectionSquare);\n    console.log(\"arrayUsed : \", arrayUsed);\n  }, [tabKey]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Stage, {\n        style: {\n          border: \"1px solid #333\",\n          margin: \"3rem\",\n          borderRadius: \"5px\"\n        },\n        width: window.innerWidth / 2,\n        height: window.innerHeight / 2,\n        children: /*#__PURE__*/_jsxDEV(Layer, {\n          children: squares.map((square, index) => {\n            let width = [];\n            let length = [];\n            let arrowDirection = [];\n\n            if (arrayUsed.length !== 0) {\n              console.log(\"i am here 777\");\n\n              if (arrayUsed[index].opt2.length === square[1] || arrayUsed[index].opt3.length === square[1] || arrayUsed[index].opt4.length === square[1]) {\n                width[index] = arrayUsed[index].opt2.amount * 2 + arrayUsed[index].opt3.amount * 3 + arrayUsed[index].opt4.amount * 4;\n                length[index] = square[1];\n                arrowDirection[index] = \"vertical\";\n              } else if (arrayUsed[index].opt2.length === square[0] || arrayUsed[index].opt3.length === square[0] || arrayUsed[index].opt4.length === square[0]) {\n                width[index] = square[0];\n                length[index] = arrayUsed[index].opt2.amount * 2 + arrayUsed[index].opt3.amount * 3 + arrayUsed[index].opt4.amount * 4;\n                arrowDirection[index] = \"horizantal\";\n              }\n\n              console.log(\"width : \", width);\n              console.log(\"length : \", length);\n            }\n\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(Group, {\n                draggable: true,\n                children: [arrowDirection[index] === \"vertical\" && /*#__PURE__*/_jsxDEV(Arrow, {\n                  x: 100,\n                  y: -45,\n                  points: [0, 110, 0, 150],\n                  width: 30,\n                  pointerLength: 5,\n                  pointerWidth: 5,\n                  fill: \"black\",\n                  stroke: \"black\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Line, {\n                  draggable: true,\n                  points: [10, 20, 80, 100],\n                  stroke: square[2],\n                  strokeWidth: \"2\",\n                  dash: [10, 10],\n                  rotationDeg: 132\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 21\n                }, this), arrowDirection[index] === \"horizantal\" && /*#__PURE__*/_jsxDEV(Arrow, {\n                  x: -285,\n                  y: 40,\n                  points: [472, 0, 500, 0],\n                  pointerLength: 5,\n                  pointerWidth: 5,\n                  fill: \"black\",\n                  stroke: \"black\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  x: 110,\n                  y: 30,\n                  text: ` ${square[0]} ר`,\n                  fontSize: 15\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  x: 75,\n                  y: 100,\n                  text: ` ${square[1]} א`,\n                  fontSize: 15,\n                  rotationDeg: 270\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Rect, {\n                  onclick: e => {\n                    console.log(e.target.absolutePosition());\n                    console.log(e.target);\n                  },\n                  x: 100,\n                  y: 50,\n                  width: square[0] * 30,\n                  height: square[1] * 30,\n                  fill: square[2],\n                  opacity: 0.6 // stroke='black'\n                  // strokeWidth='4'\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 21\n                }, this), type === \"bottom\" && /*#__PURE__*/_jsxDEV(Rect, {\n                  draggable: true,\n                  x: 100,\n                  y: 50,\n                  width: width[index] * 30,\n                  height: length[index] * 30,\n                  fill: \"transparent\",\n                  stroke: square[2],\n                  draggable: false,\n                  strokeWidth: \"2\",\n                  dash: [10, 10]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 23\n                }, this), type === \"bottom\" && /*#__PURE__*/_jsxDEV(Text, {\n                  x: 75,\n                  y: 210,\n                  text: `אורך דשא ${length[index]}`,\n                  fontSize: 15,\n                  fill: \"black\",\n                  rotationDeg: 270\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 23\n                }, this), type === \"bottom\" && /*#__PURE__*/_jsxDEV(Text, {\n                  x: 80,\n                  y: 0,\n                  text: `רוחב דשא ${width[index]}`,\n                  fontSize: 15,\n                  fill: \"black\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  x: 120,\n                  y: 80,\n                  text: `${index + 1}`,\n                  fontSize: 15,\n                  fill: \"black\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this)\n            }, void 0, false);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Konva, \"fZjvMNbWVqC5JOJJxGE0cWVYpCo=\");\n\n_c = Konva;\nexport default Konva;\n\nvar _c;\n\n$RefreshReg$(_c, \"Konva\");","map":{"version":3,"sources":["C:/fullstack/grass-calculator/grass-calculator/src/components/Konva.js"],"names":["React","useEffect","useState","Stage","Layer","Rect","Text","Group","Arrow","Line","Konva","squares","type","tabKey","summary","xDirectionSquare","yDirectionSquare","resultForClientPchat","arrayUsed","setarrayUsed","console","log","border","margin","borderRadius","window","innerWidth","innerHeight","map","square","index","width","length","arrowDirection","opt2","opt3","opt4","amount","e","target","absolutePosition"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Stage, Layer, Rect, Text, Group, Arrow, Line } from \"react-konva\";\r\n\r\nconst Konva = ({\r\n  squares,\r\n  type,\r\n  tabKey,\r\n  summary,\r\n  xDirectionSquare,\r\n  yDirectionSquare,\r\n  resultForClientPchat,\r\n}) => {\r\n  // {\r\n  //   opt4: { amount: 0, length: 0 },\r\n  //   opt3: { amount: 0, length: 0 },\r\n  //   opt2: { amount: 0, length: 0 },\r\n  //   pchat: 0,\r\n  // }\r\n  const [arrayUsed, setarrayUsed] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // if (tabKey === \"מינימום חיבורים + כיוון סיב אחיד בין הגלילים\") {\r\n    //   setarrayUsed(summary.minChiburWithDirection);\r\n    // }\r\n    if (tabKey === \"מינימום פחת\") {\r\n      setarrayUsed(resultForClientPchat);\r\n    }\r\n    // if (tabKey === \"מינימום פחת + כיוון סיב אחיד בין הגלילים\") {\r\n    //   setarrayUsed(summary.minPchatWithDirectionSummary);\r\n    // }\r\n    // if (tabKey === \"מינימום חיבורים\") {\r\n    //   setarrayUsed(summary.minChiburNoDirection);\r\n    // }\r\n    console.log(\"xDirectionSquare : \", xDirectionSquare);\r\n    console.log(\"yDirectionSquare : \", yDirectionSquare);\r\n    console.log(\"arrayUsed : \", arrayUsed);\r\n  }, [tabKey]);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Stage\r\n          style={{\r\n            border: \"1px solid #333\",\r\n            margin: \"3rem\",\r\n            borderRadius: \"5px\",\r\n          }}\r\n          width={window.innerWidth / 2}\r\n          height={window.innerHeight / 2}\r\n        >\r\n          <Layer>\r\n            {squares.map((square, index) => {\r\n              let width = [];\r\n              let length = [];\r\n              let arrowDirection = [];\r\n\r\n              if (arrayUsed.length !== 0) {\r\n                console.log(\"i am here 777\");\r\n                if (\r\n                  arrayUsed[index].opt2.length === square[1] ||\r\n                  arrayUsed[index].opt3.length === square[1] ||\r\n                  arrayUsed[index].opt4.length === square[1]\r\n                ) {\r\n                  width[index] =\r\n                    arrayUsed[index].opt2.amount * 2 +\r\n                    arrayUsed[index].opt3.amount * 3 +\r\n                    arrayUsed[index].opt4.amount * 4;\r\n                  length[index] = square[1];\r\n                  arrowDirection[index] = \"vertical\";\r\n                } else if (\r\n                  arrayUsed[index].opt2.length === square[0] ||\r\n                  arrayUsed[index].opt3.length === square[0] ||\r\n                  arrayUsed[index].opt4.length === square[0]\r\n                ) {\r\n                  width[index] = square[0];\r\n                  length[index] =\r\n                    arrayUsed[index].opt2.amount * 2 +\r\n                    arrayUsed[index].opt3.amount * 3 +\r\n                    arrayUsed[index].opt4.amount * 4;\r\n                  arrowDirection[index] = \"horizantal\";\r\n                }\r\n\r\n                console.log(\"width : \", width);\r\n                console.log(\"length : \", length);\r\n              }\r\n\r\n              return (\r\n                <>\r\n                  <Group draggable>\r\n                    {arrowDirection[index] === \"vertical\" && (\r\n                      <Arrow\r\n                        x={100}\r\n                        y={-45}\r\n                        points={[0, 110, 0, 150]}\r\n                        width={30}\r\n                        pointerLength={5}\r\n                        pointerWidth={5}\r\n                        fill='black'\r\n                        stroke='black'\r\n                      />\r\n                    )}\r\n                    <Line\r\n                      draggable={true}\r\n                      points={[10, 20, 80, 100]}\r\n                      stroke={square[2]}\r\n                      strokeWidth='2'\r\n                      dash={[10, 10]}\r\n                      rotationDeg={132}\r\n                    ></Line>\r\n                    {arrowDirection[index] === \"horizantal\" && (\r\n                      <Arrow\r\n                        x={-285}\r\n                        y={40}\r\n                        points={[472, 0, 500, 0]}\r\n                        pointerLength={5}\r\n                        pointerWidth={5}\r\n                        fill='black'\r\n                        stroke='black'\r\n                      />\r\n                    )}\r\n\r\n                    <Text\r\n                      x={110}\r\n                      y={30}\r\n                      text={` ${square[0]} ר`}\r\n                      fontSize={15}\r\n                    />\r\n                    <Text\r\n                      x={75}\r\n                      y={100}\r\n                      text={` ${square[1]} א`}\r\n                      fontSize={15}\r\n                      rotationDeg={270}\r\n                    />\r\n\r\n                    <Rect\r\n                      onclick={(e) => {\r\n                        console.log(e.target.absolutePosition());\r\n                        console.log(e.target);\r\n                      }}\r\n                      x={100}\r\n                      y={50}\r\n                      width={square[0] * 30}\r\n                      height={square[1] * 30}\r\n                      fill={square[2]}\r\n                      opacity={0.6}\r\n                      // stroke='black'\r\n                      // strokeWidth='4'\r\n                    />\r\n\r\n                    {type === \"bottom\" && (\r\n                      <Rect\r\n                        draggable\r\n                        x={100}\r\n                        y={50}\r\n                        width={width[index] * 30}\r\n                        height={length[index] * 30}\r\n                        fill='transparent'\r\n                        stroke={square[2]}\r\n                        draggable={false}\r\n                        strokeWidth='2'\r\n                        dash={[10, 10]}\r\n                      ></Rect>\r\n                    )}\r\n                    {type === \"bottom\" && (\r\n                      <Text\r\n                        x={75}\r\n                        y={210}\r\n                        text={`אורך דשא ${length[index]}`}\r\n                        fontSize={15}\r\n                        fill={\"black\"}\r\n                        rotationDeg={270}\r\n                      />\r\n                    )}\r\n                    {type === \"bottom\" && (\r\n                      <Text\r\n                        x={80}\r\n                        y={0}\r\n                        text={`רוחב דשא ${width[index]}`}\r\n                        fontSize={15}\r\n                        fill={\"black\"}\r\n                      />\r\n                    )}\r\n                    <Text\r\n                      x={120}\r\n                      y={80}\r\n                      text={`${index + 1}`}\r\n                      fontSize={15}\r\n                      fill={\"black\"}\r\n                    />\r\n                  </Group>\r\n                </>\r\n              );\r\n            })}\r\n          </Layer>\r\n        </Stage>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Konva;\r\n"]},"metadata":{},"sourceType":"module"}
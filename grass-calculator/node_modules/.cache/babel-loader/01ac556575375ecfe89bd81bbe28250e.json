{"ast":null,"code":"function PchatWithDirection(arrX, arrY) {\n  let resultX = arrX.reduce((acc, curVal) => {\n    acc += curVal.pchat;\n  }, 0);\n  let resultY = arrY.reduce((acc, curVal) => {\n    acc += curVal.pchat;\n  }, 0);\n\n  if (resultX === resultY) {\n    let resultXConnections = arrX.reduce((acc, curVal) => {\n      acc += curVal.forEach(element => {\n        return element.opt2 + element.opt3 + element.opt4;\n      });\n    }, 0);\n    let resultYConnections = arrY.reduce((acc, curVal) => {\n      acc += curVal.forEach(element => {\n        return element.opt2 + element.opt3 + element.opt4;\n      });\n    }, 0);\n\n    if (resultXConnections >= resultYConnections) {\n      return arrY;\n    } else {\n      return arrX;\n    }\n  } else if (resultX > resultY) {\n    return arrY;\n  } else {\n    return arrX;\n  }\n}\n\n_c = PchatWithDirection;\nexport default PchatWithDirection;\n\nvar _c;\n\n$RefreshReg$(_c, \"PchatWithDirection\");","map":{"version":3,"sources":["C:/fullstack/grass-calculator/grass-calculator/src/PchatWithDirection.js"],"names":["PchatWithDirection","arrX","arrY","resultX","reduce","acc","curVal","pchat","resultY","resultXConnections","forEach","element","opt2","opt3","opt4","resultYConnections"],"mappings":"AAAA,SAASA,kBAAT,CAA4BC,IAA5B,EAAkCC,IAAlC,EAAwC;AACtC,MAAIC,OAAO,GAAGF,IAAI,CAACG,MAAL,CAAY,CAACC,GAAD,EAAMC,MAAN,KAAiB;AACzCD,IAAAA,GAAG,IAAIC,MAAM,CAACC,KAAd;AACD,GAFa,EAEX,CAFW,CAAd;AAGA,MAAIC,OAAO,GAAGN,IAAI,CAACE,MAAL,CAAY,CAACC,GAAD,EAAMC,MAAN,KAAiB;AACzCD,IAAAA,GAAG,IAAIC,MAAM,CAACC,KAAd;AACD,GAFa,EAEX,CAFW,CAAd;;AAIA,MAAIJ,OAAO,KAAKK,OAAhB,EAAyB;AACvB,QAAIC,kBAAkB,GAAGR,IAAI,CAACG,MAAL,CAAY,CAACC,GAAD,EAAMC,MAAN,KAAiB;AACpDD,MAAAA,GAAG,IAAIC,MAAM,CAACI,OAAP,CAAgBC,OAAD,IAAa;AACjC,eAAOA,OAAO,CAACC,IAAR,GAAeD,OAAO,CAACE,IAAvB,GAA8BF,OAAO,CAACG,IAA7C;AACD,OAFM,CAAP;AAGD,KAJwB,EAItB,CAJsB,CAAzB;AAMD,QAAIC,kBAAkB,GAAGb,IAAI,CAACE,MAAL,CAAY,CAACC,GAAD,EAAMC,MAAN,KAAiB;AACnDD,MAAAA,GAAG,IAAIC,MAAM,CAACI,OAAP,CAAgBC,OAAD,IAAa;AACjC,eAAOA,OAAO,CAACC,IAAR,GAAeD,OAAO,CAACE,IAAvB,GAA8BF,OAAO,CAACG,IAA7C;AACD,OAFM,CAAP;AAGD,KAJuB,EAIrB,CAJqB,CAAzB;;AAMC,QAAIL,kBAAkB,IAAIM,kBAA1B,EAA8C;AAC5C,aAAOb,IAAP;AACD,KAFD,MAEO;AACL,aAAOD,IAAP;AACD;AACF,GAlBD,MAkBO,IAAIE,OAAO,GAAGK,OAAd,EAAuB;AAC5B,WAAON,IAAP;AACD,GAFM,MAEA;AACL,WAAOD,IAAP;AACD;AACF;;KA/BQD,kB;AAiCT,eAAeA,kBAAf","sourcesContent":["function PchatWithDirection(arrX, arrY) {\r\n  let resultX = arrX.reduce((acc, curVal) => {\r\n    acc += curVal.pchat;\r\n  }, 0);\r\n  let resultY = arrY.reduce((acc, curVal) => {\r\n    acc += curVal.pchat;\r\n  }, 0);\r\n\r\n  if (resultX === resultY) {\r\n    let resultXConnections = arrX.reduce((acc, curVal) => {\r\n      acc += curVal.forEach((element) => {\r\n        return element.opt2 + element.opt3 + element.opt4;\r\n      });\r\n    }, 0);\r\n\r\n   let resultYConnections = arrY.reduce((acc, curVal) => {\r\n      acc += curVal.forEach((element) => {\r\n        return element.opt2 + element.opt3 + element.opt4;\r\n      });\r\n    }, 0);\r\n\r\n    if (resultXConnections >= resultYConnections) {\r\n      return arrY;\r\n    } else {\r\n      return arrX;\r\n    }\r\n  } else if (resultX > resultY) {\r\n    return arrY;\r\n  } else {\r\n    return arrX;\r\n  }\r\n}\r\n\r\nexport default PchatWithDirection;\r\n"]},"metadata":{},"sourceType":"module"}
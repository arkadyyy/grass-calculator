{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\fullstack\\\\grass-calculator\\\\grass-calculator\\\\src\\\\pages\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport \"../App.css\";\nimport Konva from \"../components/Konva\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Button, InputGroup, FormControl, Modal, Form, Card, Container, Row, Col, Spinner } from \"react-bootstrap\";\nimport { useEffect, useState } from \"react\";\nimport calculateBestOption from \"../calculator\";\nimport ChiburCalc from \"../chiburCalc\";\nimport PchatWithDirection from \"../PchatWithDirection\";\nimport MinChiburNoDirection from \"../minChiburNoDirection\"; ////////////////////////////////////////////////////////////////////////\n\nfunction Home({\n  history\n}) {\n  _s();\n\n  //all squares entered\n  const [squares, setsquares] = useState([]); //best result for client considering pchat only (\"pchat\" = loss)\n\n  const [resultForClientPchat, setresultForClientPchat] = useState([]); //best result for client considering pchat and direction (\"direction\"= means - the direction the grass would streatch out )\n\n  const [resultPchatWithDirection, setresultPchatWithDirection] = useState([]); //resultMinChiburNoDirection- \"Chibur\"= connection.\"no direction\"- not consider the grass direction)\n\n  const [resultMinChiburNoDirection, setresultMinChiburNoDirection] = useState([]); //resultMinChiburWithDirection- \"Chibur\"= connection.\"With direction\"- consider the grass direction)\n\n  const [resultMinChiburWithDirection, setresultMinChiburWithDirection] = useState([]); //best result for client considering connections only (\"connections\" means- the numbar of piece we use, sometimes the customer prefare to have los but not to have more pieces)\n  // considering the grass direction - giving solutions for each direction\n  //all x axis \n\n  const [x_directionResultForClient, setX_DirectionResultForClient] = useState([]); //all y axis results\n\n  const [y_directionResultForClient, setY_DirectionResultForClient] = useState([]); //summary state\n\n  const [summary, setSummary] = useState({\n    minPchatSummary: {\n      opt2: 0,\n      opt3: 0,\n      opt4: 0,\n      pchat: 0\n    },\n    minPchatWithDirection: {\n      opt2: 0,\n      opt3: 0,\n      opt4: 0,\n      pchat: 0\n    },\n    minChiburNoDirection: {\n      opt2: 0,\n      opt3: 0,\n      opt4: 0,\n      pchat: 0\n    },\n    // בבדיקה\n    minChiburWithDirectionX: {\n      opt2: 0,\n      opt3: 0,\n      opt4: 0,\n      pchat: 0\n    },\n    minChiburWithDirectionY: {\n      opt2: 0,\n      opt3: 0,\n      opt4: 0,\n      pchat: 0\n    }\n  }); //input values\n\n  const [width, setwidth] = useState(0);\n  const [length, setlength] = useState(0); //squares color\n\n  const [color, setColor] = useState(getRandomColour());\n\n  function getRandomColour() {\n    var red = Math.floor(Math.random() * 255);\n    var green = Math.floor(Math.random() * 255);\n    var blue = Math.floor(Math.random() * 255);\n    return \"rgb(\" + red + \",\" + green + \",\" + blue + \" )\";\n  }\n\n  const [openSummary, setopenSummary] = useState(false);\n  useEffect(() => {\n    console.log(\"summary changed !\");\n  }, [summary]);\n  useEffect(() => {\n    bestResult();\n    console.log(\"summary : \", summary);\n  }, [squares]);\n  useEffect(() => {\n    bestResultPchatWithDirection();\n    bestMinChiburNoDirection();\n  }, [x_directionResultForClient]);\n\n  function bestMinChiburNoDirection() {\n    let result4 = MinChiburNoDirection(x_directionResultForClient, y_directionResultForClient);\n    setresultMinChiburNoDirection(result4);\n  }\n\n  function bestResultPchatWithDirection() {\n    let result3 = PchatWithDirection(x_directionResultForClient, y_directionResultForClient);\n    setresultPchatWithDirection(result3);\n  }\n\n  function summaryAllOptions() {\n    // \"P\"=Pchat. not considering the direction\n    let opt2AmountP = 0;\n    let opt3AmountP = 0;\n    let opt4AmountP = 0;\n    let pchatP = 0;\n    resultForClientPchat.forEach(square => {\n      opt2AmountP += square.opt2.amount;\n      opt3AmountP += square.opt3.amount;\n      opt4AmountP += square.opt4.amount;\n      pchatP += square.pchat;\n    }); // \"PD\"=Pchat+ considering the Direction\n\n    let opt2AmountPD = 0;\n    let opt3AmountPD = 0;\n    let opt4AmountPD = 0;\n    let pchatPD = 0;\n    resultPchatWithDirection.forEach(square => {\n      opt2AmountPD += square.opt2.amount;\n      opt3AmountPD += square.opt3.amount;\n      opt4AmountPD += square.opt4.amount;\n      pchatPD += square.pchat;\n    }); // result  of Min \"Chiburim\" (connections) Not consider Direction\n\n    let opt2AmountC = 0;\n    let opt3AmountC = 0;\n    let opt4AmountC = 0;\n    let pchatC = 0;\n    resultMinChiburNoDirection.forEach(square => {\n      opt2AmountC += square.opt2.amount;\n      opt3AmountC += square.opt3.amount;\n      opt4AmountC += square.opt4.amount;\n      pchatC += square.pchat;\n    }); // בשלבי הרצה ובדיקות!!!!!!!!!!!\n    // result  of Min \"Chiburim\" (connections) + consider Direction\n\n    let opt2AmountCDX = 0;\n    let opt3AmountCDX = 0;\n    let opt4AmountCDX = 0;\n    let pchatCDX = 0;\n    x_directionResultForClient.forEach(square => {\n      opt2AmountCDX += square.opt2.amount;\n      opt3AmountCDX += square.opt3.amount;\n      opt4AmountCDX += square.opt4.amount;\n      pchatCDX += square.pchat;\n    });\n    let opt2AmountCDY = 0;\n    let opt3AmountCDY = 0;\n    let opt4AmountCDY = 0;\n    let pchatCDY = 0;\n    x_directionResultForClient.forEach(square => {\n      opt2AmountCDY += square.opt2.amount;\n      opt3AmountCDY += square.opt3.amount;\n      opt4AmountCDY += square.opt4.amount;\n      pchatCDY += square.pchat;\n    });\n    setSummary({ ...summary,\n      minPchatSummary: {\n        opt2: opt2AmountP,\n        opt3: opt3AmountP,\n        opt4: opt4AmountP,\n        pchat: pchatP\n      },\n      minChiburNoDirection: {\n        opt2: opt2AmountC,\n        opt3: opt3AmountC,\n        opt4: opt4AmountC,\n        pchat: pchatC\n      },\n      minChiburWithDirectionX: {\n        opt2: opt2AmountCDX,\n        opt3: opt3AmountCDX,\n        opt4: opt4AmountCDX,\n        pchat: pchatCDX\n      },\n      minChiburWithDirectionY: {\n        opt2: opt2AmountCDY,\n        opt3: opt3AmountCDY,\n        opt4: opt4AmountCDY,\n        pchat: pchatCDY\n      }\n    });\n    console.log(\"resultForClientPchat : \", resultForClientPchat);\n    console.log(\"resultPchatWithDirection : \", resultPchatWithDirection);\n    console.log(\"resultMinChiburNoDirection : \", resultMinChiburNoDirection);\n  }\n\n  function bestResult() {\n    squares.forEach(square => {\n      //  פחת מינימלי בלי כיוון פריסה\n      // min pchat no direction consider\n      let result1 = ChiburCalc(square[0] / 100, square[1] / 100);\n      let result2 = ChiburCalc(square[1] / 100, square[0] / 100);\n\n      if (result1.pchat === result2.pchat) {\n        setresultForClientPchat([...resultForClientPchat, result1]);\n      } else if (result1.pchat < result2.pchat) {\n        setresultForClientPchat([...resultForClientPchat, result1]);\n      } else {\n        setresultForClientPchat([...resultForClientPchat, result2]);\n      } // כיוון פריסה\n\n\n      setX_DirectionResultForClient([...x_directionResultForClient, result1]);\n      setY_DirectionResultForClient([...y_directionResultForClient, result2]);\n    });\n    summaryAllOptions();\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Konva, {\n        squares: squares,\n        setsquares: setsquares\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"flex-end\"\n        },\n        className: \"mb-3 p-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u05D7\\u05D9\\u05E9\\u05D5\\u05D1 \\u05D3\\u05E9\\u05D0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            style: {\n              textAlign: \"right\"\n            },\n            children: \"\\u05E8\\u05D5\\u05D7\\u05D1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          placeholder: \"\\u05D4\\u05DB\\u05E0\\u05E1 \\u05E8\\u05D5\\u05D7\\u05D1\",\n          style: {\n            width: \"35%\",\n            direction: \"rtl\"\n          },\n          \"aria-label\": \"Default\",\n          \"aria-describedby\": \"inputGroup-sizing-default\",\n          id: \"width\",\n          onChange: e => {\n            setwidth(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\u05D0\\u05D5\\u05E8\\u05DA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          placeholder: \"\\u05D4\\u05DB\\u05E0\\u05E1 \\u05D0\\u05D5\\u05E8\\u05DA\",\n          style: {\n            width: \"35%\",\n            direction: \"rtl\"\n          },\n          \"aria-label\": \"Default\",\n          \"aria-describedby\": \"inputGroup-sizing-default\",\n          id: \"length\",\n          onChange: e => {\n            setlength(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setColor(getRandomColour());\n              setsquares([...squares, [+width, +length, color]]);\n              console.log(width);\n              console.log(length);\n              setwidth(0);\n              setlength(0);\n              summaryAllOptions();\n            },\n            className: \"m-3\",\n            variant: \"success\",\n            children: \"\\u05D4\\u05D5\\u05E1\\u05E3 \\u05DE\\u05DC\\u05D1\\u05DF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"m-3\",\n            variant: \"success\",\n            onClick: () => {\n              setopenSummary(true);\n              summaryAllOptions();\n            },\n            children: \"\\u05D7\\u05E9\\u05D1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setsquares([]);\n              setresultForClientPchat([]);\n              setwidth(0);\n              setlength(0);\n            },\n            className: \"m-3\",\n            variant: \"success\",\n            children: \"\\u05E0\\u05E7\\u05D4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 7\n    }, this), openSummary && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary\",\n      children: [/*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        variant: \"success\",\n        size: \"xl\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u05D0\\u05DC\\u05D5 \\u05D4\\u05EA\\u05D5\\u05E6\\u05D0\\u05D5\\u05EA \\u05E9\\u05DE\\u05E6\\u05D0\\u05E0\\u05D5 \\u05E2\\u05D1\\u05D5\\u05E8\\u05DA \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              border: \"secondary\",\n              style: {\n                width: \"18rem\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: \"\\u05D7\\u05D9\\u05E9\\u05D5\\u05D1 \\u05E2\\\"\\u05E4 \\u05DE\\u05D9\\u05E0\\u05D9\\u05DE\\u05D5\\u05DD \\u05E4\\u05D7\\u05EA\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 19\n              }, this), resultForClientPchat.map((square, index) => {\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                    children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                      children: [\"\\u05DE\\u05E8\\u05D5\\u05D1\\u05E2 \", index + 1]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 375,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 377,\n                        columnNumber: 29\n                      }, this), \"\\u05DE\\u05E9\\u05D8\\u05D7 4\\u05DE \", square.opt4.amount, \"\\u05D1\\u05D0\\u05D5\\u05E8\\u05DA \", square.opt4.length, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 380,\n                        columnNumber: 29\n                      }, this), \"\\u05DE\\u05E9\\u05D8\\u05D7 3\\u05DE \", square.opt3.amount, \"\\u05D1\\u05D0\\u05D5\\u05E8\\u05DA \", square.opt3.length, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 383,\n                        columnNumber: 29\n                      }, this), \"\\u05DE\\u05E9\\u05D8\\u05D7 2\\u05DE \", square.opt2.amount, \"\\u05D1\\u05D0\\u05D5\\u05E8\\u05DA \", square.opt2.length, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 386,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 376,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 374,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              border: \"secondary\",\n              style: {\n                width: \"18rem\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: \"\\u05D7\\u05D9\\u05E9\\u05D5\\u05D1 \\u05E2\\\"\\u05E4 \\u05DE\\u05D9\\u05E0\\u05D9\\u05DE\\u05D5\\u05DD \\u05D7\\u05D9\\u05D1\\u05D5\\u05E8\\u05D9\\u05DD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 19\n              }, this), resultMinChiburNoDirection.map((square, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                    children: [\"\\u05DE\\u05E8\\u05D5\\u05D1\\u05E2 \", index + 1]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 400,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    children: [\"\\u05DE\\u05E9\\u05D8\\u05D7 4\\u05DE \", square.opt4.amount, \"\\u05D1\\u05D0\\u05D5\\u05E8\\u05DA \", square.opt4.length, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 404,\n                      columnNumber: 27\n                    }, this), \"\\u05DE\\u05E9\\u05D8\\u05D7 3\\u05DE \", square.opt3.amount, \"\\u05D1\\u05D0\\u05D5\\u05E8\\u05DA \", square.opt3.length, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 407,\n                      columnNumber: 27\n                    }, this), \"\\u05DE\\u05E9\\u05D8\\u05D7 2\\u05DE \", square.opt2.amount, \"\\u05D1\\u05D0\\u05D5\\u05E8\\u05DA \", square.opt2.length, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 410,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 401,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              border: \"secondary\",\n              style: {\n                width: \"18rem\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: \"\\u05D7\\u05D9\\u05E9\\u05D5\\u05D1 \\u05E2\\\"\\u05E4 \\u05D7\\u05D9\\u05D1\\u05D5\\u05E8\\u05D9\\u05DD \\u05DC\\u05DB\\u05D9\\u05D5\\u05D5\\u05DF \\u05D0\\u05D7\\u05D9\\u05D3 \\u05D0\\u05E4\\u05E9\\u05E8\\u05D5\\u05EA 1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 19\n              }, this), x_directionResultForClient.map((square, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                    children: [\"\\u05DE\\u05E8\\u05D5\\u05D1\\u05E2 \", index + 1]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 423,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    children: [\"\\u05DE\\u05E9\\u05D8\\u05D7 4\\u05DE \", square.opt4.amount, \"\\u05D1\\u05D0\\u05D5\\u05E8\\u05DA \", square.opt4.length, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 427,\n                      columnNumber: 27\n                    }, this), \"\\u05DE\\u05E9\\u05D8\\u05D7 3\\u05DE \", square.opt3.amount, \"\\u05D1\\u05D0\\u05D5\\u05E8\\u05DA \", square.opt3.length, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 430,\n                      columnNumber: 27\n                    }, this), \"\\u05DE\\u05E9\\u05D8\\u05D7 2\\u05DE \", square.opt2.amount, \"\\u05D1\\u05D0\\u05D5\\u05E8\\u05DA \", square.opt2.length, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 433,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 424,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              border: \"secondary\",\n              style: {\n                width: \"18rem\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: \"\\u05D7\\u05D9\\u05E9\\u05D5\\u05D1 \\u05E2\\\"\\u05E4 \\u05D7\\u05D9\\u05D1\\u05D5\\u05E8\\u05D9\\u05DD \\u05DC\\u05DB\\u05D9\\u05D5\\u05D5\\u05DF \\u05D0\\u05D7\\u05D9\\u05D3 \\u05D0\\u05E4\\u05E9\\u05E8\\u05D5\\u05EA2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 19\n              }, this), y_directionResultForClient.map((square, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                    children: [\"\\u05DE\\u05E8\\u05D5\\u05D1\\u05E2 \", index + 1]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 446,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    children: [\"\\u05DE\\u05E9\\u05D8\\u05D7 4\\u05DE \", square.opt4.amount, \"\\u05D1\\u05D0\\u05D5\\u05E8\\u05DA \", square.opt4.length, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 450,\n                      columnNumber: 27\n                    }, this), \"\\u05DE\\u05E9\\u05D8\\u05D7 3\\u05DE \", square.opt3.amount, \"\\u05D1\\u05D0\\u05D5\\u05E8\\u05DA \", square.opt3.length, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 453,\n                      columnNumber: 27\n                    }, this), \"\\u05DE\\u05E9\\u05D8\\u05D7 2\\u05DE \", square.opt2.amount, \"\\u05D1\\u05D0\\u05D5\\u05E8\\u05DA \", square.opt2.length, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 456,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 447,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: \"my-5\",\n              border: \"secondary\",\n              style: {\n                width: \"100%\"\n              },\n              children: Object.entries(summary).map(([key, value], i) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                  children: [\"enteries \", i]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 473,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                    children: key\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 476,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    children: [value.opt2 ? ` יריעה של 2 מטר : ${value.opt2}{<br></br>}` : null, \"\\u05D9\\u05E8\\u05D9\\u05E2\\u05D4 \\u05E9\\u05DC 3 \\u05DE\\u05D8\\u05E8 : \", value.opt3, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 480,\n                      columnNumber: 27\n                    }, this), \"\\u05D9\\u05E8\\u05D9\\u05E2\\u05D4 \\u05E9\\u05DC 4 \\u05DE\\u05D8\\u05E8 : \", value.opt4, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 482,\n                      columnNumber: 27\n                    }, this), \"\\u05E4\\u05D7\\u05EA : \", value.pchat, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 484,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 477,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 475,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n} // const [summary, setSummary] = useState({\n//   minPchatSummary: {\n//     opt2: 0,\n//     opt3: 0,\n//     opt4: 0,\n//     pchat: 0,\n//   },\n//   minChiburNoDirection: {\n//     opt2: 0,\n//     opt3: 0,\n//     opt4: 0,\n//     pchat: 0,\n//   },\n//   minChiburWithDirection: {\n//     opt2: 0,\n//     opt3: 0,\n//     opt4: 0,\n//     pchat: 0,\n//   },\n// });\n\n\n_s(Home, \"dII1Z6QCqOat2WIEjXYcwm+20R8=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/fullstack/grass-calculator/grass-calculator/src/pages/Home.js"],"names":["Konva","Button","InputGroup","FormControl","Modal","Form","Card","Container","Row","Col","Spinner","useEffect","useState","calculateBestOption","ChiburCalc","PchatWithDirection","MinChiburNoDirection","Home","history","squares","setsquares","resultForClientPchat","setresultForClientPchat","resultPchatWithDirection","setresultPchatWithDirection","resultMinChiburNoDirection","setresultMinChiburNoDirection","resultMinChiburWithDirection","setresultMinChiburWithDirection","x_directionResultForClient","setX_DirectionResultForClient","y_directionResultForClient","setY_DirectionResultForClient","summary","setSummary","minPchatSummary","opt2","opt3","opt4","pchat","minPchatWithDirection","minChiburNoDirection","minChiburWithDirectionX","minChiburWithDirectionY","width","setwidth","length","setlength","color","setColor","getRandomColour","red","Math","floor","random","green","blue","openSummary","setopenSummary","console","log","bestResult","bestResultPchatWithDirection","bestMinChiburNoDirection","result4","result3","summaryAllOptions","opt2AmountP","opt3AmountP","opt4AmountP","pchatP","forEach","square","amount","opt2AmountPD","opt3AmountPD","opt4AmountPD","pchatPD","opt2AmountC","opt3AmountC","opt4AmountC","pchatC","opt2AmountCDX","opt3AmountCDX","opt4AmountCDX","pchatCDX","opt2AmountCDY","opt3AmountCDY","opt4AmountCDY","pchatCDY","result1","result2","display","flexDirection","alignItems","textAlign","direction","e","target","value","map","index","Object","entries","key","i"],"mappings":"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","sourcesContent":["import \"../App.css\";\r\nimport Konva from \"../components/Konva\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Button,\r\n  InputGroup,\r\n  FormControl,\r\n  Modal,\r\n  Form,\r\n  Card,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport { useEffect, useState } from \"react\";\r\nimport calculateBestOption from \"../calculator\";\r\nimport ChiburCalc from \"../chiburCalc\";\r\nimport PchatWithDirection from \"../PchatWithDirection\";\r\nimport MinChiburNoDirection from \"../minChiburNoDirection\";\r\n\r\n////////////////////////////////////////////////////////////////////////\r\n\r\nfunction Home({ history }) {\r\n  //all squares entered\r\n  const [squares, setsquares] = useState([]);\r\n\r\n  //best result for client considering pchat only (\"pchat\" = loss)\r\n  const [resultForClientPchat, setresultForClientPchat] = useState([]);\r\n\r\n  //best result for client considering pchat and direction (\"direction\"= means - the direction the grass would streatch out )\r\n  const [resultPchatWithDirection, setresultPchatWithDirection] = useState([]);\r\n\r\n \r\n  //resultMinChiburNoDirection- \"Chibur\"= connection.\"no direction\"- not consider the grass direction)\r\n  const [resultMinChiburNoDirection, setresultMinChiburNoDirection] = useState(\r\n    []\r\n  );\r\n\r\n  //resultMinChiburWithDirection- \"Chibur\"= connection.\"With direction\"- consider the grass direction)\r\n  const [resultMinChiburWithDirection, setresultMinChiburWithDirection] = useState(\r\n    []\r\n  );\r\n\r\n\r\n    //best result for client considering connections only (\"connections\" means- the numbar of piece we use, sometimes the customer prefare to have los but not to have more pieces)\r\n  // considering the grass direction - giving solutions for each direction\r\n  //all x axis \r\n  const [x_directionResultForClient, setX_DirectionResultForClient] = useState(\r\n    []\r\n  );\r\n\r\n  //all y axis results\r\n  const [y_directionResultForClient, setY_DirectionResultForClient] = useState(\r\n    []\r\n  );\r\n\r\n\r\n  //summary state\r\n\r\n  const [summary, setSummary] = useState({\r\n    minPchatSummary: {\r\n      opt2: 0,\r\n      opt3: 0,\r\n      opt4: 0,\r\n      pchat: 0,\r\n    },\r\n    minPchatWithDirection: {\r\n      opt2: 0,\r\n      opt3: 0,\r\n      opt4: 0,\r\n      pchat: 0,\r\n    },\r\n    minChiburNoDirection: {\r\n      opt2: 0,\r\n      opt3: 0,\r\n      opt4: 0,\r\n      pchat: 0,\r\n    },\r\n    // בבדיקה\r\n    minChiburWithDirectionX: {\r\n      opt2: 0,\r\n      opt3: 0,\r\n      opt4: 0,\r\n      pchat: 0,\r\n    },\r\n    minChiburWithDirectionY: {\r\n      opt2: 0,\r\n      opt3: 0,\r\n      opt4: 0,\r\n      pchat: 0,\r\n    },\r\n  });\r\n\r\n  //input values\r\n  const [width, setwidth] = useState(0);\r\n  const [length, setlength] = useState(0);\r\n\r\n  //squares color\r\n  const [color, setColor] = useState(getRandomColour());\r\n\r\n  function getRandomColour() {\r\n    var red = Math.floor(Math.random() * 255);\r\n    var green = Math.floor(Math.random() * 255);\r\n    var blue = Math.floor(Math.random() * 255);\r\n\r\n    return \"rgb(\" + red + \",\" + green + \",\" + blue + \" )\";\r\n  }\r\n\r\n  const [openSummary, setopenSummary] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log(\"summary changed !\");\r\n  }, [summary]);\r\n\r\n  useEffect(() => {\r\n    bestResult();\r\n    console.log(\"summary : \", summary);\r\n  }, [squares]);\r\n\r\n  useEffect(() => {\r\n    bestResultPchatWithDirection();\r\n    bestMinChiburNoDirection();\r\n  }, [x_directionResultForClient]);\r\n\r\n  function bestMinChiburNoDirection() {\r\n    let result4 = MinChiburNoDirection(\r\n      x_directionResultForClient,\r\n      y_directionResultForClient\r\n    );\r\n\r\n    setresultMinChiburNoDirection(result4);\r\n  }\r\n\r\n  function bestResultPchatWithDirection() {\r\n    let result3 = PchatWithDirection(\r\n      x_directionResultForClient,\r\n      y_directionResultForClient\r\n    );\r\n\r\n    setresultPchatWithDirection(result3);\r\n  }\r\n\r\n  function summaryAllOptions() {\r\n    // \"P\"=Pchat. not considering the direction\r\n    let opt2AmountP = 0;\r\n    let opt3AmountP = 0;\r\n    let opt4AmountP = 0;\r\n    let pchatP = 0;\r\n    resultForClientPchat.forEach((square) => {\r\n      opt2AmountP += square.opt2.amount;\r\n      opt3AmountP += square.opt3.amount;\r\n      opt4AmountP += square.opt4.amount;\r\n      pchatP += square.pchat;\r\n    });\r\n    // \"PD\"=Pchat+ considering the Direction\r\n    let opt2AmountPD = 0;\r\n    let opt3AmountPD = 0;\r\n    let opt4AmountPD = 0;\r\n    let pchatPD = 0;\r\n    resultPchatWithDirection.forEach((square) => {\r\n      opt2AmountPD += square.opt2.amount;\r\n      opt3AmountPD += square.opt3.amount;\r\n      opt4AmountPD += square.opt4.amount;\r\n      pchatPD += square.pchat;\r\n    });\r\n    // result  of Min \"Chiburim\" (connections) Not consider Direction\r\n    let opt2AmountC = 0;\r\n    let opt3AmountC = 0;\r\n    let opt4AmountC = 0;\r\n    let pchatC = 0;\r\n    resultMinChiburNoDirection.forEach((square) => {\r\n      opt2AmountC += square.opt2.amount;\r\n      opt3AmountC += square.opt3.amount;\r\n      opt4AmountC += square.opt4.amount;\r\n      pchatC += square.pchat;\r\n    });\r\n\r\n    // בשלבי הרצה ובדיקות!!!!!!!!!!!\r\n    // result  of Min \"Chiburim\" (connections) + consider Direction\r\n    let opt2AmountCDX = 0;\r\n    let opt3AmountCDX = 0;\r\n    let opt4AmountCDX = 0;\r\n    let pchatCDX = 0;\r\n    x_directionResultForClient.forEach((square) => {\r\n      opt2AmountCDX += square.opt2.amount;\r\n      opt3AmountCDX += square.opt3.amount;\r\n      opt4AmountCDX += square.opt4.amount;\r\n      pchatCDX += square.pchat;\r\n    });\r\n\r\n    let opt2AmountCDY = 0;\r\n    let opt3AmountCDY = 0;\r\n    let opt4AmountCDY = 0;\r\n    let pchatCDY = 0;\r\n    x_directionResultForClient.forEach((square) => {\r\n      opt2AmountCDY += square.opt2.amount;\r\n      opt3AmountCDY += square.opt3.amount;\r\n      opt4AmountCDY += square.opt4.amount;\r\n      pchatCDY += square.pchat;\r\n    });\r\n\r\n    setSummary({\r\n      ...summary,\r\n      minPchatSummary: {\r\n        opt2: opt2AmountP,\r\n        opt3: opt3AmountP,\r\n        opt4: opt4AmountP,\r\n        pchat: pchatP,\r\n      },\r\n      minChiburNoDirection: {\r\n        opt2: opt2AmountC,\r\n        opt3: opt3AmountC,\r\n        opt4: opt4AmountC,\r\n        pchat: pchatC,\r\n      },\r\n      minChiburWithDirectionX: {\r\n        opt2: opt2AmountCDX,\r\n        opt3: opt3AmountCDX,\r\n        opt4: opt4AmountCDX,\r\n        pchat: pchatCDX,\r\n      },\r\n      minChiburWithDirectionY: {\r\n        opt2: opt2AmountCDY,\r\n        opt3: opt3AmountCDY,\r\n        opt4: opt4AmountCDY,\r\n        pchat: pchatCDY,\r\n      },\r\n    });\r\n\r\n    console.log(\"resultForClientPchat : \", resultForClientPchat);\r\n    console.log(\"resultPchatWithDirection : \", resultPchatWithDirection);\r\n    console.log(\"resultMinChiburNoDirection : \", resultMinChiburNoDirection);\r\n  }\r\n\r\n  function bestResult() {\r\n    squares.forEach((square) => {\r\n      //  פחת מינימלי בלי כיוון פריסה\r\n      // min pchat no direction consider\r\n      let result1 = ChiburCalc(square[0] / 100, square[1] / 100);\r\n      let result2 = ChiburCalc(square[1] / 100, square[0] / 100);\r\n      if (result1.pchat === result2.pchat) {\r\n        setresultForClientPchat([...resultForClientPchat, result1]);\r\n      } else if (result1.pchat < result2.pchat) {\r\n        setresultForClientPchat([...resultForClientPchat, result1]);\r\n      } else {\r\n        setresultForClientPchat([...resultForClientPchat, result2]);\r\n      }\r\n\r\n      // כיוון פריסה\r\n      setX_DirectionResultForClient([...x_directionResultForClient, result1]);\r\n      setY_DirectionResultForClient([...y_directionResultForClient, result2]);\r\n    });\r\n\r\n    summaryAllOptions();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='App'>\r\n        <Konva squares={squares} setsquares={setsquares} />\r\n\r\n        <InputGroup\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"flex-end\",\r\n          }}\r\n          className='mb-3 p-5'\r\n        >\r\n          <h1>חישוב דשא</h1>\r\n          <Form.Label>\r\n            <strong style={{ textAlign: \"right\" }}>רוחב</strong>\r\n          </Form.Label>\r\n          <FormControl\r\n            placeholder='הכנס רוחב'\r\n            style={{ width: \"35%\", direction: \"rtl\" }}\r\n            aria-label='Default'\r\n            aria-describedby='inputGroup-sizing-default'\r\n            id='width'\r\n            onChange={(e) => {\r\n              setwidth(e.target.value);\r\n            }}\r\n          />\r\n          <Form.Label>\r\n            <strong>אורך</strong>\r\n          </Form.Label>\r\n          <FormControl\r\n            placeholder='הכנס אורך'\r\n            style={{ width: \"35%\", direction: \"rtl\" }}\r\n            aria-label='Default'\r\n            aria-describedby='inputGroup-sizing-default'\r\n            id='length'\r\n            onChange={(e) => {\r\n              setlength(e.target.value);\r\n            }}\r\n          />\r\n          {/* <Form style={{ display: \"flex\" }}>\r\n            {[\"פחת\", \"חיתוכים\", \"כיוון\"].map((type) => (\r\n              <div\r\n                style={{\r\n                  direction: \"rtl\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-between\",\r\n                  margin: \" 1rem 0.3rem\",\r\n                }}\r\n                key={`checkbox`}\r\n                className='mb-3'\r\n              >\r\n                <Form.Label>\r\n                  <strong>{type}</strong>\r\n                </Form.Label>\r\n                <Form.Check type='checkbox' id={`default-${type}`} />\r\n              </div>\r\n            ))}\r\n          </Form> */}\r\n          <div className='buttons'>\r\n            <Button\r\n              onClick={() => {\r\n                setColor(getRandomColour());\r\n                setsquares([...squares, [+width, +length, color]]);\r\n                console.log(width);\r\n                console.log(length);\r\n                setwidth(0);\r\n                setlength(0);\r\n                summaryAllOptions();\r\n              }}\r\n              className='m-3'\r\n              variant='success'\r\n            >\r\n              הוסף מלבן\r\n            </Button>\r\n            <Button\r\n              className='m-3'\r\n              variant='success'\r\n              onClick={() => {\r\n                setopenSummary(true);\r\n\r\n                summaryAllOptions();\r\n              }}\r\n            >\r\n              חשב\r\n            </Button>\r\n            <Button\r\n              onClick={() => {\r\n                setsquares([]);\r\n                setresultForClientPchat([]);\r\n\r\n                setwidth(0);\r\n                setlength(0);\r\n              }}\r\n              className='m-3'\r\n              variant='success'\r\n            >\r\n              נקה\r\n            </Button>\r\n          </div>\r\n        </InputGroup>\r\n      </div>\r\n      <hr></hr>\r\n\r\n      {openSummary && (\r\n        <div className='summary'>\r\n          <Spinner animation='border' variant='success' size='xl' />\r\n          <h3>אלו התוצאות שמצאנו עבורך </h3>\r\n          <Container>\r\n            <Row>\r\n              <Col>\r\n                <Card border='secondary' style={{ width: \"18rem\" }}>\r\n                  <Card.Header>חישוב ע\"פ מינימום פחת</Card.Header>\r\n                  {resultForClientPchat.map((square, index) => {\r\n                    return (\r\n                      <>\r\n                        <Card.Body>\r\n                          <Card.Title>מרובע {index + 1}</Card.Title>\r\n                          <Card.Text>\r\n                            <hr></hr>\r\n                            משטח 4מ {square.opt4.amount}\r\n                            באורך {square.opt4.length}\r\n                            <br></br>\r\n                            משטח 3מ {square.opt3.amount}\r\n                            באורך {square.opt3.length}\r\n                            <br></br>\r\n                            משטח 2מ {square.opt2.amount}\r\n                            באורך {square.opt2.length}\r\n                            <br></br>\r\n                          </Card.Text>\r\n                        </Card.Body>\r\n                      </>\r\n                    );\r\n                  })}\r\n                </Card>\r\n              </Col>\r\n              <Col>\r\n                <Card border='secondary' style={{ width: \"18rem\" }}>\r\n                  <Card.Header>חישוב ע\"פ מינימום חיבורים</Card.Header>\r\n                  {resultMinChiburNoDirection.map((square, index) => (\r\n                    <>\r\n                      <Card.Body>\r\n                        <Card.Title>מרובע {index + 1}</Card.Title>\r\n                        <Card.Text>\r\n                          משטח 4מ {square.opt4.amount}\r\n                          באורך {square.opt4.length}\r\n                          <br></br>\r\n                          משטח 3מ {square.opt3.amount}\r\n                          באורך {square.opt3.length}\r\n                          <br></br>\r\n                          משטח 2מ {square.opt2.amount}\r\n                          באורך {square.opt2.length}\r\n                          <br></br>\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </>\r\n                  ))}\r\n                </Card>\r\n              </Col>\r\n              <Col>\r\n                <Card border='secondary' style={{ width: \"18rem\" }}>\r\n                  <Card.Header>חישוב ע\"פ חיבורים לכיוון אחיד אפשרות 1</Card.Header>\r\n                  {x_directionResultForClient.map((square, index) => (\r\n                    <>\r\n                      <Card.Body>\r\n                        <Card.Title>מרובע {index + 1}</Card.Title>\r\n                        <Card.Text>\r\n                          משטח 4מ {square.opt4.amount}\r\n                          באורך {square.opt4.length}\r\n                          <br></br>\r\n                          משטח 3מ {square.opt3.amount}\r\n                          באורך {square.opt3.length}\r\n                          <br></br>\r\n                          משטח 2מ {square.opt2.amount}\r\n                          באורך {square.opt2.length}\r\n                          <br></br>\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </>\r\n                  ))}\r\n                </Card>\r\n              </Col>\r\n              <Col>\r\n                <Card border='secondary' style={{ width: \"18rem\" }}>\r\n                  <Card.Header>חישוב ע\"פ חיבורים לכיוון אחיד אפשרות2</Card.Header>\r\n                  {y_directionResultForClient.map((square, index) => (\r\n                    <>\r\n                      <Card.Body>\r\n                        <Card.Title>מרובע {index + 1}</Card.Title>\r\n                        <Card.Text>\r\n                          משטח 4מ {square.opt4.amount}\r\n                          באורך {square.opt4.length}\r\n                          <br></br>\r\n                          משטח 3מ {square.opt3.amount}\r\n                          באורך {square.opt3.length}\r\n                          <br></br>\r\n                          משטח 2מ {square.opt2.amount}\r\n                          באורך {square.opt2.length}\r\n                          <br></br>\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </>\r\n                  ))}\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Card\r\n                  className='my-5'\r\n                  border='secondary'\r\n                  style={{ width: \"100%\" }}\r\n                >\r\n                  {Object.entries(summary).map(([key, value], i) => (\r\n                    <>\r\n                      <Card.Header>enteries {i}</Card.Header>\r\n\r\n                      <Card.Body>\r\n                        <Card.Title>{key}</Card.Title>\r\n                        <Card.Text>\r\n                          {value.opt2 ? ` יריעה של 2 מטר : ${ value.opt2 }{<br></br>}` : null}\r\n                          יריעה של 3 מטר : {value.opt3}\r\n                          <br></br>\r\n                          יריעה של 4 מטר : {value.opt4}\r\n                          <br></br>\r\n                          פחת : {value.pchat}\r\n                          <br></br>\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </>\r\n                  ))}\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\n// const [summary, setSummary] = useState({\r\n//   minPchatSummary: {\r\n//     opt2: 0,\r\n//     opt3: 0,\r\n//     opt4: 0,\r\n//     pchat: 0,\r\n//   },\r\n//   minChiburNoDirection: {\r\n//     opt2: 0,\r\n//     opt3: 0,\r\n//     opt4: 0,\r\n//     pchat: 0,\r\n//   },\r\n//   minChiburWithDirection: {\r\n//     opt2: 0,\r\n//     opt3: 0,\r\n//     opt4: 0,\r\n//     pchat: 0,\r\n//   },\r\n// });\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}
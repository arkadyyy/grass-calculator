[{"C:\\fullstack\\desha-sintetyi\\src\\index.js":"1","C:\\fullstack\\desha-sintetyi\\src\\App.js":"2","C:\\fullstack\\desha-sintetyi\\src\\reportWebVitals.js":"3","C:\\fullstack\\desha-sintetyi\\src\\pages\\Home.js":"4","C:\\fullstack\\desha-sintetyi\\src\\minChiburNoDirection.js":"5","C:\\fullstack\\desha-sintetyi\\src\\chiburCalc.js":"6","C:\\fullstack\\desha-sintetyi\\src\\PchatWithDirection.js":"7","C:\\fullstack\\desha-sintetyi\\src\\minChiburWithDirection.js":"8","C:\\fullstack\\desha-sintetyi\\src\\components\\ControlledTabs.js":"9","C:\\fullstack\\desha-sintetyi\\src\\components\\Konva.js":"10"},{"size":517,"mtime":1611164498260,"results":"11","hashOfConfig":"12"},{"size":382,"mtime":1611164498256,"results":"13","hashOfConfig":"12"},{"size":375,"mtime":1611164498262,"results":"14","hashOfConfig":"12"},{"size":21024,"mtime":1616353925078,"results":"15","hashOfConfig":"12"},{"size":699,"mtime":1611164498260,"results":"16","hashOfConfig":"12"},{"size":3290,"mtime":1611164498258,"results":"17","hashOfConfig":"12"},{"size":774,"mtime":1611164498257,"results":"18","hashOfConfig":"12"},{"size":718,"mtime":1611164498261,"results":"19","hashOfConfig":"12"},{"size":23200,"mtime":1616328480174,"results":"20","hashOfConfig":"12"},{"size":25282,"mtime":1616355546893,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1ud67y3",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\fullstack\\desha-sintetyi\\src\\index.js",[],["45","46"],"C:\\fullstack\\desha-sintetyi\\src\\App.js",[],"C:\\fullstack\\desha-sintetyi\\src\\reportWebVitals.js",[],"C:\\fullstack\\desha-sintetyi\\src\\pages\\Home.js",["47","48","49","50","51","52","53","54","55","56","57"],"C:\\fullstack\\desha-sintetyi\\src\\minChiburNoDirection.js",[],"C:\\fullstack\\desha-sintetyi\\src\\chiburCalc.js",[],"C:\\fullstack\\desha-sintetyi\\src\\PchatWithDirection.js",["58","59","60","61"],"function PchatWithDirection(arrX, arrY) {\r\n  let resultX = arrX.reduce((acc, curVal) => {\r\n    acc += curVal.pchat;\r\n  }, 0);\r\n  let resultY = arrY.reduce((acc, curVal) => {\r\n    acc += curVal.pchat;\r\n  }, 0);\r\n\r\n  if (resultX === resultY) {\r\n    let resultXConnections = arrX.reduce((acc, curVal) => {\r\n      acc += curVal.opt2 + curVal.opt3 + curVal.opt4;\r\n      \r\n    }, 0);\r\n\r\n    let resultYConnections = arrY.reduce((acc, curVal) => {\r\n      acc += curVal.opt2 + curVal.opt3 + curVal.opt4;\r\n    }, 0);\r\n\r\n    if (resultXConnections >= resultYConnections) {\r\n      return arrY;\r\n    } else {\r\n      return arrX;\r\n    }\r\n  } else {\r\n    if (resultX > resultY) {\r\n      return arrY;\r\n    } else {\r\n      return arrX;\r\n    }\r\n  }\r\n}\r\n\r\nexport default PchatWithDirection;\r\n","C:\\fullstack\\desha-sintetyi\\src\\minChiburWithDirection.js",[],"C:\\fullstack\\desha-sintetyi\\src\\components\\ControlledTabs.js",["62","63","64","65","66","67","68","69","70","71"],"import \"../App.css\";\r\nimport Konva from \"../components/Konva\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Button,\r\n  InputGroup,\r\n  FormControl,\r\n  Modal,\r\n  Form,\r\n  Card,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Tabs,\r\n  Tab,\r\n  CardColumns,\r\n} from \"react-bootstrap\";\r\nimport { useEffect, useLayoutEffect, useState, useRef } from \"react\";\r\nimport { Arrow } from \"react-konva\";\r\nimport image from \"../components/tarshim.png\";\r\n// import { FaArrowDown, FaArrowLeft, FaArrowRight, FaArrowUp } from 'react-icons/fa';\r\n\r\nconst scrollToRef = (ref) => window.scrollTo(0, ref.current.offsetTop);\r\n\r\nexport default function ControlledTabs({\r\n  summary,\r\n  setopenSummary,\r\n  squares,\r\n  setsquares,\r\n  x_directionResultForClient,\r\n  y_directionResultForClient,\r\n  resultForClientPchat,\r\n  resultPchatWithDirection,\r\n  resultMinChiburWithDirection,\r\n  resultMinChiburNoDirection,\r\n}) {\r\n  const [key, setKey] = useState(\r\n    \"מינימום חיבורים + כיוון סיב אחיד בין הגלילים\"\r\n  );\r\n  const [perutTitle, setPerutTitle] = useState(\r\n    \"מינימום חיבורים + כיוון סיב אחיד בין הגלילים\"\r\n  );\r\n  const [arrayUsed, setArratUsed] = useState(resultMinChiburWithDirection);\r\n\r\n  useEffect(() => {\r\n    if (key === \"מינימום פחת\") {\r\n      setArratUsed(resultForClientPchat);\r\n    } else if (key === \"מינימום פחת + כיוון סיב אחיד בין הגלילים\") {\r\n      setArratUsed(resultPchatWithDirection);\r\n    } else if (key === \"מינימום חיבורים\") {\r\n      setArratUsed(resultMinChiburNoDirection);\r\n    } else if (key === \"מינימום חיבורים + כיוון סיב אחיד בין הגלילים\") {\r\n      setArratUsed(resultMinChiburWithDirection);\r\n    }\r\n  }, [key]);\r\n\r\n  const myRef = useRef(null);\r\n  const executeScroll = () => scrollToRef(myRef);\r\n\r\n  return (\r\n    <>\r\n      <Tabs\r\n        className='tabs'\r\n        id='controlled-tab'\r\n        activeKey={key}\r\n        onSelect={(k) => (setKey(k), setPerutTitle(k))}\r\n      >\r\n        {Object.entries(summary).map(([objKey, value], i) => (\r\n          // {/* <Tab eventKey=\"מינימום פחת + כיוון סיב אחיד\" title= \"מינימום פחת + כיוון סיב אחיד\"> */}\r\n          <Tab eventKey={value.title} title={value.title}>\r\n            {/* <Container style={{ textAlign: \"right\", display:\"flex\", flexDirection:\"column\", alignItems:\"center\"}}> */}\r\n            <Row style={{ direction: \"rtl\", margin: \"0 20px\" }}>\r\n              <Card\r\n                className='mr-5 mt-5 border-white '\r\n                border='none'\r\n                style={{ width: \"92.7%\" }}\r\n              >\r\n                <Card.Body>\r\n                  <Row md={12}>\r\n                    <Col md={3}>\r\n                      <Card.Text style={{ textAlign: \"right\" }}>\r\n                        <strong> גלילים ברוחב 2 מטר</strong> <hr></hr>\r\n                        {value.opt2length > 0 ? (\r\n                          <>\r\n                            <p> באורך: {value.opt2length} מטר </p>\r\n                          </>\r\n                        ) : null}\r\n                        {/* {value.opt2 > 25 ? (\r\n                          <>\r\n                            <p> סהכ אורך:{value.opt2length.toFixed(2)} מטר.</p>\r\n                            <p>\r\n                              {\" \"}\r\n                              כמות גלילים באורך 25 מטר:{\" \"}\r\n                              {Math.floor(value.opt2length / 25)} גלילים.\r\n                            </p>\r\n                            {value.opt2length % 25 ? (\r\n                              <p>\r\n                                ובנוסף גליל באורך{\" \"}\r\n                                {((value.opt2 * value.opt2length) % 25).toFixed(\r\n                                  2\r\n                                )}{\" \"}\r\n                                מטר.\r\n                              </p>\r\n                            ) : null}\r\n                          </>\r\n                        ) : value.opt2length > 0 ? (\r\n                          <>\r\n                            <p>גליל אחד</p>\r\n                            <p> באורך: {value.opt2length} מטר </p>\r\n                          </>\r\n                        ) : null} */}\r\n                        {value.opt2 ? <br></br> : null}\r\n                      </Card.Text>\r\n                    </Col>\r\n\r\n                    <Col md={3}>\r\n                      <Card.Text style={{ textAlign: \"right\" }}>\r\n                        <strong> גלילים ברוחב 3 מטר</strong> <hr></hr>\r\n                        {value.opt3length > 0 ? (\r\n                          <>\r\n                            <p> באורך: {value.opt3length} מטר </p>\r\n                          </>\r\n                        ) : null}\r\n                        {/* {value.opt3 > 25 ? (\r\n                          <>\r\n                            <p> סהכ אורך:{value.opt3length.toFixed(2)} מטר.</p>\r\n                            <p>\r\n                              {\" \"}\r\n                              כמות גלילים באורך 25 מטר:{\" \"}\r\n                              {Math.floor(value.opt3length / 25)} גלילים.\r\n                            </p>\r\n\r\n                            {value.opt3length % 25 ? (\r\n                              <p>\r\n                                ובנוסף גליל באורך{\" \"}\r\n                                {((value.opt3 * value.opt3length) % 25).toFixed(\r\n                                  2\r\n                                )}{\" \"}\r\n                                מטר.\r\n                              </p>\r\n                            ) : null}\r\n                          </>\r\n                        ) : value.opt3length > 0 ? (\r\n                          <>\r\n                            <p>גליל אחד.</p>\r\n                            <p> באורך: {value.opt3length} מטר. </p>\r\n                          </>\r\n                        ) : null} */}\r\n                        {value.opt3 ? <br></br> : null}\r\n                      </Card.Text>\r\n                    </Col>\r\n\r\n                    <Col md={3}>\r\n                      <Card.Text style={{ textAlign: \"right\" }}>\r\n                        <>\r\n                          {console.log(\"value.opt4length:\", value.opt4length)}\r\n                          <strong> גלילים ברוחב 4 מטר</strong> <hr></hr>\r\n                        </>\r\n\r\n                        <>\r\n                          {value.opt4 > 0 ? (\r\n                            <>\r\n                              {/* <p>כמות:גליל אחד</p> */}\r\n                              <p> באורך: {value.opt4length} מטר. </p>\r\n                            </>\r\n                          ) : null}\r\n                        </>\r\n\r\n                        {/* \r\n                        {\r\n                          value.opt4length >= 25 ? (\r\n                          <>\r\n                            <p>\r\n                              {\" \"}\r\n                              כמות גלילים באורך 25 מטר:{\" \"}\r\n                              {Math.floor(value.opt4length / 25)} גלילים.\r\n                            </p>\r\n                            {value.opt4length % 25 ? (\r\n                              <p>\r\n                                {\" \"}\r\n                                ובנוסף גליל באורך{\" \"}\r\n                                {(value.opt4length % 25).toFixed(2)} מטר.\r\n                              </p>\r\n                            ) : null}\r\n                          </>\r\n                        ) : value.opt4length < 25 ? (\r\n                          <>\r\n                            {value.opt4 > 0 ? (\r\n                              <>\r\n                                <p>כמות:גליל אחד</p>\r\n                                <p> באורך: {value.opt4length} מטר. </p>\r\n                              </>\r\n                            ) : null}{\" \"}\r\n                          </>\r\n                        ) : null} */}\r\n\r\n                        {value.opt4 ? <br></br> : null}\r\n                      </Card.Text>\r\n                    </Col>\r\n\r\n                    <Col md={3}>\r\n                      <Card.Text style={{ textAlign: \"right\" }}>\r\n                        <strong> סה\"כ פחת </strong>\r\n                        <hr></hr>\r\n                        {value.pchat > 0 ? (\r\n                          <span> {(+value.pchat).toFixed(2)} מ\"ר.</span>\r\n                        ) : (\r\n                          // <br></br>\r\n                          <span> אין פחת</span>\r\n                        )}\r\n                      </Card.Text>\r\n                    </Col>\r\n                    <div\r\n                      style={{\r\n                        marginTop: \"6rem\",\r\n                        flexDirection: \"row\",\r\n                        display: \"flex\",\r\n                      }}\r\n                    >\r\n                      <Button\r\n                        onClick={executeScroll}\r\n                        variant='success'\r\n                        style={{ margin: \"10px\" }}\r\n                      >\r\n                        לפירוט הזמנה\r\n                      </Button>\r\n                      <Button\r\n                        variant='success'\r\n                        style={{ margin: \"10px\" }}\r\n                        onClick={() => {\r\n                          setopenSummary(false);\r\n                        }}\r\n                      >\r\n                        חישוב חדש\r\n                      </Button>\r\n                      <div\r\n                        style={{\r\n                          backgroundImage: \"url(\" + image + \")\",\r\n\r\n                          // backgroundPosition: \"center\",\r\n                          backgroundSize: \"contain\",\r\n                          backgroundRepeat: \"no-repeat\",\r\n                          width: \"1000px\",\r\n                          height: \"60px\",\r\n                        }}\r\n                      ></div>\r\n                    </div>\r\n                  </Row>\r\n                </Card.Body>\r\n              </Card>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col md={12}>\r\n                <Konva\r\n                  yDirectionSquare={y_directionResultForClient}\r\n                  xDirectionSquare={x_directionResultForClient}\r\n                  resultForClientPchat={resultForClientPchat}\r\n                  resultPchatWithDirection={resultPchatWithDirection}\r\n                  resultMinChiburWithDirection={resultMinChiburWithDirection}\r\n                  resultMinChiburNoDirection={resultMinChiburNoDirection}\r\n                  summary={summary}\r\n                  tabKey={key}\r\n                  squares={squares}\r\n                  setsquares={setsquares}\r\n                  type='bottom'\r\n                />\r\n              </Col>\r\n            </Row>\r\n            {/* </Container> */}\r\n          </Tab>\r\n        ))}\r\n      </Tabs>\r\n\r\n      <h1\r\n        ref={myRef}\r\n        className='tabs'\r\n        style={{\r\n          textAlign: \"right\",\r\n          marginBottom: \"3rem\",\r\n          marginTop: \"60px\",\r\n          marginRight: \"5rem\",\r\n        }}\r\n      >\r\n        פירוט - {perutTitle}\r\n      </h1>\r\n\r\n      {/* {key === \"מינימום פחת\" && ( */}\r\n      <>\r\n        {/* <strong>מינימום פחת-פירוט</strong><br></br> */}\r\n\r\n        <Row style={{ paddingRight: \"2rem\" }} className='m-3'>\r\n          {arrayUsed.map((square, index) => {\r\n            return (\r\n              <>\r\n                <Col md={3} style={{ margin: \"1rem\" }}>\r\n                  <Card\r\n                    border='dark'\r\n                    //  bg={'secondary'}\r\n                    // bg={variant.toLowerCase()}\r\n                    // key={idx}\r\n                    // text={variant.toLowerCase() === 'light' ? 'dark' : 'white'}\r\n                    text={\"black\"}\r\n                    style={{ width: \"18rem\" }}\r\n                  >\r\n                    <Card.Header\r\n                      style={{\r\n                        background: `${square.color}`,\r\n                        opacity: \"0.8\",\r\n                      }}\r\n                    >\r\n                      <h1> מלבן מספר {index + 1} </h1>\r\n                      אורך: {square.initialLength}מטר רוחב:\r\n                      {square.initialWidth}מטר\r\n                    </Card.Header>\r\n                    <Card.Text className='perutCardText'>\r\n                      {square.opt4.amount ? (\r\n                        <>\r\n                          <strong> גלילים ברוחב 4 מטר</strong> <hr></hr>\r\n                          <p>כמות : {square.opt4.amount} גלילים.</p>\r\n                          <p>אורך : {square.opt4.length} מטר לכל גליל.</p>\r\n                        </>\r\n                      ) : null}\r\n                      {square.opt4.amount >= 1 && square.opt4.length > 25 ? (\r\n                        <>\r\n                          <hr></hr>\r\n                          <p>שים לב !</p>\r\n                          <p>אורך גליל מקסימלי הוא 25 מטר. </p>\r\n                          <p>ולכן עבור מלבן זה* תצטרך להזמין</p>\r\n                          <p>\r\n                            כמות גליל באורך מלא :{\" \"}\r\n                            {Math.floor(\r\n                              (square.opt4.length * square.opt4.amount) / 25\r\n                            )}\r\n                            .\r\n                          </p>\r\n                          <p>\r\n                            ובנוסף גליל אחד באורך\r\n                            {(square.opt4.length * square.opt4.amount) % 25}מטר.\r\n                          </p>\r\n\r\n                          <p>\r\n                            {\" \"}\r\n                            *במקרה והזנת משטחים נוספים, יש להסתכל למעלה בסיכום\r\n                            ההזמנה.\r\n                          </p>\r\n                        </>\r\n                      ) : null}\r\n\r\n                      {square.opt4.amount > 1 &&\r\n                      square.opt4.length * square.opt4.amount < 25 ? (\r\n                        <>\r\n                          <hr></hr>\r\n                          <p>סה\"כ למלבן זה:</p>\r\n                          <p>\r\n                            גליל אחד באורך{\" \"}\r\n                            {square.opt4.length * square.opt4.amount} מטר.\r\n                          </p>\r\n                        </>\r\n                      ) : null}\r\n\r\n                      {square.opt4.amount > 1 &&\r\n                      square.opt4.length * square.opt4.amount > 25 &&\r\n                      (square.opt4.length * square.opt4.amount) % 25 === 0 ? (\r\n                        <>\r\n                          <strong>סה\"כ גלילים של 4 להזמנה</strong>\r\n\r\n                          <p>\r\n                            כמות גלילים באורך 25 מטר:{\" \"}\r\n                            {Math.floor(\r\n                              (square.opt4.length * square.opt4.amount) / 25\r\n                            )}\r\n                            גלילים.\r\n                          </p>\r\n                        </>\r\n                      ) : null}\r\n\r\n                      {square.opt4.amount ? <br></br> : null}\r\n\r\n                      {square.opt3.amount ? (\r\n                        <>\r\n                          <strong> גלילים ברוחב 3 מטר</strong> <hr></hr>\r\n                          <p>כמות : {square.opt3.amount} גלילים.</p>\r\n                          <p>אורך : {square.opt3.length} מטר לכל גליל.</p>\r\n                        </>\r\n                      ) : null}\r\n\r\n                      {square.opt3.amount >= 1 && square.opt3.length > 25 ? (\r\n                        <>\r\n                          <hr></hr>\r\n                          <p>שים לב !</p>\r\n                          <p>אורך גליל מקסימלי הוא 25 מטר. </p>\r\n                          <p>ולכן עבור מלבן זה* תצטרך להזמין</p>\r\n                          <p>\r\n                            כמות גליל באורך מלא :{\" \"}\r\n                            {Math.floor(\r\n                              (square.opt3.length * square.opt3.amount) / 25\r\n                            )}\r\n                            .\r\n                          </p>\r\n                          <p>\r\n                            ובנוסף גליל אחד באורך\r\n                            {(square.opt3.length * square.opt3.amount) % 25}מטר.\r\n                          </p>\r\n                          <p>\r\n                            {\" \"}\r\n                            *במקרה והזנת משטחים נוספים, יש להסתכל למעלה בסיכום\r\n                            ההזמנה.\r\n                          </p>\r\n                        </>\r\n                      ) : null}\r\n\r\n                      {square.opt3.amount > 1 &&\r\n                      square.opt3.length * square.opt3.amount < 25 ? (\r\n                        <>\r\n                          <hr></hr>\r\n                          <p>סה\"כ למלבן זה:</p>\r\n                          <p>\r\n                            גליל אחד באורך{\" \"}\r\n                            {square.opt3.length * square.opt3.amount} מטר.\r\n                          </p>\r\n                        </>\r\n                      ) : null}\r\n\r\n                      {square.opt3.amount > 1 &&\r\n                      square.opt3.length * square.opt3.amount > 25 &&\r\n                      (square.opt3.length * square.opt3.amount) % 25 === 0 ? (\r\n                        <>\r\n                          <strong>סה\"כ גלילים של 3 להזמנה</strong>\r\n\r\n                          <p>\r\n                            כמות גלילים באורך 25 מטר:{\" \"}\r\n                            {Math.floor(\r\n                              (square.opt3.length * square.opt3.amount) / 25\r\n                            )}\r\n                            גלילים.\r\n                          </p>\r\n                        </>\r\n                      ) : null}\r\n\r\n                      {square.opt3.amount ? <br></br> : null}\r\n\r\n                      {square.opt2.amount ? (\r\n                        <>\r\n                          <strong> גלילים ברוחב 2 מטר</strong> <hr></hr>\r\n                          <p>כמות : {square.opt2.amount} גלילים.</p>\r\n                          <p>אורך : {square.opt2.length} מטר לכל גליל.</p>\r\n                        </>\r\n                      ) : null}\r\n\r\n                      {square.opt2.amount === 1 && square.opt2.length > 25 ? (\r\n                        <>\r\n                          <hr></hr>\r\n                          <p>שים לב !</p>\r\n                          <p>אורך גליל מקסימלי הוא 25 מטר. </p>\r\n                          <p>ולכן עבור מלבן זה* תצטרך להזמין</p>\r\n                          <p>\r\n                            כמות גליל באורך מלא :{\" \"}\r\n                            {Math.floor(\r\n                              (square.opt2.length * square.opt2.amount) / 25\r\n                            )}\r\n                            .\r\n                          </p>\r\n                          <p>\r\n                            ובנוסף גליל אחד באורך\r\n                            {(square.opt2.length * square.opt2.amount) % 25}מטר.\r\n                          </p>\r\n\r\n                          <p>\r\n                            {\" \"}\r\n                            *במקרה והזנת משטחים נוספים, יש להסתכל למעלה בסיכום\r\n                            ההזמנה.\r\n                          </p>\r\n                        </>\r\n                      ) : null}\r\n\r\n                      {square.opt2.amount > 1 &&\r\n                      square.opt2.length * square.opt2.amount < 25 ? (\r\n                        <>\r\n                          <hr></hr>\r\n                          <p>סה\"כ למלבן זה:</p>\r\n                          <p>\r\n                            גליל אחד באורך{\" \"}\r\n                            {square.opt2.length * square.opt2.amount} מטר.\r\n                          </p>\r\n                        </>\r\n                      ) : null}\r\n\r\n                      {square.opt2.amount > 1 &&\r\n                      square.opt2.length * square.opt2.amount > 25 &&\r\n                      (square.opt2.length * square.opt2.amount) % 25 === 0 ? (\r\n                        <>\r\n                          <strong>סה\"כ גלילים של 2 להזמנה</strong>\r\n\r\n                          <p>\r\n                            כמות גלילים באורך 25 מטר:{\" \"}\r\n                            {Math.floor(\r\n                              (square.opt2.length * square.opt2.amount) / 25\r\n                            )}\r\n                            גלילים.\r\n                          </p>\r\n                        </>\r\n                      ) : null}\r\n\r\n                      {square.opt2.amount ? <br></br> : null}\r\n\r\n                      {square.pchat ? (\r\n                        <>\r\n                          <strong>\r\n                            פחת<hr></hr>\r\n                          </strong>\r\n                          <p>סה\"כ {square.pchat} מ\"ר.</p>\r\n                          <hr></hr>\r\n                          {/* <strong>פירוט פחת</strong>  <hr></hr>\r\n                            <>\r\n                              {square.opt4.amount && square.opt4.amount * 4-square.initialWidth-square.opt3.amount * 3-square.opt2.amount * 2 > 0 ? (\r\n                              <p> {square.opt4.length} מטר על {(square.opt4.amount * 4-square.initialWidth).toFixed(1)} מטר    </p>\r\n                        ):null }</> \r\n                            <>\r\n                            {square.opt3.amount && square.opt3.amount * 3-square.initialWidth-square.opt4.amount * 4-square.opt2.amount * 2 > 0 ? (\r\n                              <p> 3 מטר על {(square.opt3.amount * 3-square.initialWidth).toFixed(1)} מטר    </p>\r\n                        ):null }</> \r\n                            <>\r\n                            {square.opt2.amount && square.opt2.amount * 2-square.initialWidth-square.opt3.amount * 3-square.opt4.amount * 4 > 0 ? (\r\n                              <p> 2 מטר על {(square.opt2.amount * 2-square.initialWidth).toFixed(1)} מטר    </p>\r\n                        ):null }</>  */}\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <strong>\r\n                            אין פחת<hr></hr>\r\n                          </strong>\r\n                        </>\r\n                      )}\r\n                    </Card.Text>\r\n                  </Card>\r\n                </Col>\r\n              </>\r\n            );\r\n          })}\r\n        </Row>\r\n      </>\r\n\r\n      {/* ) */}\r\n      {/* } */}\r\n    </>\r\n  );\r\n}\r\n","C:\\fullstack\\desha-sintetyi\\src\\components\\Konva.js",["72","73","74"],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":8,"column":3,"nodeType":"81","messageId":"82","endLine":8,"endColumn":8},{"ruleId":"79","severity":1,"message":"83","line":10,"column":3,"nodeType":"81","messageId":"82","endLine":10,"endColumn":7},{"ruleId":"79","severity":1,"message":"84","line":12,"column":3,"nodeType":"81","messageId":"82","endLine":12,"endColumn":6},{"ruleId":"79","severity":1,"message":"85","line":13,"column":3,"nodeType":"81","messageId":"82","endLine":13,"endColumn":6},{"ruleId":"79","severity":1,"message":"86","line":14,"column":3,"nodeType":"81","messageId":"82","endLine":14,"endColumn":7},{"ruleId":"79","severity":1,"message":"87","line":15,"column":3,"nodeType":"81","messageId":"82","endLine":15,"endColumn":6},{"ruleId":"79","severity":1,"message":"88","line":16,"column":3,"nodeType":"81","messageId":"82","endLine":16,"endColumn":14},{"ruleId":"79","severity":1,"message":"89","line":18,"column":31,"nodeType":"81","messageId":"82","endLine":18,"endColumn":37},{"ruleId":"79","severity":1,"message":"90","line":113,"column":10,"nodeType":"81","messageId":"82","endLine":113,"endColumn":20},{"ruleId":"91","severity":1,"message":"92","line":129,"column":6,"nodeType":"93","endLine":129,"endColumn":15,"suggestions":"94"},{"ruleId":"91","severity":1,"message":"95","line":135,"column":6,"nodeType":"93","endLine":135,"endColumn":34,"suggestions":"96"},{"ruleId":"97","severity":1,"message":"98","line":2,"column":43,"nodeType":"99","messageId":"100","endLine":2,"endColumn":45},{"ruleId":"97","severity":1,"message":"98","line":5,"column":43,"nodeType":"99","messageId":"100","endLine":5,"endColumn":45},{"ruleId":"97","severity":1,"message":"98","line":10,"column":56,"nodeType":"99","messageId":"100","endLine":10,"endColumn":58},{"ruleId":"97","severity":1,"message":"98","line":15,"column":56,"nodeType":"99","messageId":"100","endLine":15,"endColumn":58},{"ruleId":"79","severity":1,"message":"101","line":6,"column":3,"nodeType":"81","messageId":"82","endLine":6,"endColumn":13},{"ruleId":"79","severity":1,"message":"102","line":7,"column":3,"nodeType":"81","messageId":"82","endLine":7,"endColumn":14},{"ruleId":"79","severity":1,"message":"80","line":8,"column":3,"nodeType":"81","messageId":"82","endLine":8,"endColumn":8},{"ruleId":"79","severity":1,"message":"103","line":9,"column":3,"nodeType":"81","messageId":"82","endLine":9,"endColumn":7},{"ruleId":"79","severity":1,"message":"104","line":11,"column":3,"nodeType":"81","messageId":"82","endLine":11,"endColumn":12},{"ruleId":"79","severity":1,"message":"88","line":16,"column":3,"nodeType":"81","messageId":"82","endLine":16,"endColumn":14},{"ruleId":"79","severity":1,"message":"105","line":18,"column":21,"nodeType":"81","messageId":"82","endLine":18,"endColumn":36},{"ruleId":"79","severity":1,"message":"106","line":19,"column":10,"nodeType":"81","messageId":"82","endLine":19,"endColumn":15},{"ruleId":"91","severity":1,"message":"107","line":55,"column":6,"nodeType":"93","endLine":55,"endColumn":11,"suggestions":"108"},{"ruleId":"109","severity":1,"message":"110","line":66,"column":36,"nodeType":"111","messageId":"112","endLine":66,"endColumn":37},{"ruleId":"91","severity":1,"message":"113","line":37,"column":6,"nodeType":"93","endLine":37,"endColumn":14,"suggestions":"114"},{"ruleId":"79","severity":1,"message":"115","line":39,"column":12,"nodeType":"81","messageId":"82","endLine":39,"endColumn":20},{"ruleId":"116","severity":1,"message":"117","line":555,"column":27,"nodeType":"118","endLine":555,"endColumn":44},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'Modal' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'CardColumns' is defined but never used.","'useRef' is defined but never used.","'titleColor' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'bestResult' and 'summary'. Either include them or remove the dependency array.","ArrayExpression",["121"],"React Hook useEffect has missing dependencies: 'bestMinChiburNoDirection', 'bestMinChiburWithDirection', and 'bestResultPchatWithDirection'. Either include them or remove the dependency array.",["122"],"array-callback-return","Array.prototype.reduce() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'InputGroup' is defined but never used.","'FormControl' is defined but never used.","'Form' is defined but never used.","'Container' is defined but never used.","'useLayoutEffect' is defined but never used.","'Arrow' is defined but never used.","React Hook useEffect has missing dependencies: 'resultForClientPchat', 'resultMinChiburNoDirection', 'resultMinChiburWithDirection', and 'resultPchatWithDirection'. Either include them or remove the dependency array. If 'setArratUsed' needs the current value of 'resultForClientPchat', you can also switch to useReducer instead of useState and read 'resultForClientPchat' in the reducer.",["123"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","React Hook useEffect has missing dependencies: 'arrayUsed', 'resultForClientPchat', 'resultMinChiburNoDirection', 'resultMinChiburWithDirection', 'resultPchatWithDirection', 'xDirectionSquare', and 'yDirectionSquare'. Either include them or remove the dependency array. If 'setarrayUsed' needs the current value of 'resultMinChiburWithDirection', you can also switch to useReducer instead of useState and read 'resultMinChiburWithDirection' in the reducer.",["124"],"'testFunc' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},"Update the dependencies array to be: [bestResult, squares, summary]",{"range":"133","text":"134"},"Update the dependencies array to be: [bestMinChiburNoDirection, bestMinChiburWithDirection, bestResultPchatWithDirection, x_directionResultForClient]",{"range":"135","text":"136"},"Update the dependencies array to be: [key, resultForClientPchat, resultMinChiburNoDirection, resultMinChiburWithDirection, resultPchatWithDirection]",{"range":"137","text":"138"},"Update the dependencies array to be: [arrayUsed, resultForClientPchat, resultMinChiburNoDirection, resultMinChiburWithDirection, resultPchatWithDirection, tabKey, xDirectionSquare, yDirectionSquare]",{"range":"139","text":"140"},[3727,3736],"[bestResult, squares, summary]",[3873,3901],"[bestMinChiburNoDirection, bestMinChiburWithDirection, bestResultPchatWithDirection, x_directionResultForClient]",[1615,1620],"[key, resultForClientPchat, resultMinChiburNoDirection, resultMinChiburWithDirection, resultPchatWithDirection]",[1170,1178],"[arrayUsed, resultForClientPchat, resultMinChiburNoDirection, resultMinChiburWithDirection, resultPchatWithDirection, tabKey, xDirectionSquare, yDirectionSquare]"]